{"version":3,"file":"pulse.min.js","sources":["../lib/Dep.ts","../lib/computed.ts","../lib/relationController.ts","../lib/runtime.ts","../lib/helpers.ts","../lib/dep.ts","../lib/reactive.ts","../lib/action.ts","../lib/module/module.ts","../lib/Reactive.ts","../lib/module/modules/collection.ts","../lib/subController.ts","../lib/storage.ts","../lib/collections/request.ts","../lib/intergrations/react.intergration.ts","../lib/intergrations/vue.intergration.ts","../lib/intergrations/use.ts","../lib/main.ts"],"sourcesContent":["import { Global, ModuleInstance } from './interfaces';\nimport { DynamicRelation, RelationTypes } from './relationController';\nimport Collection from './module/modules/collection';\nimport { JobType } from './runtime';\nimport Computed from './computed';\nimport { ComponentContainer } from './subController';\nexport default class Dep {\n  // these\n  public dependents: Set<Computed> = new Set();\n  public subscribers: Set<ComponentContainer> = new Set();\n\n  // these are temporary relations created by the relation controller\n  public dynamicRelation: DynamicRelation = null;\n\n  // used to stop computed methods from tracking properties accessed within nested actions as dependecies\n  public currentActionIndex: boolean | number = false;\n\n  public subscribersToInternalDataAsCallbacks: Array<Function> = [];\n\n  constructor(\n    private global: Global,\n    // if this dep is for public or internal data within a collection\n    public type: 'reactive' | 'internal' | 'index' = 'reactive',\n    // the name of the coll\n    public parentModuleInstance: ModuleInstance,\n    // either the name of the object if reactive or the primaryKey if internal\n    public propertyName: string | number,\n    // if the dep is part of a deep reactive object, this is the root property name\n    public rootProperty: string = null\n  ) {}\n\n  // for when public data is accessed, reactive class will trigger this function\n  register() {\n    const subs = this.global.subs;\n    const name = this.propertyName as string;\n\n    if (this.type === 'reactive') {\n      if (this.global.runningComputed && !this.global.runningWatcher) {\n        // register dependent\n        this.dependents.add(this.global.runningComputed);\n\n        // if this property is a computed function that has not ran at least once\n\n        if (\n          this.parentModuleInstance.keys.computed.includes(this\n            .propertyName as string) &&\n          !this.parentModuleInstance.isComputedReady(this\n            .propertyName as string)\n        ) {\n          // re-queue the computed function that is currently running\n          // (not the one that is being accessed) this will give the unready computed\n          // function a chance to run before this one is ran again, since runningComputed depends on the\n          // output of this computed function\n          // console.log('reingesting');\n          this.global.runtime.ingest({\n            type: JobType.COMPUTED_REGEN,\n            property: this.global.runningComputed as Computed,\n            collection: this.parentModuleInstance\n          });\n        }\n      }\n    } else if (this.type === 'internal') {\n    }\n\n    let dataDep = this.global.runningPopulate as Dep;\n    // if the data's dep class\n    // action index matches the current action, create dynamic relation\n    if (\n      dataDep &&\n      dataDep.currentActionIndex === this.global.runtime.runningActions.length\n    )\n      this.global.relations.relate(dataDep, this);\n\n    if (this.global.subs.trackingComponent)\n      this.subscribe(this.global.subs.trackingComponent);\n\n    // idk how i plan to use this...\n    if (subs.unsubscribingComponent) {\n      // this.subscribers.delete(this.global.subscribingComponent);\n    }\n  }\n\n  changed(newValue, config: any = {}) {\n    let collection = this.parentModuleInstance as Collection;\n\n    if (this.dynamicRelation)\n      this.global.relations.cleanup(this.dynamicRelation);\n\n    if (this.type === 'internal') {\n      // get dynamic data\n      const dataWithDynamicProperties = collection.injectDynamicRelatedData(\n        newValue[collection.primaryKey as string],\n        newValue\n      );\n      // run all callbacks and pass in dynamic data, unless important\n      this.subscribersToInternalDataAsCallbacks.forEach(callback =>\n        callback(\n          config.important\n            ? { ...dataWithDynamicProperties, ...newValue }\n            : dataWithDynamicProperties\n        )\n      );\n    }\n  }\n\n  subscribe(componentContainer: ComponentContainer) {\n    componentContainer.deps.add(this);\n    this.subscribers.add(componentContainer);\n  }\n}\n","import { Global, ModuleInstance } from './interfaces';\nimport Collection from './module/modules/collection';\nimport Module from './module';\nimport { DynamicRelation } from './relationController';\nimport { JobType } from './runtime';\n\nexport default class Computed {\n  public relatedToGroup: Array<any> = [];\n  public dynamicRelation: DynamicRelation = null;\n  public hasRun: boolean = false;\n  constructor(\n    private global: Global,\n    public parentModuleInstance: ModuleInstance,\n    public name: string,\n    private computedFunction: (context: object) => any\n  ) {}\n\n  public run() {\n    this.hasRun = true;\n\n    this.global.relations.cleanup(this.dynamicRelation);\n\n    this.global.runningComputed = this;\n\n    let context = this.global.getContext(this.parentModuleInstance);\n    let output: any;\n    try {\n      output = this.computedFunction(context);\n    } catch (error) {\n      // during init computed functions that depend on the output of other computed function will throw an error since that computed function has not generated yet\n      // fail silently and flush runtime\n      this.global.runtime.finished();\n      // if init complete, fail loudly\n      if (this.global.initComplete) console.error(error);\n    }\n    // override output with default if undefined or null\n    if (\n      (output === undefined || output === null) &&\n      this.global.config.computedDefault\n    )\n      output = this.global.config.computedDefault;\n\n    this.global.runningComputed = false;\n\n    return output;\n  }\n}\n","import { Global } from './interfaces';\nimport Computed from './computed';\nimport Dep from './dep';\n\nexport class DynamicRelation {\n  public depsToClean: Set<Dep> = new Set();\n  constructor(public updateThis: Dep | Computed) {}\n\n  // perform cleanup of all references to this instance\n  public destroy() {\n    this.depsToClean.forEach(dep => dep.dependents.delete(this));\n    delete this.updateThis.dynamicRelation;\n  }\n}\n\nexport default class RelationController {\n  private relationBank: Set<DynamicRelation> = new Set();\n\n  constructor(private global: Global) {}\n\n  // function called during runningComputed and runningPopulate\n  public relate(updateThis: Computed | Dep, whenDepChanges: Dep) {\n    if (!whenDepChanges) return; // if a dep is not found, abort\n    let dep = whenDepChanges;\n\n    if (!updateThis.dynamicRelation) {\n      updateThis.dynamicRelation = new DynamicRelation(updateThis);\n      this.relationBank.add(updateThis.dynamicRelation);\n    }\n\n    // save Dep inside relation so relation knows where to remove dependent from on cleanup\n    updateThis.dynamicRelation.depsToClean.add(dep);\n\n    // add dynamic relation as a dependent inside Dep\n    dep.dependents.add(updateThis.dynamicRelation);\n  }\n\n  // when a job is complete with a dep that includes a dynamic\n  public cleanup(dynamicRelation: DynamicRelation): void {\n    // perform cleanup, destroy dynamic relation\n    if (!dynamicRelation) return;\n    dynamicRelation.destroy(); // destroy all references\n    this.relationBank.delete(dynamicRelation); // remove last reference from bank\n  }\n}\n\nexport enum RelationTypes {\n  COMPUTED_DEPENDS_ON_DATA = 'COMPUTED_DEPENDS_ON_DATA', // used by findById() when run in computed\n  COMPUTED_DEPENDS_ON_GROUP = 'COMPUTED_DEPENDS_ON_GROUP', // used by getGroup() when run in computed\n  DATA_DEPENDS_ON_DEP = 'DATA_DEPENDS_ON_DEP', // the Dep class of a property when used in populate()\n  DATA_DEPENDS_ON_GROUP = 'DATA_DEPENDS_ON_GROUP', // used by getGroup() when run in populate()\n  DATA_DEPENDS_ON_DATA = 'DATA_DEPENDS_ON_DATA' // used by findById() when run in populate()\n}\n","import { Global, ModuleInstance } from './interfaces';\nimport Dep from './Dep';\nimport Computed from './computed';\nimport { DynamicRelation } from './relationController';\nimport { ComponentContainer } from './subController';\nimport Action from './action';\nimport Collection from './module/modules/collection';\nimport Module from './module';\nimport Pulse from './main';\n\nexport interface Job {\n  type: JobType;\n  collection: ModuleInstance;\n  property: string | number | Computed;\n  value?: any;\n  previousValue?: any;\n  dep?: Dep;\n  fromAction?: boolean | Action;\n  config?: Object;\n}\n\nexport enum JobType {\n  PUBLIC_DATA_MUTATION = 'PUBLIC_DATA_MUTATION',\n  INTERNAL_DATA_MUTATION = 'INTERNAL_DATA_MUTATION',\n  INDEX_UPDATE = 'INDEX_UPDATE',\n  COMPUTED_REGEN = 'COMPUTED_REGEN',\n  GROUP_UPDATE = 'GROUP_UPDATE',\n  SOFT_GROUP_UPDATE = 'SOFT_GROUP_UPDATE',\n  DELETE_INTERNAL_DATA = 'DELETE_INTERNAL_DATA'\n}\nexport default class Runtime {\n  public updatingSubscribers: Boolean = false;\n\n  public runningJob: Job | boolean = false;\n  private ingestQueue: Array<Job> = [];\n  private completedJobs: Array<Job> = [];\n  private archivedJobs: Array<Job> = [];\n\n  // global action state\n  public runningActions: Array<Action> = [];\n  public runningAction: Action | boolean = false;\n\n  // private collections: Object;\n  private config: Object;\n\n  constructor(private collections: Object, private global: Global) {\n    global.ingest = this.ingest.bind(this);\n    global.ingestDependents = this.ingestDependents.bind(this);\n    this.config = global.config;\n  }\n\n  // The primary entry point for Runtime, all jobs should come through here\n  public ingest(job: Job): void {\n    // if last job is identical to current job\n    // since completed jobs is cleared after a component update is issued this SHOULDN't prevent\n    // the same thing happening twice (pls test tho)\n    // if (\n    //   this.runningJob &&\n    //   job.property === (this.runningJob as Job).property &&\n    //   job.collection === (this.runningJob as Job).collection\n    // ) {\n    //   // console.error('Pulse: Infinate job loop prevented', job);\n    //   // return;\n    // }\n    this.ingestQueue.push(job);\n    // don't begin the next job until this one is fully complete\n    if (!this.runningJob) {\n      this.findNextJob();\n    }\n  }\n\n  public queue(job: Job): void {\n    this.ingestQueue.push(job);\n  }\n\n  public run(): void {\n    if (!this.runningJob) this.findNextJob();\n  }\n\n  private findNextJob() {\n    // shift the next job from the queue\n    let next = this.ingestQueue.shift();\n\n    if (!next) return;\n\n    // get dep if dep not included on ingest\n    if (!next.dep && next.type === JobType.INTERNAL_DATA_MUTATION) {\n      next.dep = (next.collection as Collection).getDataDep(\n        next.property as string\n      ) as Dep;\n    } else if (!next.dep && next.type !== JobType.INDEX_UPDATE)\n      // groups, computed and indexes will not have their Dep class, so get it.\n      next.dep = next.collection.getDep(next.property as string) as Dep;\n\n    this.runningJob = next;\n    // execute the next task in the queue\n    this.performJob(next);\n  }\n\n  private loadPreviousValue(job: Job) {\n    let location: 'indexes' | 'public';\n    if (job.type === JobType.INDEX_UPDATE) location = 'indexes';\n    else if (\n      job.type === JobType.COMPUTED_REGEN ||\n      job.type === JobType.SOFT_GROUP_UPDATE\n    )\n      location = 'public';\n    return job.collection[location].privateGet(job.property);\n  }\n\n  private performJob(job: Job): void {\n    const pre = job.hasOwnProperty(job.previousValue);\n\n    this.global.log(job);\n\n    switch (job.type) {\n      case JobType.PUBLIC_DATA_MUTATION:\n        this.performPublicDataUpdate(job);\n        job.collection.runWatchers(job.property);\n        break;\n      case JobType.INTERNAL_DATA_MUTATION:\n        this.performInternalDataUpdate(job);\n        break;\n      case JobType.INDEX_UPDATE:\n        // if (!pre) job.previousValue = this.loadPreviousValue(job);\n\n        this.performIndexUpdate(job);\n        break;\n      case JobType.COMPUTED_REGEN:\n        // if (!pre) job.previousValue = this.loadPreviousValue(job);\n        this.performComputedOutput(job);\n        job.collection.runWatchers((job.property as Computed).name);\n        break;\n      case JobType.GROUP_UPDATE:\n        this.performGroupRebuild(job);\n        job.collection.runWatchers(job.property);\n        break;\n      case JobType.SOFT_GROUP_UPDATE:\n        // if (!pre) job.previousValue = this.loadPreviousValue(job);\n        this.performGroupRebuild(job);\n        job.collection.runWatchers(job.property);\n        break;\n      case JobType.DELETE_INTERNAL_DATA:\n        this.performInternalDataDeletion(job);\n        break;\n      default:\n        break;\n    }\n\n    // unpack dependents\n    if (job.dep && job.dep.dependents.size > 0) {\n      this.ingestDependents(job.dep.dependents);\n    }\n\n    this.finished();\n  }\n\n  public ingestDependents(dependents: Set<any>): void {\n    // this is called twice below\n    const ingestComputed = (computed: Computed) =>\n      this.ingest({\n        type: JobType.COMPUTED_REGEN,\n        collection: computed.parentModuleInstance,\n        property: computed,\n        dep: computed.parentModuleInstance.getDep(computed.name) as Dep\n      });\n\n    // for each dependent stored in dep class\n    dependents.forEach(dependent => {\n      // there are two types of dependents stored: Computed and DynamicRelation\n      if (dependent instanceof Computed) ingestComputed(dependent);\n      else if (dependent instanceof DynamicRelation) {\n        // one might think using \"instanceOf\" would work as expected below\n        // but it doesn't, alas I hate javascript.\n        // temp fix: constructor.name - be my guest try and fix this??\n        const type = dependent.updateThis.constructor.name;\n        // DynamicRelation can store either Computed or Dep (internal)\n        if (type === Computed.name)\n          ingestComputed(dependent.updateThis as Computed);\n        else if (type === Dep.name) {\n          // ingest internal data mutation without a value will result in a soft group update\n          this.ingest({\n            type: JobType.INTERNAL_DATA_MUTATION,\n            collection: (dependent.updateThis as Dep).parentModuleInstance,\n            property: (dependent.updateThis as Dep).propertyName\n          });\n        }\n      }\n    });\n  }\n\n  // ****************** Perform Functions ****************** //\n  private performPublicDataUpdate(job: Job): void {\n    job.collection.public.privateWrite(job.property, job.value);\n    this.completedJob(job);\n  }\n\n  private performInternalDataUpdate(job: Job): void {\n    // if job was not ingested with a value, get the most recent value from collection database\n    let collection = job.collection as Collection;\n    let property = job.property as string | number;\n    if (!job.value) {\n      if (collection.internalData[property])\n        job.value = collection.internalData[property];\n      // this would usually be redundant, since the data has not changed, but since the relationController has no access to the collections, but does need to trigger data to rebuild, it issues an internal data \"update\". It's own data has not changed, but the dynamic data related to it via populate() has.\n    }\n\n    // overwrite or insert the data into collection database\n    this.overwriteInternalData(\n      collection,\n      job.property as string | number,\n      job.value\n    );\n\n    // collection function handels ingesting indexes to update itself, since it waits until\n    // all internal data has been ingested before handling the affected indexes\n    // however for direct data modifications we should update afected indexes\n    if (!this.global.collecting) {\n      // affected indexes is an array of indexes that have this primary key (job.property) present.\n      const affectedIndexes: Array<\n        string\n      > = collection.searchIndexesForPrimaryKey(property);\n\n      affectedIndexes.forEach(index => {\n        // since this is a singular piece of data that has changed, we do not need to\n        // rebuild the entire group, so we can soft rebuild\n        let modifiedGroup = collection.softUpdateGroupData(property, index);\n\n        this.ingest({\n          type: JobType.SOFT_GROUP_UPDATE,\n          collection: collection,\n          value: modifiedGroup,\n          property: index,\n          dep: collection.getDep(index) as Dep\n          // we do not need a previousValue because groups are cached outputs and reversing the internal data update will do the trick\n        });\n      });\n    }\n\n    this.completedJob(job);\n  }\n\n  private performInternalDataDeletion(job: Job): void {\n    const c = job.collection as Collection;\n    const property = job.property as string | number;\n    // preserve previous value\n    // job.previousValue = { ...c.internalData[job.property] };\n    // delete data\n    delete c.internalData[property];\n    // find indexes affected by this data deletion\n    const indexesToUpdate = c.searchIndexesForPrimaryKey(property);\n\n    // for each found index, perform index update\n    for (let i = 0; i < indexesToUpdate.length; i++) {\n      const indexName = indexesToUpdate[i];\n      const newIndex = [...c.indexes.object[indexName]].filter(\n        id => id !== job.property\n      );\n      this.ingest({\n        type: JobType.INDEX_UPDATE,\n        collection: c,\n        property: indexName,\n        value: newIndex,\n        dep: c.getDep(job.property as string) as Dep\n      });\n    }\n    this.completedJob(job);\n  }\n\n  private performIndexUpdate(job: Job): void {\n    // Update Index\n    const c = job.collection as Collection;\n    c.indexes.privateWrite(job.property, job.value);\n    this.completedJob(job);\n\n    // Group must also be updated\n    this.ingest({\n      type: JobType.GROUP_UPDATE,\n      collection: job.collection,\n      property: job.property,\n      dep: job.collection.getDep(job.property as string) as Dep\n    });\n  }\n\n  private performGroupRebuild(job: Job): void {\n    const c = job.collection as Collection;\n    const property = job.property as string;\n    // soft group rebuilds already have a generated value, otherwise generate the value\n    if (!job.value) {\n      job.value = c.buildGroupFromIndex(property);\n    }\n\n    // TODO: trigger relaction controller to update group relations\n    // this.global.relations.groupModified(job.collection, job.property);\n    job.collection.public.privateWrite(job.property, job.value);\n    this.completedJob(job);\n  }\n\n  public performComputedOutput(job: Job): void {\n    const computed: Computed =\n      typeof job.property === 'string'\n        ? job.collection.computed[job.property]\n        : job.property;\n\n    job.value = computed.run();\n    // Commit Update\n    job.collection.public.privateWrite(computed.name, job.value);\n    this.completedJob(job);\n  }\n\n  // ****************** Handlers ****************** //\n  private completedJob(job: Job): void {\n    // if action is running, save that action instance inside job payload\n    job.fromAction = this.runningAction;\n    // during runtime log completed job ready for component updates\n    if (this.global.initComplete) this.completedJobs.push(job);\n    // if data is persistable ensure storage is updated with new data\n    this.persistData(job);\n\n    // tell the dep the parent changed\n    if (job.dep) job.dep.changed(job.value, job.config);\n\n    // if running action save this job inside the action class\n    if (this.runningAction) (this.runningAction as Action).changes.add(job);\n  }\n\n  public finished(): void {\n    this.runningJob = false;\n\n    // If there's already more stuff in the queue, loop.\n    if (this.ingestQueue.length > 0) {\n      this.findNextJob();\n      return;\n    }\n\n    // Wait until callstack is empty to check if we should finalise this body of work\n    setTimeout(() => {\n      if (this.ingestQueue.length === 0) {\n        this.compileComponentUpdates();\n      } else {\n        this.findNextJob();\n      }\n    });\n  }\n\n  // ****************** End Runtime Events ****************** //\n\n  private compileComponentUpdates(): void {\n    if (!this.global.initComplete) return;\n    this.updatingSubscribers = true;\n    this.global.log('JOBS COMPLETE', this.completedJobs);\n\n    const componentsToUpdate = {};\n\n    // for all completed jobs\n    for (let i = 0; i < this.completedJobs.length; i++) {\n      const job = this.completedJobs[i];\n\n      // if job has a Dep class present\n      // Dep class contains subscribers to that property (as a completed job)\n      if (job.dep) {\n        let subscribers: Set<ComponentContainer> = job.dep.subscribers;\n\n        // for all the subscribers\n        subscribers.forEach(cC => {\n          // add to componentsToUpdate (ensuring update & component is unique)\n          let uuid: string = cC.uuid;\n\n          // if component container has mappable data\n          if (\n            typeof cC.evaluated === 'object' &&\n            !Array.isArray(cC.evaluated)\n          ) {\n            // will cause blind re-render\n            let keys = Object.keys(cC.evaluated);\n            keys.forEach(key => {\n              if (!componentsToUpdate[uuid]) {\n                // if this component isn't already registered for this particular update, add it.\n                componentsToUpdate[uuid] = {};\n                componentsToUpdate[uuid][key] = job.value;\n                // otherwise add the update to the component\n              } else {\n                componentsToUpdate[uuid][key] = job.value;\n              }\n            });\n          } else {\n            if (!componentsToUpdate[uuid]) componentsToUpdate[uuid] = false;\n          }\n        });\n      }\n    }\n\n    this.updateSubscribers(componentsToUpdate);\n    this.completedJobs = [];\n  }\n\n  private updateSubscribers(componentsToUpdate) {\n    const componentKeys = Object.keys(componentsToUpdate);\n    // for each component\n    for (let i = 0; i < componentKeys.length; i++) {\n      const componentID = componentKeys[i];\n      // get component container\n      const cC: ComponentContainer = this.global.subs.componentStore[\n        componentID\n      ];\n      if (!cC || !cC.instance) return;\n\n      const propertiesToUpdate = componentsToUpdate[componentID];\n\n      if (Pulse.intergration)\n        Pulse.intergration.updateMethod(cC.instance, propertiesToUpdate);\n    }\n  }\n\n  // TODO: add moduleType to module class and store persist keys with that in mind, since persisting data won't work for modules with the same name, although devs should not be creating modules with the same name, i don't even think thats possible\n  private persistData(job: Job): void {\n    if (job.type === JobType.INTERNAL_DATA_MUTATION) return;\n    if (job.collection.persist.includes(job.property)) {\n      this.global.storage.set(job.collection.name, job.property, job.value);\n    }\n  }\n\n  // ****************** Misc Handlers ****************** //\n\n  private overwriteInternalData(\n    collection: Collection,\n    primaryKey: string | number,\n    newData: any\n  ): object | boolean {\n    const internalData = collection.internalData;\n    // create a copy of the original data\n    const currentData = internalData[primaryKey]\n      ? { ...internalData[primaryKey] }\n      : false;\n\n    if (currentData) {\n      // data already exists, merge objects and return previous object\n      const keys = Object.keys(newData || {});\n      for (let i = 0; i < keys.length; i++) {\n        const property = keys[i];\n        internalData[primaryKey][property] = newData[property];\n      }\n      return currentData;\n    } else {\n      // data does not exist, write and return false\n      internalData[primaryKey] = newData;\n      return false;\n    }\n  }\n}\n","export const protectedNames = [\n  'data',\n  'indexes',\n  'groups',\n  'computed',\n  'actions',\n  'routes'\n];\n\nexport const collectionFunctions = [\n  // module & collection\n  'watch',\n  'throttle',\n  'addStaticData',\n  'debounce',\n  'forceUpdate',\n\n  // collection only\n  'collect',\n  'collectByKeys',\n  'replaceIndex',\n  'getGroup',\n  'newGroup',\n  'deleteGroup',\n  'removeFromGroup',\n  'update',\n  'increment',\n  'decrement',\n  'delete',\n  'purge',\n  'findById',\n  'put',\n  'move',\n  'watchData',\n  'cleanse',\n  // 'unsubscribe',\n  // deprecated\n  'remove'\n];\n\nexport function defineConfig(config, defaults) {\n  return { ...defaults, ...config };\n}\n\nexport function parse(key: string) {\n  let primaryKey: string | number = key.split('/')[1];\n\n  let canBeNumber = Number(primaryKey);\n  if (canBeNumber !== NaN) primaryKey = canBeNumber;\n\n  return {\n    collection: key.split('/')[0],\n    primaryKey\n  };\n}\n\nexport function genId(): string {\n  return (\n    Math.random()\n      .toString()\n      .split('.')[1] + Date.now()\n  );\n}\n\nexport function objectLoop(object, callback, keys?: Array<any>) {\n  const objectKeys = keys ? keys : Object.keys(object);\n  for (let i = 0; i < objectKeys.length; i++) {\n    const key: string = objectKeys[i];\n    const value: any = object[key];\n    callback(key, value, objectKeys);\n  }\n}\n\nexport function isWatchableObject(value) {\n  function isHTMLElement(obj) {\n    try {\n      return obj instanceof HTMLElement;\n    } catch (e) {\n      return (\n        typeof obj === 'object' &&\n        obj.nodeType === 1 &&\n        typeof obj.style === 'object' &&\n        typeof obj.ownerDocument === 'object'\n      );\n    }\n  }\n  let type = typeof value;\n  return (\n    value != null &&\n    type == 'object' &&\n    !isHTMLElement(value) &&\n    !Array.isArray(value)\n  );\n}\n\n// const thing = {}\n// objectLoop(thing, (thingKey, thingItem) => {\n\n// })\n\nexport function log(value: any, payload?: any) {\n  // console.log(`Pulse / ${value}`, payload ? payload : ' ');\n}\nexport function key(collection: string, property?: string | number) {\n  return `${collection}/${property}`;\n}\n\nexport function normalizeMap(map) {\n  return Array.isArray(map)\n    ? map.map(key => ({ key, val: key }))\n    : Object.keys(map).map(key => ({ key, val: map[key] }));\n}\n\nexport const arrayFunctions = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\nexport function cleanse(object: any) {\n  if (!isWatchableObject(object)) return object;\n  const clean = Object.assign({}, object);\n  const properties = Object.keys(clean);\n\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n\n    if (isWatchableObject(clean[property])) {\n      clean[property] = cleanse(clean[property]);\n    }\n  }\n  return clean;\n}\n\nexport function assert(\n  func: (warnings: { [key: string]: any }) => any,\n  funcName?: string\n) {\n  function warn(message) {\n    // if (funcName) console.log(`PULSE // \"${funcName}()\" :: ${message}`);\n    // else console.warn(`PULSE :: ${message}`);\n    return false;\n  }\n  const warnings = {\n    NO_PRIMARY_KEY: () => warn('No primary $1 key found! $2'),\n    INVALID_PARAMETER: () => warn('Invalid parameter supplied to function.'),\n    INDEX_NOT_FOUND: () => warn('Index was not found on collection.'),\n    INTERNAL_DATA_NOT_FOUND: () => warn('Data was not found on collection.'),\n    PROPERTY_NOT_A_NUMBER: () => warn('Property is not a number!')\n  };\n  return func(warnings)();\n}\n\nexport function validateNumber(mutable, amount) {\n  if (typeof amount !== 'number' || typeof mutable !== 'number') {\n    return false;\n  }\n  return true;\n}\n\nexport function createObj(\n  array: Array<any> = [],\n  sourceObject: Object = {}\n): Object {\n  let newObj = {};\n  for (let i = 0; i < array.length; i++) {\n    let property = array[i];\n    if (sourceObject[property]) newObj[property] = sourceObject[property];\n  }\n  return newObj;\n}\n// groups are defined by the user as an array of strings, this converts them into object/keys\nexport function normalizeGroups(groupsAsArray: any = []) {\n  const groups: object = {};\n  for (let i = 0; i < groupsAsArray.length; i++) {\n    const groupName = groupsAsArray[i];\n    groups[groupName] = [];\n  }\n  return groups;\n}\n","import { Global, ModuleInstance } from './interfaces';\nimport { DynamicRelation, RelationTypes } from './relationController';\nimport Collection from './module/modules/collection';\nimport { JobType } from './runtime';\nimport Computed from './computed';\nimport { ComponentContainer } from './subController';\nexport default class Dep {\n  // these\n  public dependents: Set<Computed> = new Set();\n  public subscribers: Set<ComponentContainer> = new Set();\n\n  // these are temporary relations created by the relation controller\n  public dynamicRelation: DynamicRelation = null;\n\n  // used to stop computed methods from tracking properties accessed within nested actions as dependecies\n  public currentActionIndex: boolean | number = false;\n\n  public subscribersToInternalDataAsCallbacks: Array<Function> = [];\n\n  constructor(\n    private global: Global,\n    // if this dep is for public or internal data within a collection\n    public type: 'reactive' | 'internal' | 'index' = 'reactive',\n    // the name of the coll\n    public parentModuleInstance: ModuleInstance,\n    // either the name of the object if reactive or the primaryKey if internal\n    public propertyName: string | number,\n    // if the dep is part of a deep reactive object, this is the root property name\n    public rootProperty: string = null\n  ) {}\n\n  // for when public data is accessed, reactive class will trigger this function\n  register() {\n    const subs = this.global.subs;\n    const name = this.propertyName as string;\n\n    if (this.type === 'reactive') {\n      if (this.global.runningComputed && !this.global.runningWatcher) {\n        // register dependent\n        this.dependents.add(this.global.runningComputed);\n\n        // if this property is a computed function that has not ran at least once\n\n        if (\n          this.parentModuleInstance.keys.computed.includes(this\n            .propertyName as string) &&\n          !this.parentModuleInstance.isComputedReady(this\n            .propertyName as string)\n        ) {\n          // re-queue the computed function that is currently running\n          // (not the one that is being accessed) this will give the unready computed\n          // function a chance to run before this one is ran again, since runningComputed depends on the\n          // output of this computed function\n          // console.log('reingesting');\n          this.global.runtime.ingest({\n            type: JobType.COMPUTED_REGEN,\n            property: this.global.runningComputed as Computed,\n            collection: this.parentModuleInstance\n          });\n        }\n      }\n    } else if (this.type === 'internal') {\n    }\n\n    let dataDep = this.global.runningPopulate as Dep;\n    // if the data's dep class\n    // action index matches the current action, create dynamic relation\n    if (\n      dataDep &&\n      dataDep.currentActionIndex === this.global.runtime.runningActions.length\n    )\n      this.global.relations.relate(dataDep, this);\n\n    if (this.global.subs.trackingComponent)\n      this.subscribe(this.global.subs.trackingComponent);\n\n    // idk how i plan to use this...\n    if (subs.unsubscribingComponent) {\n      // this.subscribers.delete(this.global.subscribingComponent);\n    }\n  }\n\n  changed(newValue, config: any = {}) {\n    let collection = this.parentModuleInstance as Collection;\n\n    if (this.dynamicRelation)\n      this.global.relations.cleanup(this.dynamicRelation);\n\n    if (this.type === 'internal') {\n      // get dynamic data\n      const dataWithDynamicProperties = collection.injectDynamicRelatedData(\n        newValue[collection.primaryKey as string],\n        newValue\n      );\n      // run all callbacks and pass in dynamic data, unless important\n      this.subscribersToInternalDataAsCallbacks.forEach(callback =>\n        callback(\n          config.important\n            ? { ...dataWithDynamicProperties, ...newValue }\n            : dataWithDynamicProperties\n        )\n      );\n    }\n  }\n\n  subscribe(componentContainer: ComponentContainer) {\n    componentContainer.deps.add(this);\n    this.subscribers.add(componentContainer);\n  }\n}\n","import { protectedNames, arrayFunctions, isWatchableObject } from './helpers';\nimport Dep from './dep';\nimport { Global, ModuleInstance } from './interfaces';\nimport Module from './module';\nimport { JobType } from './runtime';\nimport Computed from './computed';\n\ninterface Obj {\n  [key: string]: any;\n}\n\nexport default class Reactive {\n  public properties: Array<string>;\n  public object: Obj;\n  public global: Global;\n  public ghosts: Object = {}; // used by indexes only\n\n  private allowPrivateWrite: boolean = false;\n  private touching: boolean = false;\n  private touched: null | Dep;\n  private sneaky: boolean;\n  private tempDeps: { [key: string]: Dep } = {};\n\n  constructor(\n    private parentModuleInstance: ModuleInstance,\n    object: Obj = {},\n    public mutableProperties: Array<string>,\n    public type: 'public' | 'indexes' = 'public'\n  ) {\n    this.global = parentModuleInstance.global;\n    this.properties = [...Object.keys(object), ...mutableProperties];\n    this.object = this.reactiveObject(object);\n  }\n\n  reactiveObject(object: Obj, rootProperty?: string): object {\n    const objectKeys = rootProperty ? Object.keys(object) : this.properties;\n\n    // Loop over all properties of the to-be reactive object\n    for (let i = 0; i < objectKeys.length; i++) {\n      const key = objectKeys[i];\n      this.defineProperty(object, key, rootProperty);\n    }\n    return object;\n  }\n\n  private defineProperty(\n    object: Obj,\n    key: string,\n    rootProperty?: string\n  ): object {\n    const self = this;\n    let value = object[key];\n    if (object.rootProperty) rootProperty = object.rootProperty;\n\n    // // If property is an array, make it reactive\n    // if (Array.isArray(value)) {\n    //   // value = this.reactiveArray(value, key);\n    // }\n\n    // rootProperty should be the current key if first deep object\n    if (isWatchableObject(value) && !protectedNames.includes(key)) {\n      value = this.deepReactiveObject(value, rootProperty || key, key);\n    }\n\n    // Create an instance of the dependency tracker\n    const dep = this.createDep(key, rootProperty);\n\n    Object.defineProperty(object, key, {\n      get: function pulseGetter() {\n        if (self.sneaky || self.global.gettingContext) return value;\n\n        // used by getDep on Module instance\n        if (self.global.touching) {\n          self.global.touched = dep;\n          return value;\n        }\n\n        // used by subController to get several deps at once\n        if (self.global.subs.trackAllDeps) {\n          self.global.subs.trackedDeps.add(dep);\n          return value;\n        }\n\n        dep.register();\n\n        return value;\n      },\n      set: function pulseSetter(newValue) {\n        // DEEP REACTIVE handler: \"rootProperty\" indicates if the object is \"deep\".\n        if (rootProperty && self.mutableProperties.includes(rootProperty)) {\n          // mutate locally\n          value = newValue;\n          // ingest mutation for deep property\n          self.global.runtime.ingest({\n            type: JobType.PUBLIC_DATA_MUTATION,\n            collection: self.parentModuleInstance,\n            property: rootProperty,\n            value: self.object[rootProperty],\n            dep\n          });\n\n          // Regular mutations\n        } else {\n          // if a protected name allow direct mutation\n          if (protectedNames.includes(key)) {\n            return (value = newValue);\n          }\n          // if backdoor open allow direct mutation\n          if (self.allowPrivateWrite) {\n            // dynamically convert new values to reactive if objects\n            // This is risky as fuck and kinda doesn't even work\n            if (isWatchableObject(newValue) && self.properties.includes(key)) {\n              newValue = self.deepReactiveObject(\n                newValue,\n                rootProperty || key,\n                key\n              );\n            }\n            return (value = newValue);\n          }\n\n          // if property is mutable dispatch update\n          if (self.properties.includes(key)) {\n            self.global.runtime.ingest({\n              type: JobType.PUBLIC_DATA_MUTATION,\n              collection: self.parentModuleInstance,\n              property: key,\n              value: newValue,\n              dep\n            });\n            // we did not apply the mutation since runtime will privately\n            // write the result since we dispatched above\n          }\n        }\n      }\n    });\n    return object;\n  }\n\n  public addProperty(key, value) {\n    this.object[key] = value;\n    this.defineProperty(this.object, key);\n  }\n\n  public tempDep(property) {\n    const dep = this.createDep(property);\n    this.tempDeps[property] = dep;\n    return dep;\n  }\n\n  private cloneDep(dep: Dep) {\n    dep = Object.assign(Object.create(Object.getPrototypeOf(dep)), dep);\n    // delete this.tempDeps[dep.propertyName];\n    return dep;\n  }\n\n  private createDep(key: string, rootProperty?: string) {\n    let dep: Dep;\n    if (this.tempDeps.hasOwnProperty(key) && !rootProperty) {\n      dep = this.cloneDep(this.tempDeps[key]);\n    } else {\n      dep = new Dep(\n        this.global,\n        this.type === 'indexes' ? 'index' : 'reactive',\n        this.parentModuleInstance,\n        key,\n        rootProperty\n      );\n    }\n    return dep;\n  }\n\n  private deepReactiveObject(\n    value,\n    rootProperty?: string,\n    propertyName?: string\n  ) {\n    let objectWithCustomPrototype = Object.create({\n      rootProperty,\n      propertyName\n    });\n\n    // repopulate custom object with incoming values\n    const keys = Object.keys(value);\n    for (let i = 0; i < keys.length; i++) {\n      const property = keys[i];\n      objectWithCustomPrototype[property] = value[property];\n    }\n\n    this.allowPrivateWrite = true;\n    const obj = this.reactiveObject(objectWithCustomPrototype, rootProperty);\n    this.allowPrivateWrite = false;\n\n    return obj;\n  }\n\n  reactiveArray(array, key) {\n    const self = this;\n    const reactiveArray = array.slice();\n\n    for (let i = 0; i < arrayFunctions.length; i++) {\n      const func = arrayFunctions[i];\n      const original = Array.prototype[func];\n      Object.defineProperty(reactiveArray, func, {\n        value: function() {\n          const result = original.apply(this, arguments);\n          if (self.global.initComplete)\n            // self.dispatch('mutation', {\n            //   collection: self.collection.name,\n            //   key,\n            //   value: result\n            // });\n            return result;\n        }\n      });\n    }\n    return reactiveArray;\n  }\n\n  public privateWrite(property, value) {\n    this.allowPrivateWrite = true;\n    this.object[property] = value;\n    this.allowPrivateWrite = false;\n  }\n\n  // sneaky blocked the getter, sneaky.\n  public privateGet(property) {\n    this.sneaky = true;\n    const data = this.object[property];\n    this.sneaky = false;\n    return data;\n  }\n\n  public exists(property: string): boolean {\n    this.sneaky = true;\n    const bool = !!this.object.hasOwnProperty(property);\n    this.sneaky = false;\n    return bool;\n  }\n\n  public getKeys(): Array<string> {\n    this.sneaky = true;\n    const keys = Object.keys(this.object);\n    this.sneaky = false;\n    return keys;\n  }\n  public createReactiveAlias(destObj: any, propertyName: string) {\n    if (destObj.hasOwnProperty(propertyName)) return destObj;\n    const self = this;\n    Object.defineProperty(destObj, propertyName, {\n      get: function pulseGetterAlias() {\n        return self.object[propertyName];\n      },\n      set: function pulseSetterAlias(newValue) {\n        self.object[propertyName] = newValue;\n        return;\n      }\n    });\n    return destObj;\n  }\n}\n","import { Global, ModuleInstance } from './interfaces';\nimport { Job } from './runtime';\n\nexport default class Action {\n  public executing: boolean = false;\n  public changes: Set<Job> = new Set();\n  public exec: Function;\n  public debouncing: any;\n  public ms: number;\n  private debounceCallback: Function;\n  constructor(\n    private parentModuleInstance: ModuleInstance,\n    private global: Global,\n    public action: any,\n    public actionName: string\n  ) {\n    this.prepare(action, global);\n  }\n\n  private prepare(action, global) {\n    const _this = this;\n\n    this.exec = function() {\n      const context = global.getContext(_this.parentModuleInstance);\n\n      // wrap undo function with action context\n      context.undo = error => this.global.contextRef.undo(this, error);\n\n      _this.declareActionRunning();\n\n      let result: any;\n      try {\n        result = action.apply(\n          null,\n          [context].concat(Array.prototype.slice.call(arguments))\n        );\n      } catch (e) {\n        console.error(e); //\n      }\n      // run action with context\n\n      _this.declareActionFinishedRunning();\n\n      return result;\n    };\n  }\n\n  //\n  private declareActionRunning() {\n    // empty actions previous cached changes\n    this.changes.clear();\n    this.executing = true;\n    // allow runtime to track nested action\n    this.global.runtime.runningActions.push(this);\n    this.global.runtime.runningAction = this;\n  }\n\n  private declareActionFinishedRunning() {\n    let runtime = this.global.runtime;\n\n    this.executing = false;\n    this.changes.clear();\n\n    runtime.runningActions.pop();\n    // restore previous running action\n    const previousAction =\n      runtime.runningActions[runtime.runningActions.length - 1];\n    if (previousAction) runtime.runningAction = previousAction;\n  }\n\n  public async debounce(stealthMom: Function, amount: number) {\n    // already interval running, cancel\n    if (this.debouncing) clearInterval(this.debouncing);\n    // set countdown to original amount\n    this.ms = amount;\n    return new Promise(resolve => {\n      // set debouncing to current interval\n      this.debouncing = setInterval(() => {\n        // if this interval makes it to zero\n        if (this.ms == 0) {\n          clearInterval(this.debouncing);\n          this.debouncing = false;\n          return resolve(stealthMom());\n        }\n        --this.ms;\n        // ensure this interval runs every millisecond\n      }, 1);\n    });\n  }\n\n  public async softDebounce(callback: Function, amount: number) {\n    this.ms = amount;\n    this.debounceCallback = callback;\n    if (this.debouncing) return;\n    this.debouncing = setInterval(() => {\n      if (this.ms == 0) {\n        clearInterval(this.debouncing);\n        this.debouncing = false;\n        this.debounceCallback();\n      }\n      --this.ms;\n    }, 1);\n  }\n}\n","import { collectionFunctions, objectLoop, createObj } from '../helpers';\nimport Reactive from '../reactive';\nimport Action from '../action';\nimport Computed from '../computed';\nimport { JobType } from '../runtime';\nimport {\n  Methods,\n  Keys,\n  CollectionObject,\n  CollectionConfig,\n  Global,\n  ModuleInstance\n} from '../interfaces';\nimport { normalizeGroups } from '../helpers';\nimport Dep from '../dep';\n\n// modules have a contained reactivity system which is the base\n// of collections, services and\nexport default class Module {\n  public public: Reactive;\n  public keys: Keys = {};\n  public onReady?: Function;\n  public methods: Methods = {};\n  public local: { [key: string]: any } = {};\n\n  protected namespace: CollectionObject;\n  protected config: CollectionConfig = {}; //rename\n  protected actions: { [key: string]: Action } = {};\n  protected computed: { [key: string]: Computed } = {};\n  protected watchers: { [key: string]: any } = {};\n  protected externalWatchers: { [key: string]: any } = {};\n  protected persist: Array<string> = [];\n  protected model: { [key: string]: any } = {};\n  protected throttles: Array<Action> = [];\n  protected localContext: any;\n\n  constructor(\n    public name: string,\n    public global: Global,\n    protected root: CollectionObject\n  ) {\n    // define aliases\n    this.config = root.config;\n\n    // create this.root\n    root = this.prepareRoot(root);\n\n    // Prepare methods\n    collectionFunctions.map(\n      func => this[func] && (this.methods[func] = this[func].bind(this))\n    );\n\n    let publicObject = this.preparePublicNamespace(root);\n\n    // create public object\n    this.keys.data = Object.keys(root.data || {});\n\n    this.public = new Reactive(this, publicObject, this.keys.data);\n\n    if (root.staticData) {\n      this.keys.staticData = Object.keys(root.staticData);\n      for (let property in root.staticData)\n        if (root.staticData.hasOwnProperty(property))\n          this.public.privateWrite(property, root.staticData[property]);\n    }\n\n    // init module features\n    this.initActions(root.actions);\n    this.initWatchers(root.watch);\n    this.initComputed(root.computed);\n\n    if (this.global.request || root.request) this.initRoutes(root.routes);\n\n    // load persisted data from storage\n    this.initPersist(root.persist);\n\n    this.prepareLocalContext();\n\n    // init finished\n    if (root.onReady) this.onReady = root.onReady;\n  }\n\n  // this function is where any transforms to the root object\n  // should be done, before namspace is initilized\n  private prepareRoot(root: CollectionObject) {\n    root.computed = { ...root.computed, ...root.filters }; // legacy support\n\n    this.root = root;\n    return root;\n  }\n\n  private preparePublicNamespace(root) {\n    interface PublicNamespace {\n      routes?: Object;\n      indexes?: Object;\n      local?: Object;\n    }\n\n    const publicNamespace: PublicNamespace = {};\n\n    // insert static properties\n    const types = ['routes', 'indexes', 'local'];\n    types.forEach(\n      type => root[type] && (publicNamespace[type] = { ...root[type] })\n    );\n\n    let namespaceWithMethods = Object.assign(\n      Object.create(this.methods),\n      publicNamespace,\n      ...root.data,\n      ...root.computed\n      // ...root.actions\n    );\n\n    return namespaceWithMethods;\n  }\n\n  private initRoutes(routes: object = {}) {\n    this.keys.routes = Object.keys(routes);\n\n    const routeWrapped = routeName => {\n      let self = this;\n      return function() {\n        let requestObject = Object.assign({}, self.global.request);\n        requestObject.context = self.global.contextRef;\n\n        return routes[routeName].apply(\n          null,\n          [requestObject].concat(Array.prototype.slice.call(arguments))\n        );\n      };\n    };\n\n    for (let routeName in routes) {\n      this.public.object.routes[routeName] = routeWrapped(routeName);\n    }\n  }\n\n  private initActions(actions: object = {}) {\n    this.keys.actions = Object.keys(actions);\n\n    for (let actionName in actions) {\n      this.actions[actionName] = new Action(\n        this,\n        this.global,\n        actions[actionName],\n        actionName\n      );\n      this.public.privateWrite(actionName, this.actions[actionName].exec);\n    }\n  }\n\n  private initWatchers(watchers: object = {}): void {\n    this.keys.watchers = Object.keys(watchers);\n\n    for (let watcherName in watchers) {\n      let watcher = watchers[watcherName];\n\n      this.watchers[watcherName] = () => {\n        this.global.runningWatcher = true;\n        let watcherOutput = watcher(this.global.getContext(this));\n        this.global.runningWatcher = false;\n        return watcherOutput;\n      };\n    }\n  }\n  private initComputed(computed: object = {}): void {\n    this.keys.computed = Object.keys(computed);\n\n    for (let computedName in computed) {\n      this.computed[computedName] = new Computed(\n        this.global,\n        this,\n        computedName,\n        computed[computedName]\n      );\n      this.public.privateWrite(\n        computedName,\n        this.global.config.computedDefault\n      );\n    }\n  }\n\n  public initPersist(persist: Array<string> = []): void {\n    if (!Array.isArray(persist)) return;\n\n    for (let i = 0; i < persist.length; i++) {\n      const dataName = persist[i];\n\n      // register this\n      this.persist.push(dataName);\n\n      if (this.global.storage.isPromise) {\n        this.global.storage.get(this.name, dataName).then(data => {\n          if (data === undefined || data === null) return;\n          this.global.ingest({\n            type: JobType.PUBLIC_DATA_MUTATION,\n            value: data,\n            property: dataName,\n            collection: this,\n            dep: this.getDep(dataName)\n          });\n        });\n      } else {\n        let data = this.global.storage.get(this.name, dataName);\n        if (data === undefined || data === null) continue;\n        this.public.privateWrite(dataName, data);\n      }\n    }\n  }\n  public runWatchers(property) {\n    const watcher = this.watchers[property];\n    if (watcher) watcher();\n    const externalWatchers = this.externalWatchers[property];\n    if (externalWatchers)\n      externalWatchers.forEach(func =>\n        typeof func === 'function' ? func() : false\n      );\n  }\n\n  public prepareLocalContext() {\n    this.localContext = {\n      data: {},\n      computed: {}\n    };\n\n    let l = this.localContext;\n\n    for (let type in l)\n      for (let propertyName of this.keys[type])\n        this.public.createReactiveAlias(l[type], propertyName);\n\n    if (this.keys.staticData)\n      for (let property of this.keys.staticData)\n        l.data[property] = this.public.privateGet(property);\n\n    // insert static properties\n    l.local = this.root.local;\n    l.actions = createObj(this.keys.actions, this.public.object);\n    l.routes = this.public.object.routes;\n\n    if (this.keys.indexes) {\n      l.indexes = this.indexes.public.object;\n    }\n\n    for (let method in this.methods) l[method] = this.methods[method];\n  }\n\n  public getSelfContext() {\n    const globalContext = this.global.contextRef;\n    let context = { ...globalContext, ...this.localContext };\n    return context;\n  }\n  public getDep(\n    propertyName: string | number,\n    reactiveObject?: Object\n  ): Dep | boolean {\n    let dep: Dep;\n\n    this.global.touching = true;\n    // if the property is on a deep reactive object or an index\n    if (reactiveObject) reactiveObject[propertyName];\n    // by default we assume the module's public object\n    else this.public.object[propertyName];\n\n    // extract the dep from global\n    dep = this.global.touched as Dep;\n\n    // reset state\n    this.global.touching = false;\n    this.global.touched = null;\n\n    return dep;\n  }\n\n  public isComputedReady(computedName: string) {\n    return this.computed[computedName].hasRun;\n  }\n\n  // ****************** EXTERNAL METHODS ****************** //\n\n  private watch(property, callback) {\n    if (!this.externalWatchers[property])\n      this.externalWatchers[property] = [callback];\n    else this.externalWatchers[property].push(callback);\n  }\n  private forceUpdate(property: string): void {\n    // ensure property exists on collection\n    if (this.public.exists(property)) {\n      // if property is directly mutable\n\n      if (this.public.mutableProperties.includes(property)) {\n        this.global.ingest({\n          type: JobType.PUBLIC_DATA_MUTATION,\n          property,\n          collection: this,\n          value: this.public.privateGet(property),\n          dep: this.getDep(property)\n        });\n\n        // if property is a computed method\n      } else if (this.computed[property]) {\n        this.global.ingest({\n          type: JobType.COMPUTED_REGEN,\n          property,\n          collection: this,\n          dep: this.getDep(property)\n        });\n      } else if (this.indexes && this.indexes.exists(property)) {\n        this.global.ingest({\n          type: JobType.GROUP_UPDATE,\n          property,\n          collection: this,\n          dep: this.getDep(property, this.indexes.object)\n        });\n      }\n    }\n  }\n  private throttle(amount: number = 0): void {\n    // if action is currently running save in throttles\n    if (this.global.runtime.runningAction) {\n      this.throttles.push(this.global.runtime.runningAction as Action);\n    }\n\n    // after the certain amount has possed remove the throttle via filter\n    setTimeout(() => {\n      this.throttles = this.throttles.filter(\n        action => action !== (this.global.runtime.runningAction as Action)\n      );\n    }, amount);\n  }\n\n  private addStaticData(key: string, data: any) {\n    if (\n      this.keys.staticData.includes(key) ||\n      this.public.getKeys().includes(key)\n    )\n      throw 'Pulse: failed to add static data, key already exists';\n\n    this.keys.staticData.push(key);\n    this.public.privateWrite(key, data);\n    this.prepareLocalContext(); // recompute local context;\n  }\n\n  // WIP DO NOT USE\n  private async debounce(\n    func: Function,\n    amount: number,\n    options?: Array<string>\n  ) {\n    // if (!this.global.runtime.runningAction) return await setTimeout(func, amount);\n\n    let action = this.global.runtime.runningAction as Action;\n\n    action.softDebounce(func, amount);\n    return;\n\n    return await action.softDebounce(func, amount);\n  }\n}\n","import { protectedNames, arrayFunctions, isWatchableObject } from './helpers';\nimport Dep from './dep';\nimport { Global, ModuleInstance } from './interfaces';\nimport Module from './module';\nimport { JobType } from './runtime';\nimport Computed from './computed';\n\ninterface Obj {\n  [key: string]: any;\n}\n\nexport default class Reactive {\n  public properties: Array<string>;\n  public object: Obj;\n  public global: Global;\n  public ghosts: Object = {}; // used by indexes only\n\n  private allowPrivateWrite: boolean = false;\n  private touching: boolean = false;\n  private touched: null | Dep;\n  private sneaky: boolean;\n  private tempDeps: { [key: string]: Dep } = {};\n\n  constructor(\n    private parentModuleInstance: ModuleInstance,\n    object: Obj = {},\n    public mutableProperties: Array<string>,\n    public type: 'public' | 'indexes' = 'public'\n  ) {\n    this.global = parentModuleInstance.global;\n    this.properties = [...Object.keys(object), ...mutableProperties];\n    this.object = this.reactiveObject(object);\n  }\n\n  reactiveObject(object: Obj, rootProperty?: string): object {\n    const objectKeys = rootProperty ? Object.keys(object) : this.properties;\n\n    // Loop over all properties of the to-be reactive object\n    for (let i = 0; i < objectKeys.length; i++) {\n      const key = objectKeys[i];\n      this.defineProperty(object, key, rootProperty);\n    }\n    return object;\n  }\n\n  private defineProperty(\n    object: Obj,\n    key: string,\n    rootProperty?: string\n  ): object {\n    const self = this;\n    let value = object[key];\n    if (object.rootProperty) rootProperty = object.rootProperty;\n\n    // // If property is an array, make it reactive\n    // if (Array.isArray(value)) {\n    //   // value = this.reactiveArray(value, key);\n    // }\n\n    // rootProperty should be the current key if first deep object\n    if (isWatchableObject(value) && !protectedNames.includes(key)) {\n      value = this.deepReactiveObject(value, rootProperty || key, key);\n    }\n\n    // Create an instance of the dependency tracker\n    const dep = this.createDep(key, rootProperty);\n\n    Object.defineProperty(object, key, {\n      get: function pulseGetter() {\n        if (self.sneaky || self.global.gettingContext) return value;\n\n        // used by getDep on Module instance\n        if (self.global.touching) {\n          self.global.touched = dep;\n          return value;\n        }\n\n        // used by subController to get several deps at once\n        if (self.global.subs.trackAllDeps) {\n          self.global.subs.trackedDeps.add(dep);\n          return value;\n        }\n\n        dep.register();\n\n        return value;\n      },\n      set: function pulseSetter(newValue) {\n        // DEEP REACTIVE handler: \"rootProperty\" indicates if the object is \"deep\".\n        if (rootProperty && self.mutableProperties.includes(rootProperty)) {\n          // mutate locally\n          value = newValue;\n          // ingest mutation for deep property\n          self.global.runtime.ingest({\n            type: JobType.PUBLIC_DATA_MUTATION,\n            collection: self.parentModuleInstance,\n            property: rootProperty,\n            value: self.object[rootProperty],\n            dep\n          });\n\n          // Regular mutations\n        } else {\n          // if a protected name allow direct mutation\n          if (protectedNames.includes(key)) {\n            return (value = newValue);\n          }\n          // if backdoor open allow direct mutation\n          if (self.allowPrivateWrite) {\n            // dynamically convert new values to reactive if objects\n            // This is risky as fuck and kinda doesn't even work\n            if (isWatchableObject(newValue) && self.properties.includes(key)) {\n              newValue = self.deepReactiveObject(\n                newValue,\n                rootProperty || key,\n                key\n              );\n            }\n            return (value = newValue);\n          }\n\n          // if property is mutable dispatch update\n          if (self.properties.includes(key)) {\n            self.global.runtime.ingest({\n              type: JobType.PUBLIC_DATA_MUTATION,\n              collection: self.parentModuleInstance,\n              property: key,\n              value: newValue,\n              dep\n            });\n            // we did not apply the mutation since runtime will privately\n            // write the result since we dispatched above\n          }\n        }\n      }\n    });\n    return object;\n  }\n\n  public addProperty(key, value) {\n    this.object[key] = value;\n    this.defineProperty(this.object, key);\n  }\n\n  public tempDep(property) {\n    const dep = this.createDep(property);\n    this.tempDeps[property] = dep;\n    return dep;\n  }\n\n  private cloneDep(dep: Dep) {\n    dep = Object.assign(Object.create(Object.getPrototypeOf(dep)), dep);\n    // delete this.tempDeps[dep.propertyName];\n    return dep;\n  }\n\n  private createDep(key: string, rootProperty?: string) {\n    let dep: Dep;\n    if (this.tempDeps.hasOwnProperty(key) && !rootProperty) {\n      dep = this.cloneDep(this.tempDeps[key]);\n    } else {\n      dep = new Dep(\n        this.global,\n        this.type === 'indexes' ? 'index' : 'reactive',\n        this.parentModuleInstance,\n        key,\n        rootProperty\n      );\n    }\n    return dep;\n  }\n\n  private deepReactiveObject(\n    value,\n    rootProperty?: string,\n    propertyName?: string\n  ) {\n    let objectWithCustomPrototype = Object.create({\n      rootProperty,\n      propertyName\n    });\n\n    // repopulate custom object with incoming values\n    const keys = Object.keys(value);\n    for (let i = 0; i < keys.length; i++) {\n      const property = keys[i];\n      objectWithCustomPrototype[property] = value[property];\n    }\n\n    this.allowPrivateWrite = true;\n    const obj = this.reactiveObject(objectWithCustomPrototype, rootProperty);\n    this.allowPrivateWrite = false;\n\n    return obj;\n  }\n\n  reactiveArray(array, key) {\n    const self = this;\n    const reactiveArray = array.slice();\n\n    for (let i = 0; i < arrayFunctions.length; i++) {\n      const func = arrayFunctions[i];\n      const original = Array.prototype[func];\n      Object.defineProperty(reactiveArray, func, {\n        value: function() {\n          const result = original.apply(this, arguments);\n          if (self.global.initComplete)\n            // self.dispatch('mutation', {\n            //   collection: self.collection.name,\n            //   key,\n            //   value: result\n            // });\n            return result;\n        }\n      });\n    }\n    return reactiveArray;\n  }\n\n  public privateWrite(property, value) {\n    this.allowPrivateWrite = true;\n    this.object[property] = value;\n    this.allowPrivateWrite = false;\n  }\n\n  // sneaky blocked the getter, sneaky.\n  public privateGet(property) {\n    this.sneaky = true;\n    const data = this.object[property];\n    this.sneaky = false;\n    return data;\n  }\n\n  public exists(property: string): boolean {\n    this.sneaky = true;\n    const bool = !!this.object.hasOwnProperty(property);\n    this.sneaky = false;\n    return bool;\n  }\n\n  public getKeys(): Array<string> {\n    this.sneaky = true;\n    const keys = Object.keys(this.object);\n    this.sneaky = false;\n    return keys;\n  }\n  public createReactiveAlias(destObj: any, propertyName: string) {\n    if (destObj.hasOwnProperty(propertyName)) return destObj;\n    const self = this;\n    Object.defineProperty(destObj, propertyName, {\n      get: function pulseGetterAlias() {\n        return self.object[propertyName];\n      },\n      set: function pulseSetterAlias(newValue) {\n        self.object[propertyName] = newValue;\n        return;\n      }\n    });\n    return destObj;\n  }\n}\n","import Module from '..';\nimport {\n  normalizeGroups,\n  assert,\n  defineConfig,\n  validateNumber\n} from '../../helpers';\nimport Reactive from '../../Reactive';\nimport { CollectionObject, Global } from '../../interfaces';\nimport Dep from '../../dep';\nimport { JobType, Job } from '../../runtime';\nimport Computed from '../../computed';\nimport Action from '../../action';\n\nexport default class Collection extends Module {\n  public primaryKey: string | number | boolean = false;\n  public internalData: object = {};\n  private internaldataPropertiesUsingPopulate: Array<string> = [];\n  private internalDataDeps: object = {}; // contains the deps for internal data\n\n  public indexes: Reactive;\n  public collectionSize: number = 0;\n\n  constructor(name: string, global: Global, root: CollectionObject) {\n    // init module constructor\n    super(name, global, root);\n\n    //collection only preperation\n    this.initIndexes(root.groups);\n    this.initModel(root.model);\n  }\n\n  getDataDep(primaryKey: string | number) {\n    return this.internalDataDeps[primaryKey] || false;\n  }\n\n  initIndexes(groups: Array<any>) {\n    // FIXME: if you want indexes to be reactive Jamie, that empty array right there is your answer\n    this.indexes = new Reactive(this, normalizeGroups(groups), [], 'indexes');\n    this.public.privateWrite('indexes', this.indexes.object);\n    for (let indexName of this.indexes.properties) {\n      // init empty group\n      this.public.addProperty(indexName, []);\n    }\n  }\n\n  initModel(model = {}) {\n    this.model = model;\n    Object.keys(model).forEach(property => {\n      Object.keys(model[property]).forEach(config => {\n        switch (config) {\n          case 'primaryKey':\n            this.primaryKey = property;\n            break;\n          case 'populate':\n            this.internaldataPropertiesUsingPopulate.push(property);\n            break;\n        }\n      });\n    });\n  }\n\n  private getData(id) {\n    if (!this.internalData.hasOwnProperty(id)) return false;\n    return { ...this.internalData[id] };\n  }\n  public buildGroupFromIndex(groupName: string): Array<number> {\n    const constructedArray = [];\n    // get index directly\n    let index = this.indexes.privateGet(groupName);\n    if (!index) return [];\n\n    const getData = id => {\n      // copy data from internal database\n      let data = this.getData(id);\n      // if none found skip\n      if (!data) return false;\n      // inject dynamic data\n      return this.injectDynamicRelatedData(id, data);\n    };\n\n    // for every primaryKey in the index\n    for (let i = 0; i < index.length; i++) {\n      let data = getData(index[i]);\n      if (!data) continue;\n      constructedArray.push(data);\n    }\n\n    // inject ghosts\n    if (this.indexes.ghosts[groupName]) {\n      let ghosts = this.indexes.ghosts[groupName];\n      for (let i = 0; i < ghosts.length; i++) {\n        const { index, primaryKey } = ghosts[i];\n        let data = getData(primaryKey);\n        if (!data) continue;\n        data.isGhost = true;\n        constructedArray.splice(index, 0, data);\n      }\n    }\n    return constructedArray;\n  }\n\n  // rebuilding an entire group is expensive on resources, but is\n  // not nessisary if only one piece of data has changed\n  // this function will replace a single piece of data without rebuilding\n  // the entire group\n  public softUpdateGroupData(\n    primaryKey: string | number,\n    groupName: string\n  ): Array<any> {\n    let index: Array<any> = this.indexes.privateGet(groupName);\n\n    // find the data's position within index\n    let position: number = index.indexOf(primaryKey);\n\n    // if group is dynamic, just build the group from index.\n    if (!this.public[groupName]) return this.buildGroupFromIndex(groupName);\n\n    // copy the current group output\n    let currentGroup: Array<any> = [this.public[groupName]];\n\n    // get data for primaryKey\n    let data: { [key: string]: any } = { ...this.internalData[primaryKey] };\n\n    data = this.injectDynamicRelatedData(primaryKey, data);\n\n    // replace at known position with updated data\n    currentGroup[position] = data;\n\n    return currentGroup;\n  }\n\n  // This should be called on every piece of data retrieved when building a group from an index\n  public injectDynamicRelatedData(\n    primaryKey: string | number,\n    data: { [key: string]: any }\n  ): any {\n    // for each populate function extracted from the model for this data\n    this.internaldataPropertiesUsingPopulate.forEach(property => {\n      // conditions to skip populate\n      const dep = this.getDataDep(primaryKey);\n      const job = this.global.runtime.runningJob as Job;\n      if (!dep || (job && job.config && job.config.important)) return;\n\n      // get the current action index in runtime action stack\n      // this is used to stop properties from getting tracked as dependencies in nested actions\n      dep.currentActionIndex = this.global.runtime.runningActions.length;\n\n      this.global.runningPopulate = dep;\n\n      // since we're re-populating this dynamic data, the current dynamicRelation is invalid, so we must ensure it, and all refrences to it are destoryed.\n      // fyi: this is also done on Computed run\n      if (dep.dynamicRelation)\n        this.global.relations.cleanup(dep.dynamicRelation);\n\n      // run populate function passing in the context and the data\n      const populated = this.model[property].populate(\n        this.global.contextRef,\n        data\n      );\n\n      dep.currentActionIndex = false;\n      this.global.runningPopulate = false;\n\n      // inject result to data\n      data[property] = populated;\n    });\n    return data;\n  }\n\n  public createGroups(group) {\n    if (group === undefined) group = [];\n    else if (!Array.isArray(group)) group = [group];\n\n    for (let i = 0; i < group.length; i++) {\n      const groupName = group[i];\n      if (!this.indexes.exists(groupName)) {\n        this.indexes.addProperty(groupName, []);\n        // this.indexes.privateWrite(groupName, []);\n      }\n    }\n    return group;\n  }\n\n  private getPreviousIndexValues(groups) {\n    const returnData = {};\n    for (let i = 0; i < groups; i++) {\n      const groupName = groups[i];\n      returnData[groupName] = this.indexes.privateGet(groupName);\n    }\n    return returnData;\n  }\n\n  private findPrimaryKey(dataItem) {\n    if (dataItem.hasOwnProperty('id')) this.primaryKey = 'id';\n    else if (dataItem.hasOwnProperty('_id')) this.primaryKey = '_id';\n    else if (dataItem.hasOwnProperty('key')) this.primaryKey = 'key';\n    if (this.primaryKey) return true;\n    else return assert(warn => warn.NO_PRIMARY_KEY);\n  }\n  // if a computed function evaluates and creates a relation to internal data\n  // that does not exist yet, we create the dep class and save it in advance\n  // so that if the data ever arrives, it will reactively dependent update accordingly\n  private depForInternalData(primaryKey: string | number): Dep {\n    let dep: Dep;\n    if (!this.internalDataDeps[primaryKey]) {\n      dep = new Dep(this.global, 'internal', this, primaryKey);\n      this.internalDataDeps[primaryKey] = dep;\n    } else {\n      dep = this.internalDataDeps[primaryKey];\n    }\n    return dep;\n  }\n\n  // search the collection for the appropriate dep for a given group\n  // consider relacting this with a more absolute\n  // ^^ hi, its jamie from months later, don't think theres any other way to do this boss\n  // maybe be more explicit with what are groups and what aren't\n  // but i also don't think its an issue, we'll see.\n  // a potential issue that could arise is a dynamic index with the same name as some data\n  // will return the wrong dep class\n  private depForGroup(groupName: string): Dep {\n    let dep: Dep;\n    // no group is found publically, use index instead\n    if (this.public.exists(groupName)) {\n      dep = this.getDep(groupName) as Dep;\n    } else if (this.indexes.exists(groupName)) {\n      dep = this.getDep(groupName, this.indexes.object) as Dep;\n    } else {\n      // create a temp dep for dynamic indexes\n      dep = this.indexes.tempDep(groupName);\n    }\n    return dep;\n  }\n\n  replaceIndex(indexName: string, newIndex: Array<string | number>) {\n    if (!Array.isArray(newIndex) || typeof indexName !== 'string')\n      return assert(warn => warn.INVALID_PARAMETER, 'replaceIndex');\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this,\n      property: indexName,\n      value: newIndex\n    });\n  }\n\n  public collectByKeys(\n    data: { [key: string]: any },\n    group?: string | Array<string>,\n    config?: object\n  ) {\n    if (!config) config = {};\n    config.byKeys = true;\n    this.collect(data, group, config);\n  }\n\n  // METHODS\n  public collect(data, group?: string | Array<string>, config?: object) {\n    config = defineConfig(config, {\n      append: true,\n      byKeys: false\n    });\n\n    let keys: Array<string | number>, length: number;\n\n    this.global.collecting = true;\n\n    // prepare data\n    length = data.length;\n\n    if (config.byKeys) {\n      keys = Object.keys(data);\n      length = keys.length;\n    } else if (!Array.isArray(data)) {\n      data = [data];\n    }\n\n    // if groups don't already exist, create them dynamically\n    const groups: Array<string> = this.createGroups(group);\n    // groups now contains just the groups directly modified by this collect\n\n    // preserve index previous values\n    const previousIndexValues: object = this.getPreviousIndexValues(groups);\n\n    const indexesToRegenOnceComplete = new Set();\n\n    // process data items\n    for (let i = 0; i < length; i++) {\n      let primaryKey: undefined | number | string;\n\n      if (config.byKeys) primaryKey = keys[i];\n\n      const dataItem = config.byKeys ? data[primaryKey] : data[i];\n\n      if (dataItem === null) continue;\n      // process data item returns \"success\" as a boolean and affectedIndexes as an array\n      const processDataItem = this.processDataItem(\n        dataItem,\n        groups,\n        config,\n        primaryKey\n      );\n\n      if (!processDataItem) continue;\n\n      if (processDataItem.success) this.collectionSize++;\n      // ensure indexes modified by this data item are waiting to be ingested for regen\n      processDataItem.affectedIndexes.forEach(index =>\n        indexesToRegenOnceComplete.add(index)\n      );\n    }\n\n    indexesToRegenOnceComplete.forEach(indexName => {\n      this.global.ingest({\n        type: JobType.INDEX_UPDATE,\n        collection: this,\n        property: indexName,\n        value: this.indexes.privateGet(indexName),\n        previousValue: previousIndexValues[indexName as string],\n        dep: this.getDep(indexName as string)\n      });\n    });\n\n    this.global.collecting = false;\n  }\n\n  private processDataItem(\n    dataItem: object,\n    groups: Array<string> = [],\n    config,\n    primaryKey: undefined | number | string\n  ) {\n    let key: number | string;\n    if (config.byKeys) key = primaryKey;\n    else {\n      if (!this.primaryKey) this.findPrimaryKey(dataItem);\n      if (!this.primaryKey) return false;\n      key = dataItem[this.primaryKey as number | string];\n    }\n\n    // find affected indexes\n    let affectedIndexes = [...groups];\n\n    // searchIndexesForPrimaryKey returns an array of indexes that include that primaryKey\n    // for each index found, if it is not already known, add to affected indexes\n    this.searchIndexesForPrimaryKey(key).map(\n      index => !affectedIndexes.includes(index) && affectedIndexes.push(index)\n    );\n\n    // validate against model\n\n    // create the dep class\n    if (!this.internalDataDeps[key])\n      this.internalDataDeps[key] = new Dep(this.global, 'internal', this, key);\n\n    // ingest the data\n    this.global.ingest({\n      type: JobType.INTERNAL_DATA_MUTATION,\n      collection: this,\n      property: key,\n      value: dataItem,\n      dep: this.internalDataDeps[key]\n    });\n\n    // add the data to group indexes\n    for (let i = 0; i < groups.length; i++) {\n      const groupName = groups[i];\n      let index = this.indexes.privateGet(groupName);\n\n      // remove key if already present in index\n      index = index.filter(k => k != key);\n\n      if (config.append) index.push(key);\n      else index.unshift(key);\n\n      // write index\n      this.indexes.privateWrite(groupName, index);\n    }\n    return { success: true, affectedIndexes };\n  }\n\n  public searchIndexesForPrimaryKey(\n    primaryKey: string | number\n  ): Array<string> {\n    // get a fresh copy of the keys to include dynamic indexes\n    const keys = this.indexes.getKeys();\n\n    let foundIndexes: Array<string> = [];\n\n    // for every index\n    for (let i = 0; i < keys.length; i++) {\n      const indexName = keys[i];\n\n      // if the index includes the primaryKey\n      if (this.indexes.privateGet(indexName).includes(primaryKey))\n        foundIndexes.push(indexName);\n    }\n    return foundIndexes;\n  }\n\n  // return a piece of intenral data from the collection\n  // can create dynamic relationships when used in certain circumstances\n  public findById(id: string | number): { [key: string]: any } {\n    let internalDep: Dep = this.depForInternalData(id);\n\n    // if used in computed function, create a dynamic relation\n    if (this.global.runningComputed) {\n      let computed = this.global.runningComputed as Computed;\n      this.global.relations.relate(computed, internalDep);\n    }\n\n    // if used in populate() function, create a dynamic relation\n    if (this.global.runningPopulate) {\n      let populate = this.global.runningPopulate as Dep;\n      this.global.relations.relate(populate, internalDep);\n    }\n\n    return this.internalData[id];\n  }\n\n  // return a group of data from a collection\n  // can create dynamic relationships when used in certain circumstances\n  public getGroup(property): Array<any> {\n    let groupDep: Dep = this.depForGroup(property);\n\n    // if used in computed function, create a dynamic relation\n    if (this.global.runningComputed) {\n      let computed: Computed = this.global.runningComputed as Computed;\n      this.global.relations.relate(computed, groupDep);\n    }\n\n    // if used in populate() function, create a dynamic relation\n    if (this.global.runningPopulate) {\n      let dataDep: Dep = this.global.runningPopulate as Dep;\n      this.global.relations.relate(dataDep, groupDep);\n    }\n\n    // get group is not cached, so generate a fresh group from the index\n    return this.buildGroupFromIndex(property) || [];\n  }\n\n  // FIXME: action functions\n  undo(action: Action) {\n    // runtime stores changes in action\n    action.changes.forEach(job => {\n      if (job.hasOwnProperty('previousValue')) {\n        const currentValue = job.value;\n        job.value = job.previousValue;\n        job.previousValue = currentValue;\n        this.global.ingest(job);\n      }\n    });\n  }\n\n  // group functions\n  move(\n    ids: number | string | Array<string | number>,\n    sourceIndexName: string,\n    destIndexName?: string,\n    config?: {\n      method: 'push' | 'unshift';\n      ghost: boolean;\n    }\n  ) {\n    config = defineConfig(config, {\n      method: 'push',\n      ghost: false\n    });\n    // validation\n    if (!this.indexes.exists(sourceIndexName))\n      return assert(warn => warn.INDEX_NOT_FOUND, 'move');\n\n    if (destIndexName && !this.indexes.exists(destIndexName))\n      return assert(warn => warn.INDEX_NOT_FOUND, 'move');\n\n    if (!Array.isArray(ids)) ids = [ids];\n\n    let sourceIndex = this.indexes.privateGet(sourceIndexName);\n    for (let i = 0; i < ids.length; i++) {\n      // preserve ghost index\n      if (config.ghost) this.haunt(sourceIndexName, sourceIndex, ids[i]);\n      // remove the id from index\n      sourceIndex = sourceIndex.filter(id => id !== ids[i]);\n    }\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this,\n      property: sourceIndexName,\n      value: sourceIndex\n    });\n\n    if (destIndexName) {\n      let destIndex = this.indexes.privateGet(destIndexName);\n\n      for (let i = 0; i < ids.length; i++) {\n        // destIndex = destIndex.filter(k => k != ids[i]);\n\n        if (destIndex.includes(ids[i])) continue;\n\n        // push or unshift id into current index\n        destIndex[config.method](ids[i]);\n      }\n\n      this.global.ingest({\n        type: JobType.INDEX_UPDATE,\n        collection: this,\n        property: destIndexName,\n        value: destIndex\n      });\n    }\n  }\n\n  put(\n    ids: number | Array<string | number>,\n    destIndexName: string,\n    config?: {\n      method: 'push' | 'unshift';\n    }\n  ) {\n    config = defineConfig(config, {\n      method: 'push'\n    });\n    // validation\n    if (!this.indexes.exists(destIndexName))\n      return assert(warn => warn.INDEX_NOT_FOUND, 'put');\n\n    if (!Array.isArray(ids)) ids = [ids];\n\n    // get current index\n    let destIndex = this.indexes.privateGet(destIndexName);\n\n    // loop over every id user is trying to add into current index\n    for (let i = 0; i < ids.length; i++) {\n      // destIndex = destIndex.filter(k => k != ids[i]);\n\n      if (destIndex.includes(ids[i])) continue;\n\n      // push or unshift id into current index\n      destIndex[config.method](ids[i]);\n    }\n\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this,\n      property: destIndexName,\n      value: destIndex\n    });\n  }\n\n  newGroup(groupName: string, indexValue?: Array<string | number>) {\n    if (this.indexes.object.hasOwnProperty(groupName))\n      return assert(warn => warn.GROUP_ALREADY_EXISTS, 'newGroup');\n\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this,\n      property: groupName,\n      value: indexValue\n    });\n  }\n  deleteGroup(groupName: string) {\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this,\n      property: groupName,\n      value: []\n    });\n  }\n  removeFromGroup(\n    groupName: string,\n    keysToRemove: number | string | Array<number | string>,\n    config?: {\n      method: 'push' | 'unshift';\n      ghost: boolean;\n    }\n  ) {\n    config = defineConfig(config, {\n      method: 'push',\n      ghost: false\n    });\n\n    if (!this.indexes.exists(groupName))\n      return assert(warn => warn.INDEX_NOT_FOUND, 'removeFromGroup');\n\n    if (!Array.isArray(keysToRemove)) keysToRemove = [keysToRemove];\n\n    const index = this.indexes.privateGet(groupName);\n\n    if (config.ghost)\n      keysToRemove.forEach(key => this.haunt(groupName, index, key));\n\n    const newIndex = index.filter(\n      id => !(keysToRemove as Array<number | string>).includes(id)\n    );\n\n    this.global.ingest({\n      type: JobType.INDEX_UPDATE,\n      collection: this,\n      property: groupName,\n      value: newIndex\n    });\n  }\n\n  // internal data functions\n  update(\n    primaryKey: string | number,\n    newObject: { [key: string]: any } = {},\n    options?: { [key: string]: any }\n  ) {\n    options = defineConfig(options, {\n      important: false\n    });\n    // if the primary key has changed, we should update it internally for this data\n    let updateDataKey = false;\n    if (!this.internalData.hasOwnProperty(primaryKey))\n      return assert(warn => warn.INTERNAL_DATA_NOT_FOUND, 'update');\n\n    const newObjectKeys = Object.keys(newObject);\n    const currentData = Object.assign({}, this.internalData[primaryKey]);\n\n    for (let i = 0; i < newObjectKeys.length; i++) {\n      const key = newObjectKeys[i];\n      if (key === this.primaryKey) updateDataKey = true;\n      currentData[key] = newObject[key];\n    }\n    this.global.ingest({\n      type: JobType.INTERNAL_DATA_MUTATION,\n      collection: this,\n      property: primaryKey,\n      value: currentData,\n      config: options\n    });\n\n    if (updateDataKey)\n      this.updateDataKey(\n        newObject[primaryKey], // old primary key\n        currentData[this.primaryKey as string | number] // new primary key\n      );\n  }\n  increment(\n    primaryKey: string | number,\n    property: string,\n    amount: number,\n    decrement?: boolean\n  ) {\n    if (!this.internalData.hasOwnProperty(primaryKey))\n      return assert(\n        warn => warn.INTERNAL_DATA_NOT_FOUND,\n        decrement ? 'decrement' : 'increment'\n      );\n\n    const currentData = Object.assign({}, this.internalData[primaryKey]);\n\n    if (!validateNumber(amount, currentData[property]))\n      return assert(\n        warn => warn.PROPERTY_NOT_A_NUMBER,\n        decrement ? 'decrement' : 'increment'\n      );\n\n    if (decrement) currentData[property] -= amount;\n    else currentData[property] += amount;\n\n    this.global.ingest({\n      type: JobType.INTERNAL_DATA_MUTATION,\n      collection: this,\n      property: primaryKey,\n      value: currentData\n    });\n  }\n  decrement(primaryKey: string | number, property: string, amount: number) {\n    this.increment(primaryKey, property, amount, true);\n  }\n\n  delete(primaryKeys: string | number | Array<string | number>) {\n    if (!Array.isArray(primaryKeys)) primaryKeys = [primaryKeys];\n    for (let i = 0; i < primaryKeys.length; i++) {\n      const primaryKey = primaryKeys[i];\n      this.global.ingest({\n        type: JobType.DELETE_INTERNAL_DATA,\n        collection: this,\n        property: primaryKey\n      });\n    }\n  }\n\n  updateDataKey(oldKey: string | number, newKey: string | number): void {\n    // create copy of data & data dep\n    const dataCopy = { ...this.internalData[oldKey] },\n      depCopy = { ...this.internalDataDeps[oldKey] };\n\n    // delete old refrences\n    delete this.internalData[oldKey];\n    delete this.internalDataDeps[oldKey];\n\n    // apply the data and dependency in storage\n    this.internalData[newKey] = dataCopy;\n    this.internalDataDeps[newKey] = depCopy;\n  }\n\n  // TODO: make cleanup unsubscribe func, possible memory leak, you'll need to track the component\n  private watchData(primaryKey, callback) {\n    const dep = this.internalDataDeps[primaryKey] as Dep;\n    if (!dep) return;\n    dep.subscribersToInternalDataAsCallbacks.push(callback);\n  }\n\n  // rebuild issues a group regeneration for an index, and destorys all ghosts. It is effectivly the 5th ghost buster.\n  private rebuild(indexName: string): void {\n    if (!this.indexes.exists(indexName)) return;\n\n    delete this.indexes.ghosts[indexName];\n    this.global.ingest({\n      type: JobType.GROUP_UPDATE,\n      collection: this,\n      property: indexName\n    });\n  }\n\n  private haunt(sourceIndexName, sourceIndex, id) {\n    if (!this.indexes.ghosts[sourceIndexName])\n      this.indexes.ghosts[sourceIndexName] = [];\n    const removedIndex = sourceIndex.indexOf(id);\n    this.indexes.ghosts[sourceIndexName].push({\n      index: removedIndex,\n      primaryKey: id\n    });\n  }\n\n  private cleanse() {\n    // loop over ghosts to get index names\n    const groupsToRegen = Object.keys(this.indexes.ghosts);\n\n    this.indexes.ghosts = {};\n\n    groupsToRegen.forEach(groupName => {\n      this.global.runtime.ingest({\n        type: JobType.GROUP_UPDATE,\n        collection: this,\n        property: groupName\n      });\n    });\n  }\n\n  // remove all dynamic indexes, empty all indexes, delete all internal data\n  purge() {}\n  // deprecate\n  // added removeFromGroup to be more specific, params got switched around, keeping this for backwards compatibility\n  remove(itemsToRemove, groupName) {\n    return this.removeFromGroup(groupName, itemsToRemove);\n  }\n}\n","// Global Subscription Controller\n// This class handles external components subscribing to Pulse.\n\nimport {\n  genId,\n  cleanse,\n  isWatchableObject,\n  defineConfig,\n  normalizeMap\n} from './helpers';\nimport Dep from './dep';\nimport { worker } from 'cluster';\nimport { Global } from './interfaces';\n\nexport interface SubscribingComponentObject {\n  componentUUID: string;\n  keys: Array<string>;\n}\n\nexport class ComponentContainer {\n  public uuid: string = genId();\n  public ready: boolean = true;\n  public deps: Set<Dep> = new Set();\n  public manualDepTracking: boolean = false;\n  public evaluated: Object;\n  constructor(\n    public instance: any,\n    public config: {\n      waitForMount: boolean;\n      blindSubscribe: boolean;\n    },\n    public depsFunc?: Function\n  ) {\n    this.manualDepTracking = typeof this.depsFunc !== 'undefined';\n    instance.__pulseUniqueIdentifier = this.uuid;\n    if (config.waitForMount) this.ready = false;\n  }\n}\n\nexport default class SubController {\n  public subscribingComponentKey: number = 0;\n  public trackingComponent: boolean | string = false;\n  public lastAccessedDep: null | Dep = null;\n\n  // used by discoverDeps to get several dep classes\n  public trackAllDeps: boolean = false;\n  public trackedDeps: Set<Dep> = new Set();\n  public componentStore: { [key: string]: ComponentContainer } = {};\n\n  constructor(private global: Global) {}\n\n  public registerComponent(instance, config, depsFunc) {\n    config = defineConfig(config, {\n      waitForMount: this.global.config.waitForMount,\n      blindSubscribe: false\n    });\n    let componentContainer = new ComponentContainer(instance, config, depsFunc);\n\n    this.componentStore[componentContainer.uuid] = componentContainer;\n\n    return componentContainer;\n  }\n\n  // returns all deps accessed within a function,\n  // does not register any dependencies\n  public analyseDepsFunc(func: Function): any {\n    let deps: Set<Dep> = new Set();\n    this.trackAllDeps = true;\n    const evaluated = func(this.global.contextRef);\n    this.trackedDeps.forEach(dep => {\n      if (!dep.rootProperty) deps.add(dep);\n    });\n    this.trackedDeps = new Set();\n    this.trackAllDeps = false;\n\n    let mapToProps: boolean =\n      !Array.isArray(evaluated) && typeof evaluated === 'object';\n\n    return { mapToProps, deps, evaluated };\n  }\n\n  public get(id: string): ComponentContainer | boolean {\n    return this.componentStore[id] || false;\n  }\n\n  public mount(instance) {\n    console.log(instance.__pulseUniqueIdentifier);\n    let component: ComponentContainer = this.componentStore[\n      instance.__pulseUniqueIdentifier\n    ];\n\n    if (component) {\n      component.instance = instance;\n      component.ready = true;\n    } else {\n      console.error('you did something wrong');\n    }\n  }\n\n  public unmount(instance) {\n    const uuid = instance.__pulseUniqueIdentifier;\n    if (!uuid) return;\n\n    let component: ComponentContainer = this.componentStore[\n      instance.__pulseUniqueIdentifier\n    ];\n\n    // clean up deps to avoid memory leaks\n    component.deps.forEach(dep => dep.subscribers.delete(component));\n    // delete reference to this component instance from store\n    delete this.componentStore[instance.__pulseUniqueIdentifier];\n  }\n\n  legacyMapData(func) {\n    // PUT DEPRICATION WARNING HERE PLS\n    const deps: Set<Dep> = new Set();\n    let evaluated = null;\n    let norm = normalizeMap(func);\n    for (let i = 0; i < norm.length; i++) {\n      const { key, val } = norm[i];\n      let moduleInstanceName = val.split('/')[0];\n      let property = val.split('/')[1];\n      let moduleInstance = this.global.getModuleInstance(moduleInstanceName);\n      let analysed = this.global.subs.analyseDepsFunc(() => {\n        return { [key]: moduleInstance.public.object[property] };\n      });\n      // debugger;\n      analysed.deps.forEach(dep => deps.add(dep));\n\n      // this if statement is here because of a weird bug that with all my JS knowlege I can't explain, only doesn't work on JavascriptCore engine, iOS\n      let bool = typeof analysed.evaluated === 'object';\n\n      if (bool) {\n        if (!evaluated) evaluated = {};\n        evaluated[key] = analysed.evaluated[key];\n      }\n    }\n\n    return { deps, evaluated };\n  }\n\n  public mapData(\n    func: Function | Object,\n    componentInstance: any,\n    returnInfo?: boolean\n  ): Object {\n    // get container instance for component\n    let cC: ComponentContainer = this.get(\n        componentInstance.__pulseUniqueIdentifier\n      ) as ComponentContainer,\n      deps: Set<any> = new Set(),\n      evaluated: Object = {},\n      mapToProps: boolean = false,\n      legacy: boolean = false;\n\n    if (typeof func === 'object') {\n      legacy = true;\n      // force mapToProps as we know this old method requires that\n      mapToProps = true;\n      // Pulse 1.0 compatiblity, should depricate soon!\n      const legacyRes = this.legacyMapData(func);\n      deps = legacyRes.deps;\n      evaluated = legacyRes.evaluated;\n    } else {\n      let res = this.global.subs.analyseDepsFunc(func as Function);\n      deps = res.deps;\n      evaluated = res.evaluated;\n      mapToProps = res.mapToProps;\n    }\n\n    if (mapToProps) cC.evaluated = evaluated;\n\n    // create subscription\n    deps.forEach(dep => dep && dep.subscribe(cC));\n\n    if (returnInfo) return { evaluated, deps, mapToProps, legacy };\n    return evaluated;\n  }\n}\n","interface StorageMethods {\n  async?: boolean;\n  get?: any;\n  set?: any;\n  remove?: any;\n}\n\nexport default class Storage {\n  private isPromise: boolean = false;\n  private storageReady: boolean = false;\n  private storageType: 'localStorage' | 'custom' = 'localStorage';\n  constructor(private storageMethods: StorageMethods = {}) {\n    if (storageMethods.async) this.isPromise = true;\n\n    // assume if user provided get, set or remove methods that the storage type is custom\n    if (storageMethods.get || storageMethods.set || storageMethods.remove) {\n      this.storageType = 'custom';\n    }\n\n    if (this.localStorageAvailable() && this.storageType === 'localStorage') {\n      this.storageReady = true;\n      storageMethods.get = localStorage.getItem.bind(localStorage);\n      storageMethods.set = localStorage.setItem.bind(localStorage);\n      storageMethods.remove = localStorage.removeItem.bind(localStorage);\n    } else {\n      this.storageType = 'custom';\n\n      if (\n        this.check(storageMethods.get) &&\n        this.check(storageMethods.set) &&\n        this.check(storageMethods.remove)\n      ) {\n        this.storageReady = true;\n      } else {\n        this.storageReady = false;\n        // bad\n      }\n    }\n  }\n\n  public get(moduleName: string, key) {\n    if (!this.storageReady) return;\n\n    if (this.isPromise) {\n      return new Promise((resolve, reject) => {\n        this.storageMethods\n          .get(this.getKey(moduleName, key))\n          .then(res => {\n            // if result is not JSON for some reason, return it.\n            if (typeof res !== 'string') return resolve(res);\n\n            resolve(JSON.parse(res));\n          })\n          .catch(reject);\n      });\n    } else {\n      return JSON.parse(this.storageMethods.get(this.getKey(moduleName, key)));\n    }\n  }\n\n  public set(moduleName: string, key, value) {\n    if (!this.storageReady) return;\n    this.storageMethods.set(\n      this.getKey(moduleName, key),\n      JSON.stringify(value)\n    );\n  }\n\n  public remove(moduleName: string, key) {\n    if (!this.storageReady) return;\n    this.storageMethods.remove(this.getKey(moduleName, key));\n  }\n\n  private getKey(moduleName: string, key) {\n    return `_${moduleName}_${key}`;\n  }\n\n  private check(func) {\n    return typeof func === 'function';\n  }\n\n  private localStorageAvailable() {\n    try {\n      localStorage.setItem('_', '_');\n      localStorage.removeItem('_');\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import Collection from '../module/modules/collection';\nimport { Global, RequestConfig } from '../interfaces';\nimport Module from '../module';\n\ntype Method = 'get' | 'put' | 'post' | 'patch' | 'delete';\n\nexport default class Request extends Module {\n  private timeout: number;\n  private options: object;\n  private saveHistory: boolean;\n\n  private requestIntercept: (context: object, options: object) => void;\n  private responseIntercept: (context: object, response: object) => void;\n\n  constructor(global: Global, requestConfig: RequestConfig) {\n    // Before we invoke the parent class, we define some defaults\n    let groups = [];\n    let persist = ['baseURL'];\n    let data = {\n      baseURL: requestConfig.baseURL || '',\n      mode: 'cors',\n      credentials: 'same-origin',\n      headers: {\n        Accept: 'application/json'\n      }\n    };\n\n    if (requestConfig.headers)\n      Object.keys(requestConfig.headers).forEach(header => {\n        data.headers[header] = requestConfig.headers[header];\n      });\n\n    if (requestConfig.credentials) data.credentials = requestConfig.credentials;\n    if (requestConfig.mode) data.mode = requestConfig.mode;\n\n    super('request', global, { groups, data, persist });\n\n    this.requestIntercept = requestConfig.requestIntercept;\n    this.responseIntercept = requestConfig.responseIntercept;\n    this.timeout = requestConfig.timeout;\n    this.saveHistory =\n      typeof requestConfig.saveHistory === 'undefined' ? true : false;\n\n    this.global.request = {\n      get: this.get.bind(this),\n      post: this.post.bind(this),\n      put: this._put.bind(this),\n      patch: this.patch.bind(this),\n      delete: this.delete.bind(this),\n      queryify: this.queryify.bind(this)\n    };\n  }\n\n  get(url: string, headers?: object) {\n    return this.send(url, 'get', {}, headers);\n  }\n\n  post(url: string, body?: object, headers?: object) {\n    return this.send(url, 'post', body, headers);\n  }\n\n  _put(url: string, body?: object, headers?: object) {\n    return this.send(url, 'put', body, headers);\n  }\n\n  patch(url: string, body?: object, headers?: object) {\n    return this.send(url, 'patch', body, headers);\n  }\n\n  delete(url: string, body?: object, headers?: object) {\n    return this.send(url, 'delete', body, headers);\n  }\n\n  async send(\n    url: string,\n    method: Method,\n    body: object | string = {},\n    headers: object\n  ) {\n    const requestHeaders = Object.assign({}, this.public.object.headers);\n\n    if (headers)\n      Object.keys(headers).forEach(header => {\n        requestHeaders[header] = headers[header];\n      });\n\n    // If method is not get set application type\n    if (method !== 'get' && requestHeaders['Content-Type'] === undefined)\n      requestHeaders['Content-Type'] = 'application/json';\n\n    let fullURL;\n\n    if (url.startsWith('http')) fullURL = url;\n    else fullURL = `${this.public.object.baseURL}/${url}`;\n\n    // Stringify body\n    body = JSON.stringify(body);\n\n    // Build options\n    this.options = {};\n    this.options.credentials = this.public.object.credentials;\n    this.options.mode = this.public.object.mode;\n\n    // Build final fetch options object\n    const options = Object.assign(\n      {\n        headers: requestHeaders,\n        method: method.toUpperCase(),\n        body: method === 'get' ? null : body\n      },\n      this.options\n    );\n\n    if (this.requestIntercept)\n      this.requestIntercept(this.global.getContext(this), options);\n\n    let response: any;\n\n    if (this.timeout) {\n      response = await Promise.race([\n        fetch(fullURL, options),\n        new Promise((resolve, reject) =>\n          setTimeout(() => reject('timeout'), this.timeout)\n        )\n      ]);\n    } else {\n      response = await fetch(fullURL, options);\n    }\n\n    const contentType = response.headers.get('content-type');\n\n    // extract body\n    if (contentType && contentType.indexOf('application/json') !== -1) {\n      body = await response.json();\n    } else {\n      body = await response.text();\n    }\n\n    // history\n    if (!this.saveHistory)\n      this.collect({\n        id: Date.now(),\n        status: response.status,\n        timestamp: new Date(),\n        response: body\n      });\n\n    // inject headers into prototype\n    let final;\n\n    // If reponse body is an object, create a custom object with response function in prototype, so headers and the full response data can be accessed outside of this class\n    if (!Array.isArray(body) && typeof body === 'object') {\n      final = Object.create({\n        response: () => {\n          return response;\n        }\n      });\n      const keys = Object.keys(body);\n      for (let i = 0; i < keys.length; i++) {\n        const property = keys[i];\n        final[property] = body[property];\n      }\n      // if the body is not an object, we can not inject a prototype, so just return the rew body\n    } else {\n      final = body;\n    }\n    // intercept response\n    if (this.responseIntercept) {\n      response.data = body;\n      this.responseIntercept(this.global.getContext(this), response);\n    }\n\n    // reject if bad response status\n    if (response.ok || response.redirected) return final;\n\n    // resolve response\n    throw final;\n  }\n\n  // Adapted from: https://github.com/Gozala/querystring/blob/master/encode.js\n  queryify(obj) {\n    const stringifyPrimitive = function(value) {\n      switch (typeof value) {\n        case 'string':\n          return value;\n\n        case 'boolean':\n          return value ? 'true' : 'false';\n\n        case 'number':\n          return isFinite(value) ? value : '';\n\n        default:\n          return '';\n      }\n    };\n    // validate input\n    if (typeof obj != 'object') return;\n\n    return Object.keys(obj)\n      .map(key => {\n        const encodedKey = encodeURIComponent(stringifyPrimitive(key)) + '=';\n        // if value is an array, encode with same key as parent\n        if (Array.isArray(obj[key]))\n          return obj[key]\n            .map(value => {\n              return encodedKey + encodeURIComponent(stringifyPrimitive(value));\n            })\n            .join('&');\n        // join encoded key with value\n        return encodedKey + encodeURIComponent(stringifyPrimitive(obj[key]));\n      })\n      .join('&');\n  }\n}\n","import Pulse from '..';\nimport Dep from '../dep';\nimport { ComponentContainer } from '../subController';\n\nfunction ReactWrapper(\n  ReactComponent: any,\n  depsFunc?: Function,\n  pulseInstance?: Pulse\n) {\n  const pulse = pulseInstance || globalThis.__pulse;\n\n  if (!pulse)\n    console.error(\n      `Pulse X React: Pulse instance inaccessible, it is likely you're using \"Pulse.React()\" before \"new Pulse()\"`\n    );\n\n  const global = pulse._private.global,\n    React = global.config.frameworkConstructor;\n\n  return class extends React.Component {\n    // does pulse need to map data to props\n    public mappable: boolean = false;\n\n    constructor(public props: any) {\n      super(props);\n\n      // register component\n      const cC = global.subs.registerComponent(this, {}, depsFunc);\n\n      // use mapData to subscribe since we need to support older versions\n      cC.automaticDepTracking = depsFunc === undefined;\n\n      if (!cC.automaticDepTracking) {\n        const { mapToProps, legacy } = global.subs.mapData(\n          depsFunc,\n          this,\n          true\n        );\n\n        cC.mappable = mapToProps;\n        cC.legacy = legacy;\n      }\n    }\n\n    render() {\n      let props = { ...this.props },\n        cC = global.subs.get(this.__pulseUniqueIdentifier),\n        customProp = global.config.mapDataUnderPropName,\n        isFunc = typeof depsFunc === 'function';\n\n      // METHOD (1) if no depFunc was supplied Pulse will track accessed dependencies\n      if (cC.automaticDepTracking) {\n        // start tracking component\n        global.subs.trackingComponent = cC;\n      }\n      // METHOD (2) if custom prop is set and we were supplied a new mapData function\n      else if (cC.mappable && customProp && isFunc) {\n        props = {\n          ...props,\n          [customProp]: cC.depsFunc(global.contextRef)\n        };\n      }\n      // METHOD (3) Pulse 2.2 map directly to props\n      else if (cC.mappable && isFunc) {\n        // concat current props with lastest pulse values\n        props = { ...props, ...cC.depsFunc(global.contextRef) };\n      }\n      // METHOD (4) we were supplied legacy mapData object, string notation 'collection/property'\n      else if (cC.legacy) {\n        props = {\n          ...props,\n          // use custom prop name or if unset use 'pulse' since we know it's legacy\n          [customProp || 'pulse']: global.subs.legacyMapData(cC.depsFunc)\n            .evaluated\n        };\n      }\n\n      return React.createElement(ReactComponent, props);\n    }\n  };\n}\n\nexport default {\n  name: 'react',\n  bind(pulseConstructor) {\n    pulseConstructor.React = ReactWrapper;\n  },\n  updateMethod(componentInstance: any, updatedData: Object) {\n    if (updatedData) {\n      componentInstance.setState(updatedData);\n    } else {\n      componentInstance.forceUpdate();\n    }\n  },\n  onReady() {\n    //\n  }\n};\n","import Pulse from '../main';\n\nexport default {\n  name: 'vue',\n  bind(pulseConstructor) {\n    pulseConstructor.install = Vue => {\n      const pulse = globalThis.__pulse;\n      const global = pulse._private.global;\n      const config = pulse._private.global.config;\n      Vue.mixin({\n        beforeCreate() {\n          // bind root properties\n          Object.keys(global.contextRef).forEach(moduleInstance => {\n            this['$' + moduleInstance] = global.contextRef[moduleInstance];\n          });\n          if (pulse.utils) this.$utils = pulse.utils;\n          if (pulse.services) this.$services = pulse.services;\n\n          // register component with Pulse\n          global.subs.registerComponent(this);\n\n          // alias map\n          const mapData = global.subs.mapData.bind(global.subs);\n\n          this.mapData = properties => mapData(properties, this);\n        },\n        mounted() {\n          if (this.__pulseUniqueIdentifier && config.waitForMount)\n            pulse.mount(this);\n        },\n        beforeDestroy() {\n          if (this.__pulseUniqueIdentifier && config.autoUnmount)\n            global.subs.unmount(this);\n        }\n      });\n    };\n  },\n  updateMethod(componentInstance: any, updatedData: Object) {\n    for (let dataKey in updatedData) {\n      componentInstance.$set(componentInstance, dataKey, updatedData[dataKey]);\n    }\n  },\n  onReady(pulseConstructor: Pulse) {\n    const Vue = pulseConstructor.intergration.frameworkConstructor;\n    Vue.use(pulseConstructor);\n  }\n};\n","import reactIntergration from './react.intergration';\nimport vueIntergration from './vue.intergration';\n\nexport interface Intergration {\n  frameworkConstructor: any;\n  name: any;\n  bind: Function;\n  wrapper: Function;\n  updateMethod: Function;\n  onReady: Function;\n}\n\nexport default (frameworkConstructor, PulseConstructor) => {\n  // React support\n  if (\n    frameworkConstructor.hasOwnProperty(\n      '__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'\n    )\n  ) {\n    PulseConstructor.intergration = reactIntergration;\n    // Vue support\n  } else if (frameworkConstructor.name === 'Vue') {\n    PulseConstructor.intergration = vueIntergration;\n\n    // Custom Intergration\n  } else if (\n    frameworkConstructor.hasOwnProperty('name') &&\n    frameworkConstructor.hasOwnProperty('bind') &&\n    frameworkConstructor.hasOwnProperty('updateData')\n  ) {\n    PulseConstructor.intergration = frameworkConstructor;\n  }\n\n  PulseConstructor.intergration.frameworkConstructor = frameworkConstructor;\n\n  if (!PulseConstructor.intergration) {\n    console.error(\n      'Pulse Error - Intergration not found, make sure to call \"Pulse.use()\" before \"new Pulse()\"'\n    );\n  }\n\n  PulseConstructor.intergration.bind(PulseConstructor);\n\n  // PulseConstructor.intergration.bind(PulseConstructor);\n};\n","import Runtime from './runtime';\nimport Module from './module';\nimport Collection from './module/modules/collection';\nimport SubController from './subController';\nimport RelationController from './relationController';\nimport Storage from './storage';\nimport Request from './collections/request';\nimport { genId, log, defineConfig } from './helpers';\nimport {\n  Private,\n  RootCollectionObject,\n  RootConfig,\n  ModuleInstance\n} from './interfaces';\nimport { JobType } from './runtime';\nimport use, { Intergration } from './intergrations/use';\n\nexport default class Pulse {\n  public _private: Private;\n  static instance = null;\n\n  static intergration: Intergration;\n  static use: Function = plugin => use(plugin, Pulse);\n\n  static React?: Function;\n  static install?: Function;\n  constructor(root: RootCollectionObject = {}) {\n    this._private = {\n      modules: {},\n      collections: {},\n      helpers: {},\n      services: {},\n      keys: {\n        modules: ['base'],\n        collections: [],\n        services: []\n      },\n      events: {},\n      global: {\n        config: this.initConfig(root.config, root.framework),\n        contextRef: {},\n        // Instances\n        subs: null,\n        relations: null,\n        storage: null,\n        // State\n        initComplete: false,\n        runningWatcher: false,\n        runningComputed: false,\n        runningPopulate: false,\n        mappingData: false,\n        collecting: false,\n        touching: false,\n        touched: false,\n        gettingContext: false,\n        // Function aliases\n        getInternalData: this.getInternalData.bind(this),\n        getContext: this.getContext.bind(this),\n        log: this.log.bind(this),\n        getModuleInstance: this.getModuleInstance.bind(this),\n        uuid: genId\n      }\n    };\n    const self = this._private;\n\n    // Bind static objects directly to instance\n    ['utils', 'staticData'].forEach(type => {\n      if (root[type]) this[type] = root[type];\n    });\n\n    if (!root.config) root.config = {};\n    if (root['framework']) root.config.framework = root['framework'];\n\n    // Create storage instance\n    self.global.storage = new Storage(root.storage);\n\n    // Create controller instances\n    self.global.relations = new RelationController(self.global);\n    self.global.subs = new SubController(self.global);\n\n    // init Runtime class into the global object\n    this.initRuntime();\n    this.registerModules(root);\n\n    this.runAllComputed();\n    this.runAllOnReady();\n\n    this.initComplete();\n  }\n\n  registerModules(root: RootCollectionObject) {\n    let self = this._private,\n      namespace = {};\n\n    // register base module\n    self.modules.base = new Module('base', self.global, root);\n\n    // alias base module public properties\n    for (let property of self.modules.base.public.properties)\n      if (\n        [\n          ...self.modules.base.public.mutableProperties,\n          ...self.modules.base.keys.computed\n        ].includes(property)\n      )\n        self.modules.base.public.createReactiveAlias(this, property);\n      else this[property] = self.modules.base.public.object[property];\n\n    // assign actions to root\n    for (let property of self.modules.base.keys.actions)\n      this[property] = self.modules.base.public.object[property];\n\n    // optionally register request module\n    if (root.request) {\n      self.modules.request = new Request(self.global, root.request);\n      self.keys.modules.unshift('request');\n      namespace['request'] = self.modules.request.public.object;\n    }\n\n    // for each module type, and if module type exits on root, create module instances\n    ['modules', 'collections', 'services'].forEach(category => {\n      if (!root[category]) return;\n\n      // declare module names as keys within respective category\n      self.keys[category] = [\n        ...self.keys[category],\n        ...Object.keys(root[category])\n      ];\n\n      // for each module instance within this category\n      self.keys[category].forEach(instanceName => {\n        if (instanceName === 'base' || instanceName === 'request') return;\n\n        let instanceConfig = root[category][instanceName],\n          moduleStore: any = self[category],\n          useCat: boolean = false;\n\n        // switch differnet categories to init the correct constructor\n        switch (category) {\n          case 'modules':\n            moduleStore[instanceName] = new Module(\n              instanceName,\n              self.global,\n              instanceConfig\n            );\n\n            break;\n          case 'collections':\n            moduleStore[instanceName] = new Collection(\n              instanceName,\n              self.global,\n              instanceConfig\n            );\n            break;\n          case 'services':\n            moduleStore[instanceName] = new Module(\n              instanceName,\n              self.global,\n              instanceConfig\n            );\n            useCat = true;\n            break;\n        }\n\n        let publicObject = moduleStore[instanceName].public.object;\n\n        // assign instance to namespace\n        if (useCat) {\n          // if the category does not exist on the namespace create it\n          if (!namespace[category]) namespace[category] = {};\n          // assign the public object from the module instance to the corresponding namspace with category\n          namespace[category][instanceName] = publicObject;\n          // the same thing as above except without category\n        } else namespace[instanceName] = publicObject;\n      });\n    });\n\n    // preserve refrence of clean namespace object\n    self.global.contextRef = {\n      ...namespace,\n      base: self.modules.base.public.object\n    };\n\n    // bind namespace to root of pulse\n    for (let key in namespace) this[key] = namespace[key];\n\n    if (self.global.config.baseModuleAlias)\n      this['base'] = self.modules.base.public.object;\n  }\n\n  public loopModules(callback: Function) {\n    const keys = this._private.keys;\n    for (let moduleType in keys)\n      keys[moduleType].forEach(moduleName =>\n        callback(this._private[moduleType][moduleName])\n      );\n  }\n\n  private initRuntime() {\n    this._private.global.runtime = new Runtime(\n      this._private.collections,\n      this._private.global\n    );\n  }\n\n  private runAllComputed(): void {\n    this.loopModules(\n      moduleInstance =>\n        moduleInstance.keys.computed &&\n        moduleInstance.keys.computed.forEach(computedKey => {\n          const computed = moduleInstance.computed[computedKey];\n          // console.log(computed);\n          this._private.global.runtime.queue({\n            type: JobType.COMPUTED_REGEN,\n            collection: moduleInstance,\n            property: computed\n          });\n          // moduleInstance.runWatchers(computed.name);\n        })\n    );\n    // console.log(this._private.global.runtime);\n    this._private.global.runtime.run();\n  }\n  private runAllOnReady(): void {\n    this.loopModules(moduleInstance => {\n      if (moduleInstance.onReady)\n        moduleInstance.onReady(this._private.global.getContext(moduleInstance));\n    });\n  }\n\n  initComplete() {\n    this._private.global.log('**Init Complete**');\n    this._private.global.initComplete = true;\n    log('INIT COMPLETE', Object.assign({}, this));\n    try {\n      globalThis.__pulse = this;\n    } catch {}\n    if (!this._private.global.config.bindInstanceTo) {\n      try {\n        window[this._private.global.config.bindInstanceTo as string] = this;\n      } catch (e) {}\n    }\n    if (Pulse.intergration) Pulse.intergration.onReady(Pulse);\n  }\n\n  public wrapped(ReactComponent, mapData) {\n    return Pulse.React(ReactComponent, mapData);\n  }\n\n  public mapData(func, instance) {\n    // if component is not already registered\n    if (!instance.__pulseUniqueIdentifier)\n      this._private.global.subs.registerComponent(instance, {}, func);\n    // return mapData func\n    return this._private.global.subs.mapData(func, instance);\n  }\n\n  public initConfig(config: RootConfig, framework): RootConfig {\n    // if constructor already init\n    if (!this._private) {\n      // define config\n      config = defineConfig(config, {\n        framework: null,\n        frameworkConstructor: null,\n        waitForMount: false,\n        autoUnmount: true,\n        computedDefault: null,\n        logJobs: false,\n        baseModuleAlias: false,\n        mapDataUnderPropName: false,\n        bindInstanceTo: false\n      });\n    } else {\n      // merge config\n      config = { ...this._private.global.config, ...config };\n    }\n\n    if (!framework) framework = config.framework;\n\n    // detect if framework passed in is a React constructor\n    if (!Pulse.intergration && framework) {\n      Pulse.use(framework, Pulse);\n    }\n    if (!Pulse.intergration) {\n      console.warn('Pulse Warning - No intergrated framework');\n    } else {\n      config.framework = Pulse.intergration.name;\n      config.frameworkConstructor = Pulse.intergration.frameworkConstructor;\n    }\n\n    if (framework === 'react') {\n      if (config.waitForMount != false) config.waitForMount = true;\n      if (config.autoUnmount != false) config.autoUnmount = true;\n    }\n\n    if (this._private) this._private.global.config = config;\n\n    return config;\n  }\n\n  // THIS WONT WORK\n  getInternalData(collection, primaryKey) {\n    return this._private.collections[collection].findById(primaryKey);\n  }\n\n  public getContext(moduleInstance?: ModuleInstance): { [key: string]: any } {\n    let context: Object = {};\n    this._private.global.gettingContext = true; // prevent reactive getters from tracking dependencies while building context\n\n    if (!moduleInstance) {\n      context = this._private.global.contextRef;\n    } else context = (moduleInstance as ModuleInstance).getSelfContext();\n\n    if (this['utils']) context['utils'] = this['utils'];\n\n    // spread base context\n    context = {\n      base: this._private.modules.base.public.object,\n      ...this._private.modules.base.public.object, // invokes getters, dat bad\n      ...context\n    };\n\n    this._private.global.gettingContext = false;\n    return context;\n  }\n\n  public getContextRef() {\n    return this._private.global.contextRef;\n  }\n\n  subscribe(instance: any, properties: Function) {}\n\n  emit(name: string, payload: any): void {\n    if (this._private.events[name])\n      for (let i = 0; i < this._private.events[name].length; i++) {\n        const callback = this._private.events[name][i];\n\n        callback(payload);\n      }\n  }\n  on(name: string, callback: () => any): void {\n    if (!Array.isArray(this._private.events[name]))\n      this._private.events[name] = [callback];\n    else this._private.events[name].push(callback);\n  }\n\n  // re-init storage object with new config\n  public updateStorage(storageConfig: {}): void {\n    this._private.global.storage = new Storage(storageConfig);\n\n    // re-init all collections persist to ensure correct values\n\n    this._private.keys.collections.forEach(collectionName => {\n      let collection = this._private.collections[collectionName];\n\n      collection.initPersist(collection.root.persist);\n    });\n  }\n\n  public getModuleInstance(name: string): ModuleInstance {\n    const self = this._private;\n    let moduleInstance: ModuleInstance;\n    if (self.modules.hasOwnProperty(name)) moduleInstance = self.modules[name];\n    if (self.collections.hasOwnProperty(name))\n      moduleInstance = self.collections[name];\n    return moduleInstance;\n  }\n\n  log(thing): void {\n    if (!this._private.global.config.logJobs) return;\n\n    console.log('RUNTIME JOB', thing);\n  }\n  logJobs() {\n    this._private.global.config.logJobs = true;\n  }\n}\n\nglobalThis.Pulse = Pulse; // ReMOVE THIS\n"],"names":["Dep","tslib_1.__extends","Reactive"],"mappings":"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"}