{"version":3,"file":"pulse.min.js","sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../lib/Utils.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../lib/Collection.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../lib/Base.js","../lib/Request.js","../lib/index.js","../lib/Pulse.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","module.exports = {\n  Log: text => {\n    const env = process.env.NODE_ENV;\n    if (env === 'development') {\n      // eslint-disable-next-line no-console\n      // console.log(`[Pulse] - ${text}`);\n    }\n  },\n\n  assert: message => {\n    const env = process.env.NODE_ENV;\n    if (env === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(`[Pulse] - ${message}`);\n    }\n  },\n\n  warn: message => {\n    console.error(`[Pulse] - ${message}`);\n  }\n};\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import { Log, assert, warn } from './Utils';\r\n\r\n// The heart of Pulse.\r\nexport default class Collection {\r\n  constructor(\r\n    { name, global },\r\n    {\r\n      data = {},\r\n      model = {},\r\n      actions = {},\r\n      filters = {},\r\n      indexes = [],\r\n      groups = [],\r\n      routes = {},\r\n      watch = {},\r\n      persist = [],\r\n      local = {},\r\n      onReady\r\n    }\r\n  ) {\r\n    this._name = name;\r\n\r\n    this._actionRefrence = {\r\n      collect: this.collect.bind(this),\r\n      undo: this.undo.bind(this),\r\n      move: this.move.bind(this),\r\n      update: this.update.bind(this),\r\n      put: this.put.bind(this),\r\n      delete: this.delete.bind(this),\r\n      deleteGroup: this.deleteGroup.bind(this),\r\n      findById: this.findById.bind(this),\r\n      getGroup: this.getGroup.bind(this),\r\n      newGroup: this.newGroup.bind(this),\r\n      forceUpdate: this.forceUpdate.bind(this),\r\n      throttle: this.throttle.bind(this),\r\n      remove: this.remove.bind(this),\r\n      set: this.set.bind(this),\r\n      increment: this.increment.bind(this),\r\n      decrement: this.decrement.bind(this),\r\n      purge: this.purge.bind(this),\r\n      watch: this.watch.bind(this),\r\n      replaceIndex: this.replaceIndex.bind(this)\r\n    };\r\n\r\n    // this is used to pass the collections public properties into other collections without creating a circular refrence for the entire collection. It also helps control namespace.\r\n    const publicObject = {\r\n      groups: {},\r\n      data: {},\r\n      actions: {},\r\n      filters: {},\r\n      routes: {},\r\n      indexes: {}\r\n    };\r\n\r\n    // Create proxy on the for public data\r\n    this._public = this.initProxy(publicObject);\r\n\r\n    // Bind refrences to parent objects\r\n    this._global = global;\r\n    this._regenQueue = this._global.regenQueue;\r\n\r\n    this._onReady = onReady;\r\n    this._model = model;\r\n    this._filters = filters;\r\n    this._local = local;\r\n\r\n    this._data = {}; // the internal data store\r\n    this._indexes = {}; // arrays of primary keys\r\n    this._watchers = {};\r\n    this._storage = {};\r\n\r\n    // direct or dynamic data relations for filters\r\n    this._filtersRelatedToData = {};\r\n    this._filtersRelatedToGroup = {};\r\n\r\n    this._relations = {};\r\n\r\n    this._groupRelations = {};\r\n    this._foreignGroupRelations = {};\r\n\r\n    this._subscribedToData = {};\r\n\r\n    this._watchers = {};\r\n    this._internalWatchers = {};\r\n\r\n    this._persist = [];\r\n    this._throttles = [];\r\n    this._modelTypes = [];\r\n    this._mutableData = [];\r\n    this._indexesToRegen = [];\r\n    this._filtersToForceRegen = [];\r\n    this._actionProcessingStack = [];\r\n\r\n    this._collectionSize = 0;\r\n    this._primaryKey = null;\r\n\r\n    this._executing = false;\r\n    this._collecting = false;\r\n    this._performingAction = false;\r\n    this._allowInternalChange = false;\r\n\r\n    // so other collections can access this collection's internal data\r\n    this._global.internalDataRef[this._name] = this._data;\r\n\r\n    this.initStorage();\r\n\r\n    // analyse the model\r\n    this.initModel(model);\r\n\r\n    // initialize routes & actions\r\n    this.initData(data);\r\n    this.initGroups(indexes.concat(groups));\r\n    this.initRoutes(routes);\r\n    this.initFilters(filters);\r\n    this.initActions(actions);\r\n\r\n    // Bind watchers\r\n    this.initWatchers(watch);\r\n\r\n    // map collection categories to shared namespace\r\n    this.prepareNamespace();\r\n\r\n    // Load persisted values from storage\r\n    this.initPersist(persist);\r\n\r\n    this.initOnReady(onReady);\r\n  }\r\n\r\n  initStorage() {\r\n    // Check if the chosen storage system is a promise\r\n    this._storageIsPromise = this._global.storage.async ? true : false;\r\n    if (typeof this._global.storage.get != 'function') {\r\n      this._global.storageInvalid = true;\r\n      return assert(\r\n        'Unable to access local storage, please assign a valid storage solution manually if you want data from Pulse to persist.'\r\n      );\r\n    }\r\n    if (this._global.storage.get('_') instanceof Promise)\r\n      this._storageIsPromise = true;\r\n\r\n    let asyncGet = key => {\r\n      return new Promise(async resolve => {\r\n        try {\r\n          let res = await this._global.storage.get(key);\r\n          // if result is a string, JSON parse, otherwise just return\r\n          if (typeof res !== 'string') return resolve(res);\r\n          let parsed = JSON.parse(res);\r\n          return resolve(parsed);\r\n        } catch {\r\n          resolve(null);\r\n        }\r\n      });\r\n    };\r\n\r\n    let syncGet = key => {\r\n      let res = this._global.storage.get(key);\r\n      try {\r\n        // if result is a string, JSON parse, otherwise just return\r\n        let parsed = JSON.parse(res);\r\n        return parsed;\r\n      } catch (e) {\r\n        return res;\r\n      }\r\n    };\r\n\r\n    // bind and wrap get function\r\n    this._storage.get = key =>\r\n      this._storageIsPromise ? asyncGet(key) : syncGet(key);\r\n\r\n    // bind and wrap set function\r\n    this._storage.set = (key, value) => {\r\n      this._global.storage.set(key, JSON.stringify(value));\r\n    };\r\n\r\n    // bind and wrap remove function\r\n    this._storage.remove = key => this._global.storage.remove(key);\r\n\r\n    // this._storage.clear = prepareStorage.clear.bind(_storage);\r\n  }\r\n\r\n  /**\r\n   * Initializse persist\r\n   * @param {Array} persist\r\n   */\r\n  initPersist(persist) {\r\n    if (this._global.storageInvalid) return;\r\n\r\n    persist.forEach(property => {\r\n      this._persist.push(property);\r\n      let storageKey = `_${this._name}_${property}`;\r\n\r\n      // find property in storage\r\n      if (!this._public.hasOwnProperty(property))\r\n        return assert(\r\n          `Unable to persist property \"${property}\" in collection \"${\r\n            this._name\r\n          }\" as it does not exist.`\r\n        );\r\n\r\n      // Validate property exists and determine category\r\n\r\n      let category = this.searchNamespaceForProperty(property);\r\n      if (!category)\r\n        return assert(`Unable to persist. Property does not exist.`);\r\n\r\n      // Async get method\r\n      if (this._storageIsPromise) {\r\n        this._storage.get(storageKey).then(data => {\r\n          if (data === null || data === undefined) return;\r\n          this._public[category][property] = data;\r\n          if (this._public.hasOwnProperty(property))\r\n            this._public[property] = data;\r\n        });\r\n\r\n        // Synchronous get method\r\n      } else {\r\n        let data = this._storage.get(storageKey);\r\n\r\n        if (data === null || data === undefined) return;\r\n\r\n        // The syncronous version needs to take care of it's\r\n        data = this.initDeepReactivity(data, property);\r\n\r\n        this._allowInternalChange = true;\r\n        this._public[category][property] = data;\r\n\r\n        if (this._public.hasOwnProperty(property)) {\r\n          this._allowInternalChange = true;\r\n          this._public[property] = data;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializse the data and deep reactivity\r\n   * @param {Object} data\r\n   */\r\n  initData(data) {\r\n    Object.keys(data).forEach(key => {\r\n      this._mutableData.push(key);\r\n      data[key] = this.initDeepReactivity(data[key], key);\r\n    });\r\n    this._public.data = this.initProxy(data);\r\n  }\r\n\r\n  /**\r\n   * Initializse the groups and their respective indexes.\r\n   * @param {Array} groups\r\n   */\r\n  initGroups(groups) {\r\n    this._public.groups = this.initProxy({});\r\n    for (let i = 0; i < groups.length; i++) {\r\n      const index = groups[i];\r\n      if (this._public.groups[index] || this._indexes[index])\r\n        return assert(`Duplicate declaration for index ${index}`);\r\n      // create a new empty array for the index\r\n      this._indexes[index] = new Array();\r\n      this._public.groups[index] = new Array();\r\n      this._public.indexes[index] = new Array();\r\n    }\r\n    // proxify indexes\r\n    this._public.indexes = this.initProxy(this._public.indexes, 'indexes');\r\n  }\r\n\r\n  /**\r\n   * Initializse the filters\r\n   * @param {Object} filters\r\n   */\r\n  initFilters(filters) {\r\n    // map filters\r\n    const keys = Object.keys(filters);\r\n    // this._public.filters = this.initProxy({});\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const filterName = keys[i];\r\n      // set the property to an empty array, until we've parsed the filter\r\n      this._public.filters[filterName] = [];\r\n      this._global.allFilters.push(filterName);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializse the routes\r\n   * @param {Object} routes\r\n   */\r\n  initRoutes(routes) {\r\n    const keys = Object.keys(routes);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const routeName = keys[i];\r\n      const _this = this;\r\n      this._public.routes[routeName] = function() {\r\n        let requestObject = Object.assign(_this._global.request);\r\n        requestObject.context = _this.getContextObject();\r\n        return routes[routeName].apply(\r\n          null,\r\n          [_this._global.request].concat(Array.prototype.slice.call(arguments))\r\n        );\r\n      };\r\n    }\r\n  }\r\n\r\n  getContextObject() {\r\n    const context = Object.assign(\r\n      {\r\n        data: this._public.data,\r\n        filters: this._public.filters,\r\n        groups: this._public.groups,\r\n        actions: this._public.actions,\r\n        routes: this._public.routes\r\n      },\r\n      this._global.dataRef,\r\n      this._actionRefrence,\r\n      { local: this._local }\r\n    );\r\n    return context;\r\n  }\r\n\r\n  /**\r\n   * Initializse the actions\r\n   * @param {Object} actions\r\n   */\r\n  initActions(actions) {\r\n    const _this = this;\r\n\r\n    const keys = Object.keys(actions);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const actionName = keys[i];\r\n      // build a wrapper around the action to provide context control execution\r\n      this._public.actions[actionName] = function() {\r\n        // if throttle present, return promise rejection, in case action is waiting on a promise.\r\n        if (_this._throttles.includes(actionName)) return Promise.resolve();\r\n\r\n        // preserve custom arguments\r\n        const customArguments = arguments;\r\n\r\n        // a unique identifier for this invocation, used by undo\r\n        const actionIdentifier = Math.random();\r\n\r\n        // if action is running inside another action, record that action identifier.\r\n        let parentAction = null;\r\n        if (_this._actionProcessingStack.length > 0)\r\n          parentAction =\r\n            _this._actionProcessingStack[\r\n              _this._actionProcessingStack.length - 1\r\n            ].actionIdentifier;\r\n\r\n        // get context object\r\n        const context = _this.getContextObject();\r\n\r\n        // replace default undo method with an action unique undo method\r\n        context.undo = function(error) {\r\n          return _this.undo(actionName, actionIdentifier, error);\r\n        };\r\n\r\n        // wrap action in an intermediary function to preserve context\r\n        const runAction = function() {\r\n          return actions[actionName].apply(\r\n            null,\r\n            [context].concat(Array.prototype.slice.call(customArguments))\r\n          );\r\n        };\r\n\r\n        const actionPackage = {\r\n          id: actionIdentifier,\r\n          name: actionName,\r\n          parentAction,\r\n          runAction\r\n        };\r\n\r\n        return _this.executeAction(actionPackage);\r\n      };\r\n    }\r\n  }\r\n\r\n  executeAction(actionPackage) {\r\n    // declare this action has begun execution\r\n    this._performingAction = actionPackage.name;\r\n\r\n    // capture everything needed to re-run this action in context\r\n    this._actionProcessingStack.push(actionPackage);\r\n\r\n    // invoke action\r\n    const actionOutput = actionPackage.runAction();\r\n\r\n    // declare action has finsihed\r\n    this._performingAction = false;\r\n\r\n    // remove this action from the bottom of the action stack\r\n    this._actionProcessingStack.pop();\r\n\r\n    // if last action in the queue, cleanup\r\n    if (this._actionProcessingStack.length === 0) {\r\n      // optionally wipe history\r\n    }\r\n\r\n    return actionOutput;\r\n  }\r\n\r\n  initWatchers(watchers) {\r\n    const _this = this;\r\n    let keys = Object.keys(watchers);\r\n    for (let index = 0; index < keys.length; index++) {\r\n      const watchFunctionName = keys[index];\r\n      this._watchers[watchFunctionName] = function() {\r\n        const runWatcher = watchers[watchFunctionName](\r\n          _this.getContextObject()\r\n        );\r\n        return runWatcher;\r\n      };\r\n    }\r\n  }\r\n\r\n  initOnReady(onReady) {\r\n    const _this = this;\r\n    this._onReady = function() {\r\n      if (onReady) onReady(_this.getContextObject());\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initializse data proxy\r\n   * @param {Object} obj - the object to apply the proxy to.\r\n   * @param {Boolean} rootProperty - The root property in the collection for deep reactivity.\r\n   */\r\n  initProxy(obj = {}, rootProperty = false, deepProxy = false) {\r\n    // inject custom prototype \"rootProperty\"\r\n    let objectWithCustomPrototype;\r\n\r\n    if (rootProperty)\r\n      objectWithCustomPrototype = Object.create({ rootProperty });\r\n    else {\r\n      let proto = Object.assign({}, this._actionRefrence, rootProperty);\r\n      objectWithCustomPrototype = Object.create(proto);\r\n    }\r\n\r\n    const keys = Object.keys(obj);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const property = keys[i];\r\n      objectWithCustomPrototype[property] = obj[property];\r\n    }\r\n\r\n    if (deepProxy)\r\n      // this proxy enables deep reactivity, a smaller proxy to be installed on all sub propertys of the collection root data\r\n      return new Proxy(objectWithCustomPrototype, {\r\n        set: (target, key, value) => {\r\n          if (Object.getPrototypeOf(target).rootProperty) {\r\n            let rootProperty = Object.getPrototypeOf(target).rootProperty;\r\n            if (this._mutableData.includes(rootProperty)) {\r\n              target[key] = value;\r\n              this.updateSubscribers(rootProperty, this._public[rootProperty]);\r\n              this.findAndUpdateDependents(rootProperty);\r\n            }\r\n            return true;\r\n          }\r\n          target[key] = value;\r\n          return true;\r\n        },\r\n        get: (target, key, value) => {\r\n          return target[key];\r\n        }\r\n      });\r\n    else if (rootProperty === 'indexes')\r\n      // this proxy allows direct modification to an index, and will trigger the relevent group to rebuild\r\n      return new Proxy(objectWithCustomPrototype, {\r\n        set: (target, key, value) => {\r\n          target[key] = value;\r\n          if (!this._allowInternalChange) {\r\n            this.replaceIndex(key, value, true);\r\n          }\r\n          return true;\r\n        },\r\n        get: (target, key, value) => {\r\n          return target[key];\r\n        }\r\n      });\r\n    // the primary proxy for the collection's root data\r\n    return new Proxy(objectWithCustomPrototype, {\r\n      set: (target, key, value) => {\r\n        if (!this._global.initComplete || this._allowInternalChange) {\r\n          target[key] = value;\r\n          this._allowInternalChange = false;\r\n          return true;\r\n        }\r\n\r\n        // For regular mutations to root data\r\n        if (this._mutableData.includes(key)) {\r\n          let previousValue = target[key];\r\n\r\n          target[key] = value;\r\n\r\n          this.recordHistory('mutation', {\r\n            key,\r\n            rootProperty,\r\n            previousValue,\r\n            newValue: value\r\n          });\r\n\r\n          // in case this new data is an object, we should apply proxies to eligible sub properties\r\n          let data = this.initDeepReactivity(target[key], key);\r\n\r\n          // set value to this property\r\n          target[key] = data;\r\n\r\n          // set value on the \"data\" property to mirror this root property\r\n          this._allowInternalChange = true;\r\n          this._public['data'][key] = value;\r\n          this._allowInternalChange = false;\r\n\r\n          // first push the change\r\n          this.updateSubscribers(key, value);\r\n          // now process any dependents that are affected by this change\r\n          this.findAndUpdateDependents(key);\r\n\r\n          return true;\r\n        }\r\n\r\n        // if data is not found on collection root, check prototype for root property name\r\n\r\n        if (Object.keys(this._public).includes(key)) {\r\n          assert(\r\n            `Cannot set data property \"${key}\" in collection \"${\r\n              this._name\r\n            }\". Filters and groups are not mutable.`\r\n          );\r\n        } else {\r\n          assert(\r\n            `Cannot set data property \"${key}\" in collection \"${\r\n              this._name\r\n            }\" as \"${key}\" does not exist.`\r\n          );\r\n        }\r\n        return true;\r\n      },\r\n      get: (target, key, value) => {\r\n        if (Object.getPrototypeOf(target).rootProperty) {\r\n          return target[key];\r\n        }\r\n        if (\r\n          this._global.record &&\r\n          // prevent proxy from reporting access to categories\r\n          !['filters', 'groups', 'indexes', 'data', 'actions'].includes(key) &&\r\n          // ensure we havent already found this dependency\r\n          this._global.dependenciesFound.filter(\r\n            item => item.property === key && item.collection === this._name\r\n          ).length === 0\r\n        ) {\r\n          this._global.dependenciesFound.push({\r\n            property: key,\r\n            collection: this._name\r\n          });\r\n        }\r\n        return target[key];\r\n      }\r\n    });\r\n  }\r\n\r\n  replaceIndex(index, value, preventIndexUpdate) {\r\n    let previousIndex = this._indexes[index];\r\n    this._indexes[index] = value;\r\n    this.buildGroupFromIndex(index, preventIndexUpdate);\r\n    this.findAndUpdateDependents(index);\r\n    this.recordHistory('indexMutation', {\r\n      index,\r\n      previousIndex,\r\n      newIndex: value\r\n    });\r\n  }\r\n\r\n  isWatchableObject(value) {\r\n    let type = typeof value;\r\n    return (\r\n      value != null &&\r\n      type == 'object' &&\r\n      !this.isHTMLElement(value) &&\r\n      !Array.isArray(value)\r\n    );\r\n  }\r\n\r\n  isHTMLElement(obj) {\r\n    try {\r\n      return obj instanceof HTMLElement;\r\n    } catch (e) {\r\n      return (\r\n        typeof obj === 'object' &&\r\n        obj.nodeType === 1 &&\r\n        typeof obj.style === 'object' &&\r\n        typeof obj.ownerDocument === 'object'\r\n      );\r\n    }\r\n  }\r\n\r\n  initDeepReactivity(data, rootProperty) {\r\n    // return;\r\n    let nextToAnalyse = [];\r\n\r\n    if (!this.isWatchableObject(data)) return data;\r\n\r\n    // return this object as a proxy\r\n    const returnProxy = this.initProxy(data, rootProperty, true);\r\n\r\n    // push all children of rootPropery to queue\r\n    const keys = Object.keys(data);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const property = keys[i];\r\n      if (this.isWatchableObject(data[property]))\r\n        nextToAnalyse.push({ target: data, key: property });\r\n    }\r\n\r\n    const loop = () => {\r\n      const next = nextToAnalyse;\r\n      nextToAnalyse = [];\r\n      // loop over queue\r\n      for (let i = 0; i < next.length; i++) {\r\n        const { key, target } = next[i];\r\n        // convert target to proxy\r\n        this._allowInternalChange = true;\r\n        target[key] = this.initProxy(target[key], rootProperty, true);\r\n\r\n        // loop over properties of item in queue\r\n        // is the property an object?\r\n        const keys = Object.keys(target[key]);\r\n        for (let i = 0; i < keys.length; i++) {\r\n          const property = keys[i];\r\n          if (this.isWatchableObject(target[key][property]))\r\n            // if so push target to queue to check properties next round\r\n            nextToAnalyse.push({ target: target[key], key: property });\r\n        }\r\n      }\r\n\r\n      if (nextToAnalyse.length > 0) loop();\r\n      else this._allowInternalChange = false;\r\n    };\r\n    loop();\r\n    return returnProxy;\r\n  }\r\n\r\n  /**\r\n   * Initializse the model configuration.\r\n   * @param {Object} model\r\n   */\r\n  initModel(model) {\r\n    Object.keys(model).forEach(property => {\r\n      Object.keys(model[property]).forEach(config => {\r\n        if (config === 'primaryKey') {\r\n          this._primaryKey = property;\r\n        } else if (config === 'type') {\r\n          if (\r\n            [\r\n              'string',\r\n              'boolean',\r\n              'integer',\r\n              'number',\r\n              'array',\r\n              'object'\r\n            ].includes(model[property].type)\r\n          ) {\r\n            // model types are properties of the model to type check & validate on collect\r\n            if (!this._modelTypes.includes(property)) {\r\n              this._modelTypes.push(property);\r\n            }\r\n          } else {\r\n            assert(\r\n              `Error in model in collection \"${this._name}\", type \"${\r\n                model[property].type\r\n              }\" is not valid.`\r\n            );\r\n          }\r\n        } else if (config === 'parent' || config === 'hasOne') {\r\n          let hasOne = model[property].parent || model[property].hasOne;\r\n          this.createDataRelation(property, hasOne, model[property].assignTo);\r\n        } else if (config === 'has' || config === 'hasMany') {\r\n          let hasMany = model[property].has || model[property].hasMany;\r\n          this.createGroupRelation(property, hasMany, model[property].assignTo);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Establish a data relation with another collection.\r\n   * @param {String} primaryKeyName\r\n   * @param {String} fromCollectionName\r\n   * @param {String} assignTo\r\n   */\r\n  createDataRelation(primaryKeyName, fromCollectionName, assignTo) {\r\n    // if this is a valid collection\r\n    if (!this._global.collectionNamespace.includes(fromCollectionName))\r\n      return assert(`\"${collection}\" is not a valid collection.`);\r\n    // create an object for group names, which will contain arrays of primary keys\r\n    this._relations[primaryKeyName] = {};\r\n    //\r\n    this._relations[primaryKeyName].fromCollectionName = fromCollectionName;\r\n    if (assignTo) this._relations[primaryKeyName].assignTo = assignTo;\r\n  }\r\n\r\n  /**\r\n   * Establish a data relation with another collection, but for entire groups\r\n   * @param {String} primaryKeyName\r\n   * @param {String} fromCollectionName\r\n   * @param {String} assignTo\r\n   */\r\n  createGroupRelation(primaryKeyName, fromCollectionName, assignTo) {\r\n    if (!this._global.collectionNamespace.includes(fromCollectionName))\r\n      return assert(`\"${collection}\" is not a valid collection.`);\r\n\r\n    this._groupRelations[primaryKeyName] = {};\r\n\r\n    this._groupRelations[\r\n      primaryKeyName\r\n    ].fromCollectionName = fromCollectionName;\r\n\r\n    if (assignTo) this._groupRelations[primaryKeyName].assignTo = assignTo;\r\n  }\r\n\r\n  // returns the address of a public property\r\n  searchNamespaceForProperty(property) {\r\n    const searchable = ['filters', 'data', 'groups'];\r\n    for (let i = 0; i < searchable.length; i++) {\r\n      const type = searchable[i];\r\n      if (Object.keys(this._public[type]).includes(property)) {\r\n        return type;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  validateNamespace(context, property) {\r\n    Object.keys(context).forEach(prop => {\r\n      if (context.hasOwnProperty(property)) {\r\n        warn(`Duplicate property \"${property}\" on collection \"${this._name}\"`);\r\n        return false;\r\n      }\r\n    });\r\n    return true;\r\n  }\r\n\r\n  // reserves the namespace for all categories on the component instance before runtime\r\n  prepareNamespace() {\r\n    // settings here..\r\n    Object.keys(this._public).forEach(category => {\r\n      if (['data', 'actions', 'groups', 'filters'].includes(category)) {\r\n        Object.keys(this._public[category]).forEach(item => {\r\n          if (this.validateNamespace(this._public, item))\r\n            this._public[item] = this._public[category][item];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  checkNamespace(name) {\r\n    const avalible = !!this._public.data.hasOwnProperty(name);\r\n    if (!avalible) {\r\n      assert(\r\n        `Namespace error \"${name}\" is already taken for collection \"${\r\n          this._name\r\n        }\".`\r\n      );\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  persistData(key, value) {\r\n    if (this._persist.includes(key)) {\r\n      let storageKey = `_${this._name}_${key}`;\r\n      Log(`Persisting data with key ${storageKey}`);\r\n      this._storage.set(storageKey, value);\r\n    }\r\n  }\r\n\r\n  findPrimaryKey(item) {\r\n    const genericPrimaryIds = ['id', '_id'];\r\n    // detect a primary key\r\n    for (let i = 0; i < genericPrimaryIds.length; i++) {\r\n      const key = genericPrimaryIds[i];\r\n      if (item.hasOwnProperty(key)) this._primaryKey = key;\r\n    }\r\n    if (!this._primaryKey)\r\n      this.dataRejectionHandler(item, 'No primary key supplied.');\r\n  }\r\n\r\n  createRelationForIndex(index) {\r\n    const keys = Object.keys(this._relations);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const primaryKey = keys[i];\r\n      this._relations[primaryKey][index] = [];\r\n    }\r\n  }\r\n\r\n  // this is called by the main class once all collections have been constructed, it runs through each filter, executing the function. It  then uses the data proxy to detect which properties the filter wants to access, and saves them in a dependency graph.\r\n  analyseFilters() {\r\n    if (!this._filters) return;\r\n    const keys = Object.keys(this._filters);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const filter = keys[i];\r\n      this.executeAndAnalyseFilter(filter);\r\n    }\r\n  }\r\n  // this is called by the local analyseFilters() loop and the main class during regen queue processing\r\n  executeAndAnalyseFilter(filter) {\r\n    Log(`Analysing filter \"${filter}\"`);\r\n    // open the door allowing each collection's data proxy to record which properties are accessed by this filter\r\n    this._global.record = true;\r\n\r\n    // execute the filter\r\n    this.executeFilter(filter);\r\n\r\n    // data recorded, close door\r\n    const found = this._global.dependenciesFound;\r\n\r\n    // empty the list of dependencies for next loop\r\n    this._global.dependenciesFound = [];\r\n\r\n    // preliminarily loop over dependencys to find missing dependents\r\n    for (let i = 0; i < found.length; i++) {\r\n      const dependency = found[i];\r\n      if (this.checkForMissingDependency(dependency, filter))\r\n        // don't register anything to dependency graph, this will get done once all depenecies are clear, avoids us having to check or prevent dependency graph from having duplicate entries.\r\n        return;\r\n    }\r\n    this.populateDependencies(found, filter);\r\n\r\n    // mark is as generated so other filters know they are in the clear!\r\n    this._global.generatedFilters.push(this._name + filter);\r\n    Log(`Generated ${filter} for collection ${this._name}`);\r\n  }\r\n\r\n  executeFilter(filter) {\r\n    this._executing = filter;\r\n\r\n    const context = Object.assign(\r\n      {\r\n        data: this._public.data,\r\n        filters: this._public.filters,\r\n        groups: this._public.groups,\r\n        actions: this._public.actions\r\n      },\r\n      this._global.dataRef,\r\n      this._actionRefrence,\r\n      { local: this._local }\r\n    );\r\n\r\n    let data = this._filters[filter](context);\r\n\r\n    this._executing = false;\r\n    // filter executed, now ensure the door is closed before deliverUpdate, as that will trigger the proxy's set trap- and with this still true it will cause an infinate loop.\r\n    this._global.record = false;\r\n    // if the result of the filter is null or undefined, chang\r\n    if (data === undefined || data === null) data = false;\r\n    // update subscribers\r\n    this.deliverUpdate('filters', data, filter);\r\n  }\r\n\r\n  emitToRoot(type, data = {}) {\r\n    this._global.eventBus.message = {\r\n      type,\r\n      data\r\n    };\r\n  }\r\n  // this will fill the index array with the correposonding data and include relational data\r\n  buildGroupFromIndex(index, preventIndexUpdate) {\r\n    // constuct the data from the index\r\n    const constructedArray = [];\r\n    for (let i = 0; i < this._indexes[index].length; i++) {\r\n      let id = this._indexes[index][i];\r\n      let data = this._data[id];\r\n      if (!data) continue;\r\n\r\n      // Data relations\r\n      let relations = Object.keys(this._relations);\r\n      if (relations.length > 0)\r\n        for (let i = 0; i < relations.length; i++) {\r\n          const relationKey = relations[i];\r\n          const rel = this._relations[relationKey];\r\n          const assignTo = rel.hasOwnProperty('assignTo')\r\n            ? rel.assignTo\r\n            : false;\r\n\r\n          if (data.hasOwnProperty(relationKey)) {\r\n            let foreignData = this._global.internalDataRef[\r\n              rel.fromCollectionName\r\n            ][data[relationKey]];\r\n\r\n            if (foreignData) {\r\n              if (assignTo) data[assignTo] = foreignData;\r\n              else data[rel.fromCollectionName] = foreignData;\r\n            }\r\n          }\r\n        }\r\n\r\n      // group relations\r\n      let groupRealtions = Object.keys(this._groupRelations);\r\n      if (groupRealtions.length > 0)\r\n        for (let i = 0; i < groupRealtions.length; i++) {\r\n          const relationKey = groupRealtions[i];\r\n          const rel = this._groupRelations[relationKey];\r\n\r\n          const assignTo = rel.hasOwnProperty('assignTo')\r\n            ? rel.assignTo\r\n            : false;\r\n\r\n          if (data.hasOwnProperty(relationKey)) {\r\n            const foreignData = this._global.dataRef[rel.fromCollectionName][\r\n              data[relationKey]\r\n            ];\r\n\r\n            if (foreignData) {\r\n              if (assignTo) data[assignTo] = foreignData;\r\n              else data[rel.fromCollectionName] = foreignData;\r\n            }\r\n\r\n            // register this relation on the foreign collection for reactive updates\r\n            this.emitToRoot('createForeignGroupRelation', {\r\n              // foreign collection\r\n              foreignCollection: rel.fromCollectionName,\r\n              foreignData: data[relationKey],\r\n              // from this collection\r\n              dependentCollection: this._name,\r\n              dependentGroup: index\r\n            });\r\n          }\r\n        }\r\n      constructedArray.push(data);\r\n    }\r\n\r\n    if (\r\n      this._public.hasOwnProperty(index) ||\r\n      this._public.groups.hasOwnProperty(index)\r\n    )\r\n      // deliver data to public object\r\n      this.deliverUpdate('groups', constructedArray, index);\r\n\r\n    // update public index refrence\r\n    if (!preventIndexUpdate) {\r\n      this._allowInternalChange = true;\r\n      this._public.indexes[index] = this._indexes[index];\r\n      this._allowInternalChange = false;\r\n    }\r\n\r\n    this.findFiltersToRegenFromRelatedGroup(index);\r\n\r\n    // return data for functions like \"findGroup\"\r\n    return constructedArray;\r\n  }\r\n\r\n  // Source data has been modified, these are the functions that will update the relevent indexes and filters to regnerate\r\n  internalDataModified(primaryKey) {\r\n    // if array, find and push all dependents to queue\r\n    if (Array.isArray(primaryKey)) {\r\n      for (let i = 0; i < primaryKey.length; i++) {\r\n        const pK = primaryKey[i];\r\n        this.findGroupsToRegen(pK);\r\n        this.findFiltersToRegenFromRelatedData(pK);\r\n      }\r\n    } else {\r\n      // otherwise find the dependents for a single piece of data\r\n      this.findGroupsToRegen(primaryKey);\r\n      this.findFiltersToRegenFromRelatedData(primaryKey);\r\n    }\r\n    // process regen queue\r\n    this.regenerateGroupsAndFilters();\r\n  }\r\n\r\n  deliverUpdate(type, data, name) {\r\n    // process update, allowInternalChange instructs Proxy to bypass user mutation validation and to not search for dependents to update, as it is already taken care of.\r\n    this._allowInternalChange = true;\r\n    this._public[type][name] = data;\r\n    this._allowInternalChange = false;\r\n    // update root namespaces, eventually add setting here for users that want to disable root namespace assignment\r\n    if (this._public.hasOwnProperty(name)) {\r\n      this._allowInternalChange = true;\r\n      this._public[name] = data;\r\n      this._allowInternalChange = false;\r\n    }\r\n    this.updateSubscribers(name, data);\r\n\r\n    // trigger other collections to regen their groups if any depend on data modified from this collection\r\n    const keys = Object.keys(this._foreignGroupRelations);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const property = keys[i];\r\n      if (name === property)\r\n        this.emitToRoot(\r\n          'rebuildGroupsWithRelations',\r\n          this._foreignGroupRelations[property]\r\n        );\r\n    }\r\n  }\r\n\r\n  updateSubscribers(key, data) {\r\n    Log(`Updating subscribers for ${key}`);\r\n    // trigger watcher for data\r\n    if (this._watchers.hasOwnProperty(key))\r\n      // push to bottom of call stack to ensure dependencies have generated\r\n      setTimeout(() => this._watchers[key](this._global.dataRef));\r\n\r\n    if (this._internalWatchers.hasOwnProperty(key))\r\n      setTimeout(() => {\r\n        for (let i = 0; i < this._internalWatchers[key].length; i++) {\r\n          const callback = this._internalWatchers[key][i];\r\n          callback();\r\n        }\r\n      });\r\n\r\n    // persist data if need be\r\n    this.persistData(key, data);\r\n\r\n    let framework = this._global.config.framework;\r\n\r\n    if (this._subscribedToData[key])\r\n      for (let i = 0; i < this._subscribedToData[key].length; i++) {\r\n        const item = this._subscribedToData[key][i];\r\n\r\n        // find component from component store\r\n        let component = this._global.componentStore[item.componentUUID];\r\n\r\n        // if the component was not found, it has probably been unmounted, so return (TODO: cleanup?)\r\n        if (!component) return;\r\n\r\n        // VUE\r\n        if (framework === 'vue' || component.hasOwnProperty('$vnode')) {\r\n          if (component.__pulseComponentReady)\r\n            component.$set(component, item.key, data);\r\n\r\n          // REACT\r\n        } else if (\r\n          framework === 'react' ||\r\n          component.hasOwnProperty('_reactInternalInstance')\r\n        ) {\r\n          let stateData = {};\r\n          stateData[item.key] = data;\r\n\r\n          if (component.state.hasOwnProperty('_mounted')) {\r\n            if (component.state._mounted) component.setState(stateData);\r\n          } else if (component.hasOwnProperty('__pulseComponentReady')) {\r\n            if (component.__pulseComponentReady) component.setState(stateData);\r\n          } else {\r\n            component.setState(stateData);\r\n          }\r\n\r\n          // VANILLA\r\n        } else {\r\n          // nothing yet, maybe a configurable callback\r\n        }\r\n      }\r\n  }\r\n\r\n  recordHistory(type, data) {\r\n    let fromAction = null;\r\n    let fromActionIdentifier = null;\r\n    let fromActionParentIdentifier = null;\r\n\r\n    if (this._actionProcessingStack.length === 0 && type === 'mutation') return;\r\n\r\n    if (this._actionProcessingStack.length > 0) {\r\n      let currentAction = this._actionProcessingStack[\r\n        this._actionProcessingStack.length - 1\r\n      ];\r\n\r\n      fromActionIdentifier = currentAction.id;\r\n      fromAction = currentAction.name;\r\n\r\n      if (currentAction.parentAction)\r\n        fromActionParentIdentifier = currentAction.parentAction.id;\r\n    }\r\n    let historyItem = {\r\n      type,\r\n      timestamp: Date.now(),\r\n      collection: this._name,\r\n      fromAction,\r\n      fromActionIdentifier,\r\n      fromActionParentIdentifier,\r\n      data\r\n    };\r\n    this._global.history.push(historyItem);\r\n  }\r\n\r\n  populateDependencies(found, filter) {\r\n    const depGraph = this._global.dependencyGraph;\r\n    for (let i = 0; i < found.length; i++) {\r\n      const dependency = found[i];\r\n      // Register dependencies of this filter, only filters have this.\r\n      const key1 = `${dependency.collection}/${dependency.property}`;\r\n      const location1 = depGraph[this._name][filter];\r\n\r\n      if (!location1.dependencies.includes(key1)) {\r\n        location1.dependencies.push(key1);\r\n      }\r\n      // register this filter as a dependent for the foreign filter or data property\r\n      const key2 = `${this._name}/${filter}`;\r\n      const location2 = depGraph[dependency.collection][dependency.property];\r\n\r\n      if (\r\n        location2 &&\r\n        location2.dependents &&\r\n        !location2.dependents.includes(key2)\r\n      ) {\r\n        location2.dependents.push(key2);\r\n      }\r\n    }\r\n  }\r\n\r\n  // ensure it is a filter that has not been generated yet, if it hasn't we should save it to the queue to be checked again after more have been analysed\r\n  checkForMissingDependency(dependency, filter) {\r\n    const glob = this._global;\r\n    if (\r\n      // ensure the dependency is a filter, not an index (group). Indexes should be regenerated before the regen queue is processed. This could be removed if you make the regen queue regen indexes too.\r\n      glob.allFilters.includes(dependency.property) &&\r\n      !glob.generatedFilters.includes(\r\n        dependency.collection + dependency.property\r\n      )\r\n    ) {\r\n      Log(\r\n        `Dependent \"${\r\n          dependency.property\r\n        }\" has not been analysed yet, saving this filter to regen queue.`\r\n      );\r\n      this._regenQueue.push({\r\n        type: 'filter',\r\n        property: filter,\r\n        collection: this._name\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // this function returns all the dependents decending from a particular filter\r\n  findAllDependents(filter) {\r\n    const graph = this._global.dependencyGraph;\r\n    const dependents = graph[this._name][filter].dependents;\r\n    const dependenciesFound = [];\r\n    let loops = 0;\r\n    let lastRound = [];\r\n    for (let i = 0; i < dependents.length; i++) {\r\n      const dep = dependents[i];\r\n      lastRound.push(dep);\r\n      dependenciesFound.push(dep);\r\n    }\r\n    const loop = () => {\r\n      loops++;\r\n      const loopChildren = lastRound;\r\n      lastRound = [];\r\n      for (let i = 0; i < loopChildren.length; i++) {\r\n        const dep = loopChildren[i];\r\n        const depParsed = this.parseKey(dep);\r\n        const search =\r\n          graph[depParsed.collection][depParsed.property].dependents;\r\n        for (let i = 0; i < search.length; i++) {\r\n          const childDep = search[i];\r\n          lastRound.push(childDep);\r\n          dependenciesFound.push(childDep);\r\n        }\r\n      }\r\n      if (loops > 1000)\r\n        return assert(`Maximum stack exceeded for dependent search.`);\r\n      else if (lastRound.length !== 0) loop();\r\n    };\r\n    loop();\r\n    return dependenciesFound;\r\n  }\r\n\r\n  // this function should run when any data is changed. It will find all filters that need to be regnerated now that the parent data has changed.\r\n  findAndUpdateDependents(propertyChanged) {\r\n    let allDependents = [];\r\n    if (Array.isArray(propertyChanged)) {\r\n      for (let i = 0; i < propertyChanged.length; i++) {\r\n        const deps = this.findAllDependents(propertyChanged[i]);\r\n        for (let i = 0; i < deps.length; i++) {\r\n          const dep = deps[i];\r\n          if (!allDependents.includes(dep)) allDependents.push(dep);\r\n        }\r\n      }\r\n    } else {\r\n      allDependents = this.findAllDependents(propertyChanged);\r\n    }\r\n    Log(`Found dependents: ${JSON.stringify(allDependents)}`);\r\n    this.pushDependentsToRegenQueue(allDependents);\r\n  }\r\n\r\n  pushDependentsToRegenQueue(dependentFilters) {\r\n    for (let i = 0; i < dependentFilters.length; i++) {\r\n      const { property, collection } = this.parseKey(dependentFilters[i]);\r\n      // check if already in regen queue\r\n      if (\r\n        !this._regenQueue.find(\r\n          item => item.property === property && item.collection === collection\r\n        )\r\n      ) {\r\n        // add to queue\r\n        this._regenQueue.push({\r\n          type: 'filter',\r\n          property: property,\r\n          collection: collection\r\n        });\r\n      }\r\n    }\r\n    // send a message back to the main class. Refrencing would be impossible without creating a circular refrence, so to avoid that we use proxies to trigger events\r\n    this.emitToRoot('processRegenQueue');\r\n  }\r\n\r\n  forceUpdate(property) {\r\n    if (this._filters.hasOwnProperty(property)) {\r\n      this._regenQueue.push({\r\n        type: 'filter',\r\n        property: property,\r\n        collection: this._name\r\n      });\r\n      this.emitToRoot('processRegenQueue');\r\n    } else if (this._mutableData.includes(property)) {\r\n      this.initDeepReactivity(this._public[property], property);\r\n      this.updateSubscribers(property, this._public[property]);\r\n      this.findAndUpdateDependents(property);\r\n    }\r\n  }\r\n\r\n  collect(data, group) {\r\n    // debugger;\r\n    // validate\r\n    if (!data)\r\n      return assert(\r\n        `Collect error on collection ${this._name}: Data undefined`\r\n      );\r\n    if (!Array.isArray(data)) data = [data];\r\n\r\n    this._collecting = true;\r\n    let indexIsArray = false;\r\n    const indexesModified = [];\r\n    const indexesCreated = [];\r\n\r\n    // create the index\r\n    if (group) {\r\n      if (Array.isArray(group)) {\r\n        indexIsArray = true;\r\n        for (let ind = 0; ind < group.length; ind++) {\r\n          const i = group[ind]; // TODO: this should be switched.\r\n          this.createRelationForIndex(i);\r\n          this._indexesToRegen.push(i);\r\n\r\n          // if index does not exist, create blank index\r\n          if (!this._indexes[i]) this._indexes[i] = [];\r\n\r\n          indexesModified.push({\r\n            indexName: i,\r\n            previousValue: this._indexes[i]\r\n          });\r\n        }\r\n      } else {\r\n        this.createRelationForIndex(group);\r\n        this._indexesToRegen.push(group);\r\n        if (!this._indexes[group]) {\r\n          this._indexes[group] = [];\r\n        }\r\n        indexesCreated.push(group);\r\n      }\r\n    }\r\n    // process the data\r\n    if (!Array.isArray(data)) {\r\n      this.processDataItem(data, group);\r\n    } else {\r\n      for (let i = 0; i < data.length; i++) {\r\n        const item = data[i];\r\n        this.processDataItem(item, group, data);\r\n      }\r\n    }\r\n\r\n    // update any existing indexes where data has been added\r\n\r\n    // record the changes\r\n    this.recordHistory('collect', {\r\n      dataCollected: data,\r\n      indexesCreated,\r\n      indexesModified\r\n    });\r\n\r\n    this._collecting = false;\r\n    Log(\r\n      `Collected ${data.length} items in ${this._name}. With index: ${group}`\r\n    );\r\n    this.regenerateGroupsAndFilters();\r\n  }\r\n\r\n  processDataItem(data, index) {\r\n    let overwrite = true;\r\n    // validate against model\r\n    // if no primary key defined in the model, search for a generic one.\r\n    if (!this._primaryKey) this.findPrimaryKey(data);\r\n\r\n    // data should not be null, but null is an object\r\n    if (data === null)\r\n      return this.dataRejectionHandler(data, `Data cannot be null`);\r\n\r\n    // however data must be an object\r\n    if (typeof data !== 'object')\r\n      return this.dataRejectionHandler(\r\n        data,\r\n        `Collected data must be an object, but we recieved ${typeof data}`\r\n      );\r\n\r\n    for (let i = 0; i < this._modelTypes.length; i++) {\r\n      let propertyName = this._modelTypes[i];\r\n      let type = this._model[propertyName].type;\r\n      data[propertyName] = this.validateDataPropertyAgainstType(\r\n        data[propertyName],\r\n        type\r\n      );\r\n    }\r\n\r\n    // if that primary key does not exist on this data item, reject.\r\n    if (!data.hasOwnProperty(this._primaryKey))\r\n      return this.dataRejectionHandler(data, 'Primary key mismatch. ');\r\n\r\n    let itemID = data[this._primaryKey];\r\n\r\n    // check if we already have the data\r\n    let currentData = this._data[itemID];\r\n    if (currentData) {\r\n      Object.keys(currentData).forEach(property => {\r\n        if (!data.hasOwnProperty(property)) {\r\n          data[property] = currentData[property];\r\n        }\r\n      });\r\n      overwrite = false;\r\n    }\r\n\r\n    // push id into index provided it doesn't already exist on that index\r\n    if (index) {\r\n      if (!Array.isArray(index)) index = [index];\r\n      for (let i = 0; i < index.length; i++) {\r\n        const groupName = index[i];\r\n        if (!this._indexes[groupName].includes(itemID)) {\r\n          this._indexes[groupName].push(itemID);\r\n        }\r\n      }\r\n    }\r\n\r\n    const keys = Object.keys(this._relations);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const relationKey = keys[i];\r\n      const relation = this._relations[relationKey];\r\n      if (Array.isArray(relation[index]))\r\n        relation[index].push(data[relationKey]);\r\n    }\r\n\r\n    // if we've already collected this item, it may exist in other indexes, so regenerate those.\r\n    // (bug: hasOwnProperty didn't work here)\r\n    if (Object.keys(this._data).includes(itemID))\r\n      this.findGroupsToRegen(itemID);\r\n\r\n    // Some filters might have direct links to this piece of data or index (EG: \"getGroup()\" or \"findByID()\")\r\n    this.findFiltersToRegenFromRelatedData(itemID);\r\n    this.findFiltersToRegenFromRelatedGroup(index);\r\n\r\n    // add the data internally\r\n    this._data[itemID] = data;\r\n    if (overwrite) this._collectionSize++;\r\n  }\r\n\r\n  validateDataPropertyAgainstType(value, type) {\r\n    switch (type) {\r\n      case 'array':\r\n        return Array.isArray(value) ? value : [];\r\n      case 'string':\r\n        return typeof value === 'string' ? value : '';\r\n      case 'boolean':\r\n        return typeof value === 'boolean' ? value : false;\r\n      case 'integer':\r\n        return typeof value === 'number' ? value : 0;\r\n      case 'number':\r\n        return typeof value === 'number' ? value : 0;\r\n      case 'object':\r\n        return typeof value === 'object' ? value : {};\r\n      default:\r\n        assert(`Data validation failed. Type: \"${type}\" not supported`);\r\n        return null;\r\n    }\r\n  }\r\n\r\n  findGroupsToRegen(itemID) {\r\n    Log(`looking for indexes for ${itemID}`);\r\n    // check existing indexes for primary key id, here is where we determin which, if any, indexes need to be regenerated\r\n    const keys = Object.keys(this._indexes);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const indexName = keys[i];\r\n      if (\r\n        // the data item exists already in another index\r\n        this._indexes[indexName].includes(itemID) &&\r\n        // we haven't already established this index needs regeneration\r\n        !this._indexesToRegen.includes(indexName)\r\n      ) {\r\n        this._indexesToRegen.push(indexName);\r\n      }\r\n    }\r\n  }\r\n\r\n  // whenever a specific piece of data changes this should fire\r\n  findFiltersToRegenFromRelatedData(primaryKey) {\r\n    if (this._filtersRelatedToData[primaryKey]) {\r\n      for (let i = 0; i < this._filtersRelatedToData[primaryKey].length; i++) {\r\n        const filterName = this._filtersRelatedToData[primaryKey][i];\r\n        if (!this._filtersToForceRegen.includes(filterName))\r\n          this._filtersToForceRegen.push(filterName);\r\n      }\r\n    }\r\n  }\r\n  // whenever a group changes/updates this should fire\r\n  findFiltersToRegenFromRelatedGroup(groupName) {\r\n    if (this._filtersRelatedToGroup[groupName]) {\r\n      for (let i = 0; i < this._filtersRelatedToGroup[groupName].length; i++) {\r\n        const filterName = this._filtersRelatedToGroup[groupName][i];\r\n        if (!this._filtersToForceRegen.includes(filterName))\r\n          this._filtersToForceRegen.push(filterName);\r\n      }\r\n    }\r\n  }\r\n\r\n  regenerateGroupsAndFilters() {\r\n    // add the indexes to the regen queue first\r\n\r\n    for (let _i = 0; _i < this._indexesToRegen.length; _i++) {\r\n      let index = this._indexesToRegen[_i];\r\n      // const element = array[_i];\r\n      // let index = this._indexesToRegen.shift();\r\n      Log(`Rebuilding group \"${index}\" in collection \"${this._name}\"`);\r\n\r\n      this.buildGroupFromIndex(index);\r\n      // any filters dependent on the indexes we've added data to should be regenerated\r\n      if (this._global.dataRef[this._name][index])\r\n        this.findAndUpdateDependents(index);\r\n    }\r\n    // reset\r\n    this._indexesToRegen = [];\r\n    // check for filters to force regen and push them to the regen queue. The regen queue will not accept the same filter twice, so if the dependency graph finds this filter too, it won't generate twice.\r\n    for (let i = 0; i < this._filtersToForceRegen.length; i++) {\r\n      const filter = this._filtersToForceRegen[i];\r\n      this.pushDependentsToRegenQueue([`${this._name}/${filter}`]);\r\n      this.findAndUpdateDependents(filter);\r\n    }\r\n    // clean up once sent\r\n    this._filtersToForceRegen = [];\r\n  }\r\n\r\n  // this function\r\n\r\n  undo(action, actionIdentifier, error) {\r\n    let thingsToRevert = this._global.history.filter(\r\n      item => item.fromActionIdentifier === actionIdentifier\r\n    );\r\n    this.emitToRoot('undo', thingsToRevert);\r\n\r\n    if (error) throw error;\r\n  }\r\n\r\n  // move data by id (or array of IDs) into another index\r\n  move(ids, sourceIndex, destIndex, method) {\r\n    // Validate\r\n    if (!this._indexes[sourceIndex])\r\n      return assert(`Index \"${sourceIndex}\" not found`);\r\n\r\n    if (\r\n      destIndex !== false &&\r\n      destIndex != undefined &&\r\n      !this._indexes[destIndex]\r\n    )\r\n      return assert(`Index \"${destIndex}\" not found`);\r\n\r\n    if (!Array.isArray(ids)) ids = [ids];\r\n\r\n    // record previous values\r\n    let history = {\r\n      ids,\r\n      fromIndex: sourceIndex,\r\n      toIndex: destIndex,\r\n      previousFromIndexValue: this._indexes[sourceIndex],\r\n      previousToIndexValue: this._indexes[destIndex]\r\n    };\r\n\r\n    // make changes\r\n    for (let i = 0; i < ids.length; i++) {\r\n      const id = ids[i];\r\n      if (!this._data[id])\r\n        return assert(\r\n          `Data for id \"${id}\" not found in collection ${this._name}`\r\n        );\r\n\r\n      // remove from source index\r\n      this._indexes[sourceIndex] = this._indexes[sourceIndex].filter(\r\n        item => item !== id\r\n      );\r\n\r\n      //add to dest index\r\n      if (destIndex)\r\n        method === 'unshift'\r\n          ? this._indexes[destIndex].unshift(id)\r\n          : this._indexes[destIndex].push(id);\r\n    }\r\n\r\n    // rebuild groups\r\n    this.buildGroupFromIndex(sourceIndex);\r\n    if (destIndex) this.buildGroupFromIndex(destIndex);\r\n\r\n    // record history\r\n    this.recordHistory('move', history);\r\n\r\n    // update dependents\r\n    if (destIndex) this.findAndUpdateDependents([sourceIndex, destIndex]);\r\n    else this.findAndUpdateDependents([sourceIndex]);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} name - description\r\n   */\r\n  remove(data, group) {\r\n    // validate\r\n    if (typeof group !== 'undefined' && !this._indexes[group])\r\n      return assert(`Group \"${group}\" not found.`);\r\n    else if (!group) return this.delete(data);\r\n\r\n    if (!Array.isArray(data)) data = [data];\r\n    // are we dealing with full data or an index\r\n    if (\r\n      typeof data[0] == 'object' &&\r\n      data[0].hasOwnProperty(this._primaryKey)\r\n    ) {\r\n      // we're dealing with full data, so we need to validate and map to ids\r\n      data = data.map(item => item[this._primaryKey]);\r\n    } else if (typeof data[0] !== 'number') {\r\n      return assert(`Unable to remove data.`);\r\n    }\r\n\r\n    let previousValue = this._indexes[group].concat([]);\r\n\r\n    this._indexes[group] = this._indexes[group].filter(\r\n      key => !data.includes(key)\r\n    );\r\n    this.buildGroupFromIndex(group);\r\n\r\n    this.recordHistory('remove', {\r\n      group,\r\n      previousValue\r\n    });\r\n\r\n    this.findAndUpdateDependents(group);\r\n  }\r\n\r\n  // put data by id (or array of IDs) into another index\r\n  put(ids, destIndex, method) {\r\n    // Validate\r\n    if (!this._indexes[destIndex])\r\n      return assert(`Index \"${destIndex}\" not found`);\r\n    if (!Array.isArray(ids)) ids = [ids];\r\n\r\n    // record previous value\r\n    let previousDestIndex = this._indexes[destIndex].concat([]);\r\n\r\n    // Loop\r\n    for (let i = 0; i < ids.length; i++) {\r\n      const id = ids[i];\r\n      let removeTargetID = [];\r\n      // prevent the same ID from being added removing from old position and push/unshift\r\n      if (this._indexes[destIndex].includes(id)) {\r\n        removeTargetID = this._indexes[destIndex].filter(_id => _id != id);\r\n      } else {\r\n        removeTargetID = this._indexes[destIndex];\r\n      }\r\n\r\n      if (method === 'unshift') removeTargetID.unshift(id);\r\n      else removeTargetID.push(id);\r\n\r\n      this._indexes[destIndex] = removeTargetID;\r\n    }\r\n\r\n    this.buildGroupFromIndex(destIndex);\r\n\r\n    this.recordHistory('put', {\r\n      group: destIndex,\r\n      ids,\r\n      previousDestIndex\r\n    });\r\n\r\n    this.findAndUpdateDependents(destIndex);\r\n  }\r\n\r\n  // change single or multiple properties in your data\r\n  update(id, propertiesToChange) {\r\n    if (this._data[id]) {\r\n      const data = this._data[id];\r\n\r\n      const history = {\r\n        dataId: id,\r\n        previousValues: {},\r\n        newValues: propertiesToChange\r\n      };\r\n\r\n      const keys = Object.keys(propertiesToChange);\r\n\r\n      for (let i = 0; i < keys.length; i++) {\r\n        const property = keys[i];\r\n        // if (!data.hasOwnProperty(property))\r\n        //   assert(`Data \"${id}\" does not have property \"${property}\" to update`);\r\n\r\n        history.previousValues[property] = data[property];\r\n\r\n        data[property] = propertiesToChange[property];\r\n      }\r\n\r\n      this.recordHistory('update', history);\r\n\r\n      this.internalDataModified(id);\r\n    } else {\r\n      assert(`Data for id \"${id}\" not found in collection ${this._name}`);\r\n    }\r\n  }\r\n\r\n  createRelationForFilterToData(filter, primaryKey) {\r\n    if (\r\n      Array.isArray(this._filtersRelatedToData[primaryKey]) &&\r\n      !this._filtersRelatedToData[primaryKey].includes(filter)\r\n    ) {\r\n      this._filtersRelatedToData[primaryKey].push(filter);\r\n    } else {\r\n      this._filtersRelatedToData[primaryKey] = [filter];\r\n    }\r\n  }\r\n  createRelationForFilterToGroup(filter, groupName) {\r\n    if (\r\n      Array.isArray(this._filtersRelatedToGroup[groupName]) &&\r\n      !this._filtersRelatedToGroup[groupName].includes(filter)\r\n    ) {\r\n      this._filtersRelatedToGroup[groupName].push(filter);\r\n    } else {\r\n      this._filtersRelatedToGroup[groupName] = [filter];\r\n    }\r\n  }\r\n\r\n  findById(id) {\r\n    // if called from within a filter create an internal index tied to this filter, now when dependent data is changed we can regenerate this filter\r\n    if (this._executing)\r\n      this.createRelationForFilterToData(this._executing, id);\r\n    // if filtername is not specified, it was called from outside, in which case could never be reactive\r\n    if (this._data[id]) return this._data[id];\r\n    else {\r\n      // this can be hooked on the collection config\r\n      // this.emit('onMissingId', id)\r\n      Log(`findByID: Item \"${id}\" not found in collection \"${this._name}\"`);\r\n    }\r\n  }\r\n\r\n  getGroup(groupName) {\r\n    if (this._executing)\r\n      this.createRelationForFilterToGroup(this._executing, groupName);\r\n\r\n    if (this._indexes[groupName]) return this.buildGroupFromIndex(groupName);\r\n    else return [];\r\n  }\r\n\r\n  newGroup(name, indexArray) {\r\n    if (!Object.keys(this._indexes).includes(name)) {\r\n      this._indexes[name] = indexArray;\r\n\r\n      this.recordHistory('newGroup', {\r\n        createdGroup: name,\r\n        data: indexArray\r\n      });\r\n    }\r\n  }\r\n\r\n  modifyGroup(group) {}\r\n\r\n  // removes data via primary key from a collection\r\n  delete(items) {\r\n    if (this._indexes[items])\r\n      return assert(\r\n        `Delete function only supports primary keys for data, if you're trying to delete a group, please use deleteGroup()`\r\n      );\r\n    const deleteFunction = primaryKey => {\r\n      // preserve data\r\n      let deletedData = Object.assign({}, this._data[primaryKey]);\r\n      // delete data\r\n      delete this._data[primaryKey];\r\n      // record deletion\r\n      this.recordHistory('delete', {\r\n        primaryKey,\r\n        deleted: deletedData\r\n      });\r\n    };\r\n    if (Array.isArray(items))\r\n      for (let i = 0; i < items.length; i++) {\r\n        const primaryKey = items[i];\r\n        deleteFunction(primaryKey);\r\n      }\r\n    else deleteFunction(items);\r\n\r\n    // update dependents\r\n    this.internalDataModified(items);\r\n  }\r\n\r\n  deleteGroup(group) {\r\n    if (!this._indexes[group]) return assert(`Group \"${group}\" not found.`);\r\n    // delete actual data\r\n\r\n    for (let i = 0; i < this._indexes[group].length; i++) {\r\n      const id = this._indexes[group][i];\r\n      if (this._data[id]) delete this._data[id];\r\n    }\r\n    const previousValue = this._indexes[group];\r\n    // empty index array\r\n    this._indexes[group] = [];\r\n    // construct data\r\n    this.buildGroupFromIndex(group);\r\n\r\n    this.recordHistory('deleteGroup', {\r\n      group,\r\n      previousValue\r\n    });\r\n\r\n    this.findAndUpdateDependents(group);\r\n  }\r\n\r\n  purge() {\r\n    // empty data\r\n    this._data = {};\r\n    const keys = Object.keys(this._indexes);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const groupName = keys[i];\r\n      this._indexes[groupName] = [];\r\n      this._indexesToRegen.push(groupName);\r\n    }\r\n    this.regenerateGroupsAndFilters();\r\n  }\r\n\r\n  clean() {}\r\n\r\n  increment(primaryKey, property, amount) {\r\n    if (!this.validateNumberForDataProperty(primaryKey, property, amount))\r\n      return;\r\n\r\n    this._data[primaryKey][property] += amount;\r\n\r\n    this.recordHistory('increment', {\r\n      primaryKey,\r\n      property,\r\n      amount\r\n    });\r\n\r\n    this.internalDataModified(primaryKey);\r\n  }\r\n\r\n  decrement(primaryKey, property, amount) {\r\n    if (!this.validateNumberForDataProperty(primaryKey, property, amount))\r\n      return;\r\n\r\n    this._data[primaryKey][property] -= amount;\r\n\r\n    this.recordHistory('decrement', {\r\n      primaryKey,\r\n      property,\r\n      amount\r\n    });\r\n\r\n    this.internalDataModified(primaryKey);\r\n  }\r\n\r\n  throttle(amount) {\r\n    // preserve current action name on invoke\r\n    let actionToThrottle = this._performingAction;\r\n\r\n    this._throttles.push(actionToThrottle);\r\n\r\n    setTimeout(() => {\r\n      // remove throttle\r\n      this._throttles = this._throttles.filter(\r\n        action => action !== actionToThrottle\r\n      );\r\n    }, amount);\r\n  }\r\n\r\n  // debounce(param1, param2) {\r\n  //   let action;\r\n  //   let amount;\r\n  //   let isInternal = false;\r\n  //   if (typeof param1 === 'number') {\r\n  //     amount = param2\r\n  //     action = this._actionProcessingStack[this._actionProcessingStack.length - 1]\r\n  //     isInternal = true\r\n  //   } else if (typeof param1 === 'function') {\r\n  //     amount = param2\r\n  //     action = param1\r\n  //   }\r\n  //   this._debouncing[this._performingAction] = action\r\n\r\n  //   // set debouncer\r\n  //   const setDebounce = () => {\r\n  //     this._debounce[this._performingAction] = setTimeout(() => {\r\n  //       this._\r\n  //   }, amount);\r\n  //   }\r\n  //   // if the current action is debouncing\r\n  //   if (this._debouncing[this._performingAction]) {\r\n  //     // destory current debouncer\r\n  //     clearTimeout(this._debouncing[this._performingAction])\r\n  //     // set debouncer\r\n  //     return setDebounce()\r\n  //     if (isInternal) return Promise.resolve(false)\r\n  //   } else {\r\n  //     // set debouncer\r\n  //     setDebounce()\r\n  //     // resolve\r\n  //     if (isInternal) return Promise.resolve(true)\r\n  //   }\r\n\r\n  // }\r\n\r\n  set(target, mutation) {\r\n    Log(target, mutation);\r\n  }\r\n\r\n  watch(property, callback) {\r\n    if (!this._public[property])\r\n      return assert(\r\n        `Error in watch function, property \"${property}\" does not exist`\r\n      );\r\n    if (!this._internalWatchers[property])\r\n      this._internalWatchers[property] = [];\r\n    this._internalWatchers[property].push(callback);\r\n  }\r\n\r\n  validateNumberForDataProperty(primaryKey, property, amount) {\r\n    if (\r\n      !this._data[primaryKey] ||\r\n      !this._data[primaryKey][property] ||\r\n      typeof amount !== 'number' ||\r\n      typeof this._data[primaryKey][property] !== 'number'\r\n    ) {\r\n      assert(`Property ${property} for ${primaryKey} is not a number`);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // used to save errors to the instance\r\n  dataRejectionHandler(data, message) {\r\n    let error = `[Data Rejection] - ${message} - Data was not collected, but instead saved to the errors object(\"_errors\") on root Pulse instance.`;\r\n    this._global.errors.push({\r\n      data,\r\n      timestamp: new Date(),\r\n      error\r\n    });\r\n    assert(error);\r\n  }\r\n\r\n  parseKey(key) {\r\n    return {\r\n      collection: key.split('/')[0],\r\n      property: key.split('/')[1]\r\n    };\r\n  }\r\n};\r\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","import Collection from './Collection';\r\n\r\nexport default class Base extends Collection {\r\n  constructor(\r\n    global,\r\n    {\r\n      // collection\r\n      data = {},\r\n      actions = {},\r\n      routes = {},\r\n      filters = {},\r\n      groups = [],\r\n      watch = {},\r\n      persist = []\r\n    }\r\n  ) {\r\n    // Before we invoke the parent class, we define some defaults\r\n\r\n    // Defaults\r\n    data.isAuthenticated = false;\r\n    data.appReady = false;\r\n    persist.push('isAuthenticated');\r\n\r\n    // Invoke the parent\r\n    super(\r\n      { name: 'base', global },\r\n      { data, actions, groups, persist, routes, filters, watch }\r\n    );\r\n  }\r\n};\r\n","import Collection from './Collection';\r\nimport { Log, assert, warn }  from './Utils';\r\n\r\nexport default class Request extends Collection {\r\n  constructor(\r\n    global,\r\n    {\r\n      // request specific\r\n      baseURL,\r\n      requestIntercept,\r\n      responseIntercept,\r\n      mode,\r\n      credentials,\r\n      headers,\r\n      saveHistory\r\n    }\r\n  ) {\r\n    // Before we invoke the parent class, we define some defaults\r\n    let groups = [];\r\n    let persist = ['baseURL'];\r\n    let data = {\r\n      baseURL,\r\n      mode: 'cors',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        Accept: 'application/json'\r\n      }\r\n    };\r\n\r\n    if (!baseURL) data.baseURL = null;\r\n\r\n    if (headers)\r\n      Object.keys(headers).forEach(header => {\r\n        data.headers[header] = headers[header];\r\n      });\r\n\r\n    if (credentials) data.credentials = credentials;\r\n    if (mode) data.mode = mode;\r\n\r\n    // Invoke the parent\r\n    super({ name: 'request', global }, { groups, data, persist });\r\n\r\n    this._requestIntercept = requestIntercept;\r\n    this._responseIntercept = responseIntercept;\r\n\r\n    this._saveHistory = typeof this._saveHistory == 'undefined' ? true : false;\r\n\r\n    this._global.request = {\r\n      get: this.get.bind(this),\r\n      post: this.post.bind(this),\r\n      put: this.put.bind(this),\r\n      patch: this.patch.bind(this),\r\n      delete: this.delete.bind(this),\r\n      queryify: this.queryify.bind(this)\r\n    };\r\n  }\r\n\r\n  send(url, method, body, headers) {\r\n    return new Promise((resolve, reject) => {\r\n      const requestHeaders = Object.assign({}, this._public.headers);\r\n\r\n      if (headers)\r\n        Object.keys(headers).forEach(header => {\r\n          requestHeaders[header] = headers[header];\r\n        });\r\n\r\n      // If method is not get set application type\r\n      if (method != 'get' && requestHeaders['Content-Type'] === undefined)\r\n        requestHeaders['Content-Type'] = 'application/json';\r\n\r\n      let fullURL;\r\n\r\n      if (url.startsWith('http')) fullURL = url;\r\n      else fullURL = `${this._global.dataRef.request.baseURL}/${url}`;\r\n\r\n      // Stringify body\r\n      body = JSON.stringify(body);\r\n\r\n      // Build options\r\n      this._options = {};\r\n      this._options.credentials = this._global.dataRef.request.credentials;\r\n      this._options.mode = this._global.dataRef.request.mode;\r\n\r\n      // Build final fetch options object\r\n      const options = Object.assign(\r\n        {\r\n          headers: requestHeaders,\r\n          method: method.toUpperCase(),\r\n          body: method == 'get' ? null : body\r\n        },\r\n        this._options\r\n      );\r\n\r\n      // Invoke request interceptor\r\n      if (this._requestIntercept)\r\n        this._requestIntercept(this.getContextObject(), options);\r\n\r\n      fetch(fullURL, options)\r\n        .then(async response => {\r\n          const contentType = response.headers.get('content-type');\r\n\r\n          // extract body\r\n          if (contentType && contentType.indexOf('application/json') !== -1) {\r\n            body = await response.json();\r\n          } else {\r\n            body = await response.text();\r\n          }\r\n\r\n          // history\r\n          if (!this._saveHistory)\r\n            this.collect({\r\n              id: Date.now(),\r\n              status: response.status,\r\n              timestamp: new Date(),\r\n              response: body\r\n            });\r\n\r\n          // inject headers into prototype\r\n          let final;\r\n\r\n          // If reponse body is an object, create a custom object with response function in prototype, so headers and the full response data can be accessed outside of this class\r\n          if (!Array.isArray(body) && typeof body === 'object') {\r\n            final = Object.create({\r\n              response: () => {\r\n                return response;\r\n              }\r\n            });\r\n            const keys = Object.keys(body);\r\n            for (let i = 0; i < keys.length; i++) {\r\n              const property = keys[i];\r\n              final[property] = body[property];\r\n            }\r\n            // if the body is not an object, we can not inject a prototype, so just return the rew body\r\n          } else {\r\n            final = body;\r\n          }\r\n          // intercept response\r\n          if (this._responseIntercept)\r\n            this._responseIntercept(this.getContextObject(), response);\r\n\r\n          // reject if bad response status\r\n          if (response.ok || response.redirected) return resolve(final);\r\n\r\n          // resolve response\r\n          reject(final);\r\n        })\r\n        .catch(reject);\r\n    });\r\n  }\r\n\r\n  get(url, headers) {\r\n    return this.send(url, 'get', {}, headers);\r\n  }\r\n  post(url, body, headers) {\r\n    return this.send(url, 'post', body, headers);\r\n  }\r\n  patch(url, body, headers) {\r\n    return this.send(url, 'patch', body, headers);\r\n  }\r\n  delete(url, body, headers) {\r\n    return this.send(url, 'delete', body, headers);\r\n  }\r\n  put(url, body, headers) {\r\n    return this.send(url, 'put', body, headers);\r\n  }\r\n\r\n  // Adapted from: https://github.com/Gozala/querystring/blob/master/encode.js\r\n  queryify(obj) {\r\n    const stringifyPrimitive = function(value) {\r\n      switch (typeof value) {\r\n        case 'string':\r\n          return value;\r\n\r\n        case 'boolean':\r\n          return value ? 'true' : 'false';\r\n\r\n        case 'number':\r\n          return isFinite(value) ? value : '';\r\n\r\n        default:\r\n          return '';\r\n      }\r\n    };\r\n    // validate input\r\n    if (typeof obj != 'object')\r\n      return assert('queryify error, object must be defined');\r\n\r\n    return Object.keys(obj)\r\n      .map(key => {\r\n        const encodedKey = encodeURIComponent(stringifyPrimitive(key)) + '=';\r\n        // if value is an array, encode with same key as parent\r\n        if (Array.isArray(obj[key]))\r\n          return obj[key]\r\n            .map(value => {\r\n              return encodedKey + encodeURIComponent(stringifyPrimitive(value));\r\n            })\r\n            .join('&');\r\n        // join encoded key with value\r\n        return encodedKey + encodeURIComponent(stringifyPrimitive(obj[key]));\r\n      })\r\n      .join('&');\r\n  }\r\n};\r\n","import Library from './Pulse';\r\n\r\n// const mapData = require('./Helpers').mapData;\r\n\r\nexport default { Library };\r\n","import { Log, assert, warn } from './Utils';\r\nimport Collections from './Collection';\r\nimport Base from './Base';\r\nimport Request from './Request';\r\n\r\n// const window = {};\r\nclass Pulse {\r\n  constructor({\r\n    storage,\r\n    collections = {},\r\n    utils = {},\r\n    services = {},\r\n    staticData = {},\r\n    request = {},\r\n    data = {},\r\n    actions = {},\r\n    filters = {},\r\n    watch = {},\r\n    routes = {},\r\n    local = {},\r\n    groups = [],\r\n    indexes = [],\r\n    persist = [],\r\n    config = {}\r\n  }) {\r\n    if (!config.ssr) {\r\n      window._pulse = this;\r\n    }\r\n    // internal state\r\n    this._collections = {};\r\n    this._subscribers = [];\r\n    this._mappedProperties = {};\r\n    this._eventBus = this.activateEventBus();\r\n    // collections.root = { data, indexes, actions, filters, routes };\r\n    // filter dependency tracker\r\n    this._global = {\r\n      componentStore: {},\r\n      regenQueue: [],\r\n      errors: [],\r\n      history: [],\r\n      allFilters: [],\r\n      collectionNamespace: [],\r\n      updateSubscribers: this.updateSubscribers,\r\n      eventBus: this._eventBus,\r\n      dependenciesFound: [],\r\n      dependencyGraph: {},\r\n      generatedFilters: [],\r\n      record: false,\r\n      initComplete: false,\r\n      request: {},\r\n      dataRef: {},\r\n      internalDataRef: {},\r\n      storage: {},\r\n      relations: {},\r\n      config\r\n    };\r\n\r\n    this.initStorage(storage);\r\n\r\n    // init collections\r\n    this.initCollections(\r\n      collections,\r\n      {\r\n        data,\r\n        indexes,\r\n        actions,\r\n        filters,\r\n        routes,\r\n        groups,\r\n        watch,\r\n        persist,\r\n        local\r\n      },\r\n      request\r\n    );\r\n\r\n    this.utils = utils;\r\n    this.services = services;\r\n    this.staticData = staticData;\r\n\r\n    // build a tree of data after collection constructor is finished\r\n    this.buildGlobalDataRefrenceTree();\r\n\r\n    // build a dependency graph for smart caching\r\n    this.prepareDependencyGraph();\r\n\r\n    // run and analyse the filters to populate the dependecy graph\r\n    this.executeAllFilters();\r\n\r\n    // loop through the regen queue to regenerate filters that couldn't execute first time around\r\n    this.processRegenQueue();\r\n\r\n    // declare Pulse has finished initialzing\r\n    this._global.initComplete = true;\r\n    Log('INIT_COMPLETE');\r\n\r\n    this.runOnReadyHandlers();\r\n  }\r\n\r\n  unmount(component) {\r\n    if (!component.__pulseUniqueIdentifier) return;\r\n    // assert(\r\n    //   'Unable to unmount component, no Pulse unique identifier found.'\r\n    // );\r\n    delete this._global.componentStore[component.__pulseUniqueIdentifier];\r\n  }\r\n\r\n  mount(component) {\r\n    if (this._global.componentStore[component.__pulseUniqueIdentifier])\r\n      this._global.componentStore[\r\n        component.__pulseUniqueIdentifier\r\n      ].__pulseComponentReady = true;\r\n\r\n    // if (component.__pulseMappedData) {\r\n    //   const returnData = {};\r\n    //   this.normalizeMap(component.__pulseMappedData).forEach(({ key, val }) => {\r\n    //     let collection = val.split('/')[0];\r\n    //     let property = val.split('/')[1];\r\n    //     if (!this.hasOwnProperty(collection)) return;\r\n    //     returnData[key] = this._global.dataRef[collection][property];\r\n    //   });\r\n    //   component.setState(returnData);\r\n    // }\r\n  }\r\n\r\n  install(Vue) {\r\n    const pulse = window._pulse;\r\n    let self = this;\r\n    Vue.mixin({\r\n      beforeCreate() {\r\n        Object.keys(self._global.dataRef).forEach(collection => {\r\n          this['$' + collection] = self._global.dataRef[collection];\r\n        });\r\n        this.$utils = pulse.utils;\r\n        this.$services = pulse.services;\r\n        this.$staticData = pulse.staticData;\r\n\r\n        this.mapData = self.mapData;\r\n      },\r\n      mounted() {\r\n        if (this.__pulseUniqueIdentifier) this.__pulseComponentReady = true;\r\n      },\r\n      beforeDestroy() {\r\n        if (this.__pulseUniqueIdentifier) pulse.unmount(this);\r\n      }\r\n    });\r\n  }\r\n  mapData(properties, instanceToBind, config) {\r\n    instanceToBind = instanceToBind ? instanceToBind : this;\r\n    const returnData = {};\r\n    const pulse = window._pulse;\r\n    if (properties)\r\n      pulse.normalizeMap(properties).forEach(({ key, val }) => {\r\n        // generate UUID\r\n        let uuid =\r\n          Math.random()\r\n            .toString()\r\n            .split('.')[1] + Date.now();\r\n\r\n        // inject uuid into component instance\r\n        instanceToBind.__pulseUniqueIdentifier = uuid;\r\n        instanceToBind.__pulseComponentReady =\r\n          config && config.waitForMount ? false : true;\r\n        instanceToBind.__pulseMappedData = properties;\r\n\r\n        // register component globally\r\n        pulse._global.componentStore[uuid] = instanceToBind;\r\n\r\n        // parse address\r\n        let collection = val.split('/')[0];\r\n        let property = val.split('/')[1];\r\n\r\n        // if collection not found return\r\n        if (!pulse.hasOwnProperty(collection)) return;\r\n\r\n        let subscribed = pulse._collections[collection]._subscribedToData;\r\n\r\n        let ref = {\r\n          componentUUID: uuid,\r\n          key\r\n        };\r\n\r\n        // register component locally on collection\r\n        if (!subscribed.hasOwnProperty(property)) {\r\n          subscribed[property] = [ref];\r\n        } else subscribed[property].push(ref);\r\n\r\n        // return data values to component\r\n        returnData[key] = pulse[collection][property];\r\n      });\r\n    return returnData;\r\n  }\r\n\r\n  mapCollections() {\r\n    const returnData = {};\r\n    Object.keys(this._global.dataRef).forEach(collection => {\r\n      returnData[collection] = this._global.dataRef[collection];\r\n    });\r\n    return returnData;\r\n  }\r\n\r\n  normalizeMap(map) {\r\n    return Array.isArray(map)\r\n      ? map.map(key => ({ key, val: key }))\r\n      : Object.keys(map).map(key => ({ key, val: map[key] }));\r\n  }\r\n\r\n  // use a proxy to pass messages around pulse that couldn't otherwise be done due to scoping\r\n  activateEventBus() {\r\n    return new Proxy(\r\n      { message: null },\r\n      {\r\n        set: (target, key, value) => {\r\n          if (value.type === 'processRegenQueue') {\r\n            this.processRegenQueue();\r\n          }\r\n          if (value.type === 'createForeignGroupRelation') {\r\n            this._collections[\r\n              value.data.foreignCollection\r\n            ]._foreignGroupRelations[value.data.foreignData] = {\r\n              collection: value.data.dependentCollection,\r\n              groupToRegen: value.data.dependentGroup\r\n            };\r\n          }\r\n          if (value.type === 'rebuildGroupsWithRelations') {\r\n            this._collections[value.data.collection].buildGroupFromIndex(\r\n              value.data.groupToRegen\r\n            );\r\n          }\r\n          if (value.type === 'undo') {\r\n            this.processUndo(value.data);\r\n          }\r\n          target[key] = 'waiting';\r\n          return true;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  initStorage(storage = {}) {\r\n    let type = 'custom';\r\n    if (!storage.async) storage.async = false;\r\n    // the user wants to use session storage\r\n    if (storage === 'sessionStorage') {\r\n      type = 'sessionStorage';\r\n      this.assignStorage(sessionStorage, type, storage.async);\r\n      // they have defined their own storage API\r\n    } else if (storage && storage.set && storage.get) {\r\n      type = 'custom';\r\n      this.assignStorage(storage, type, storage.async);\r\n      // default to local storage\r\n    } else if (!this._global.config.ssr && window.localStorage) {\r\n      type = 'localStorage';\r\n      this.assignStorage(localStorage, type, storage.async);\r\n      // no storage API found\r\n    } else {\r\n      return assert(`No storage API present, data will not persist`);\r\n    }\r\n  }\r\n  assignStorage(storage, type, async) {\r\n    const storageAPI = {\r\n      type,\r\n      async\r\n    };\r\n    //set\r\n    if (storage.set) storageAPI.set = storage.set.bind(storage);\r\n    if (storage.setItem) storageAPI.set = storage.setItem.bind(storage);\r\n    //get\r\n    if (storage.get) storageAPI.get = storage.get.bind(storage);\r\n    if (storage.getItem) storageAPI.get = storage.getItem.bind(storage);\r\n    //remove\r\n    if (storage.remove) storageAPI.remove = storage.remove.bind(storage);\r\n    if (storage.removeItem)\r\n      storageAPI.remove = storage.removeItem.bind(storage);\r\n    //clear\r\n    if (storage.clear) storageAPI.clear = storage.clear.bind(storage);\r\n\r\n    this._global.storage = storageAPI;\r\n  }\r\n\r\n  // prepare the dependecy graph\r\n  prepareDependencyGraph() {\r\n    let graph = this._global.dependencyGraph;\r\n    let collections = this._global.collectionNamespace;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      const collection = collections[i];\r\n      graph[collection] = {};\r\n      let _public = this._collections[collection]._public;\r\n      let loop = [];\r\n\r\n      const propertiesToRegister = ['filters', 'groups', 'data'];\r\n\r\n      for (let i = 0; i < propertiesToRegister.length; i++) {\r\n        const key = propertiesToRegister[i];\r\n        Object.keys(_public[key]).forEach(name => loop.push(name));\r\n      }\r\n\r\n      for (let i = 0; i < loop.length; i++) {\r\n        const item = loop[i];\r\n        graph[collection][item] = {\r\n          dependencies: [],\r\n          dependents: []\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  // build the collection classes\r\n  initCollections(collections, base, request) {\r\n    // the base collection class contains prefined data\r\n    this._collections.base = new Base(this._global, base, request);\r\n    this._collections.request = new Request(this._global, request);\r\n    this._global.collectionNamespace = ['base', 'request'];\r\n\r\n    Object.keys(collections).forEach(collection => {\r\n      this._global.collectionNamespace.push(collection);\r\n      this._collections[collection] = new Collections(\r\n        {\r\n          name: collection,\r\n          global: this._global\r\n        },\r\n        collections[collection]\r\n      );\r\n    });\r\n\r\n    Object.keys(this._collections).forEach(collection => {\r\n      // check if the instance has a naming conflict\r\n      if (this[collection]) {\r\n        assert(\r\n          `Collection name conflict, instance already has \"${collection}\" thus it will not be accessable on the root state tree.`\r\n        );\r\n      } else {\r\n        // bind the collection public data to the root state tree\r\n        this[collection] = this._collections[collection]._public;\r\n      }\r\n    });\r\n  }\r\n\r\n  // this is passed into filters, actions and routes so they can access all data within Pulse\r\n  buildGlobalDataRefrenceTree() {\r\n    if (this._collections) {\r\n      const loop = Object.keys(this._collections);\r\n      for (let i = 0; i < loop.length; i++) {\r\n        const collection = loop[i];\r\n        this._global.dataRef[collection] = this._collections[\r\n          collection\r\n        ]._public;\r\n      }\r\n    }\r\n  }\r\n\r\n  executeAllFilters() {\r\n    const loop = Object.keys(this._collections);\r\n    for (let i = 0; i < loop.length; i++) {\r\n      const collection = loop[i];\r\n      this._collections[collection].analyseFilters();\r\n    }\r\n  }\r\n\r\n  processRegenQueue() {\r\n    // debugger;\r\n    // if we called this function from the collection class\r\n    if (this._global.regenQueue.length === 0) return;\r\n\r\n    Log(\r\n      `Regen queue processing. There are ${\r\n        this._global.regenQueue.length\r\n      } in the queue.`\r\n    );\r\n    // for dev purposes, prevent infinate loop\r\n    for (let item of this._global.regenQueue) {\r\n      // this removes the first item of the array and saves it to `entry`\r\n      const entry = this._global.regenQueue.shift();\r\n      const concatEntryName = `${entry.collection}/${entry.property}`;\r\n\r\n      if (concatEntryName === this.lastRegenerated) {\r\n        warn(`Prevented infinate loop for ${concatEntryName}`);\r\n        this.lastRegenerated = '';\r\n        return;\r\n      }\r\n\r\n      this._collections[entry.collection].executeAndAnalyseFilter(\r\n        entry.property\r\n      );\r\n\r\n      this.lastRegenerated = concatEntryName;\r\n\r\n      Log(\r\n        `There are ${\r\n          this._global.regenQueue.length\r\n        } properties left to regenerate.`\r\n      );\r\n    }\r\n    // loop!\r\n    if (this._global.regenQueue.length > 0) this.processRegenQueue();\r\n    else {\r\n      // if we don't clear the generated filters, the filter analysis will fail next time around, causing an infinate loop! das bad\r\n      // this._global.generatedFilters = new Array();\r\n      this.lastRegenerated = '';\r\n    }\r\n  }\r\n\r\n  runOnReadyHandlers() {\r\n    const collections = Object.keys(this._collections);\r\n    for (let i = 0; i < collections.length; i++) {\r\n      const collection = this._collections[collections[i]];\r\n      collection._onReady();\r\n    }\r\n  }\r\n\r\n  // react native\r\n  // processCallbacks(data) {\r\n  //   if (!self._subscribers.length) return false;\r\n  //   this._subscribers.forEach(callback => callback(data));\r\n  //   return true;\r\n  // }\r\n\r\n  processUndo(thingsToRevert) {\r\n    for (let i = 0; i < thingsToRevert.length; i++) {\r\n      const thing = thingsToRevert[i];\r\n      const collection = this._collections[thing.collection];\r\n      const data = thing.data;\r\n      switch (thing.type) {\r\n        case 'mutation':\r\n          break;\r\n        case 'collect':\r\n          break;\r\n        case 'update':\r\n          collection.update(data.dataId, data.previousValues);\r\n          break;\r\n        case 'put':\r\n          collection.replaceIndex(data.group, data.previousDestIndex);\r\n          break;\r\n        case 'remove':\r\n          collection.replaceIndex(data.group, data.previousValue);\r\n          break;\r\n        case 'move':\r\n          collection.replaceIndex(data.fromIndex, data.previousFromIndexValue);\r\n          if (data.toIndex)\r\n            collection.replaceIndex(data.toIndex, data.previousToIndexValue);\r\n          break;\r\n        case 'delete':\r\n          collection._public[data.primaryKey] = data.deleted;\r\n          collection.internalDataModified(data.primaryKey);\r\n          collection.recordHistory('restore', {\r\n            primaryKey: data.primaryKey,\r\n            deleted: data.deleted\r\n          });\r\n          break;\r\n        case 'restore':\r\n          collection.delete(data.primaryKey);\r\n          break;\r\n        case 'newGroup':\r\n          collection.deleteGroup(data.createdGroup);\r\n          break;\r\n        case 'deleteGroup':\r\n          collection.newGroup(data.group, data.previousValue);\r\n          break;\r\n        case 'indexMutation':\r\n          collection.replaceIndex(data.index, data.previousIndex);\r\n          break;\r\n        case 'decrement':\r\n          collection.increment(\r\n            thing.data.primaryKey,\r\n            thing.data.property,\r\n            thing.data.amount\r\n          );\r\n          break;\r\n        case 'increment':\r\n          collection.decrement(\r\n            thing.data.primaryKey,\r\n            thing.data.property,\r\n            thing.data.amount\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Pulse;\r\n"],"names":["instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","text","message","console","warn","error","_typeof2","obj","Symbol","iterator","constructor","_typeof","module","runtime","exports","undefined","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","value","makeInvokeMethod","fn","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply","Collection","global","data","model","actions","filters","indexes","groups","routes","watch","persist","local","onReady","_name","_actionRefrence","collect","bind","undo","move","update","put","delete","deleteGroup","findById","getGroup","newGroup","forceUpdate","throttle","remove","set","increment","decrement","purge","replaceIndex","_public","initProxy","_global","_regenQueue","regenQueue","_onReady","_model","_filters","_local","_data","_indexes","_watchers","_storage","_filtersRelatedToData","_filtersRelatedToGroup","_relations","_groupRelations","_foreignGroupRelations","_subscribedToData","_internalWatchers","_persist","_throttles","_modelTypes","_mutableData","_indexesToRegen","_filtersToForceRegen","_actionProcessingStack","_collectionSize","_primaryKey","_executing","_collecting","_performingAction","_allowInternalChange","internalDataRef","initStorage","initModel","initData","initGroups","concat","initRoutes","initFilters","initActions","initWatchers","prepareNamespace","initPersist","initOnReady","_storageIsPromise","storage","get","storageInvalid","assert","_this2","res","parsed","JSON","parse","asyncGet","e","syncGet","stringify","property","_this3","storageKey","category","searchNamespaceForProperty","initDeepReactivity","_this4","index","Array","filterName","allFilters","routeName","_this","_this5","assign","request","getContextObject","dataRef","actionName","_this6","includes","customArguments","actionIdentifier","Math","random","parentAction","actionPackage","id","runAction","executeAction","actionOutput","watchers","watchFunctionName","_this7","objectWithCustomPrototype","rootProperty","deepProxy","proto","Proxy","_this8","updateSubscribers","findAndUpdateDependents","initComplete","previousValue","recordHistory","newValue","dependenciesFound","filter","item","collection","preventIndexUpdate","previousIndex","buildGroupFromIndex","newIndex","isHTMLElement","isArray","HTMLElement","nodeType","style","ownerDocument","nextToAnalyse","isWatchableObject","returnProxy","loop","_this9","config","_this10","hasOne","parent","createDataRelation","assignTo","hasMany","has","createGroupRelation","primaryKeyName","fromCollectionName","collectionNamespace","searchable","prop","_this11","_this12","validateNamespace","genericPrimaryIds","dataRejectionHandler","primaryKey","executeAndAnalyseFilter","executeFilter","found","dependency","checkForMissingDependency","populateDependencies","generatedFilters","Log","deliverUpdate","eventBus","constructedArray","relations","relationKey","rel","foreignData","groupRealtions","emitToRoot","foreignCollection","dependentCollection","dependentGroup","findFiltersToRegenFromRelatedGroup","pK","findGroupsToRegen","findFiltersToRegenFromRelatedData","regenerateGroupsAndFilters","setTimeout","_this13","callback","persistData","framework","component","componentStore","componentUUID","__pulseComponentReady","$set","stateData","_mounted","setState","fromAction","fromActionIdentifier","fromActionParentIdentifier","currentAction","historyItem","timestamp","Date","now","history","depGraph","dependencyGraph","key1","location1","dependencies","key2","location2","dependents","glob","graph","loops","lastRound","dep","loopChildren","depParsed","_this14","parseKey","search","childDep","propertyChanged","allDependents","deps","findAllDependents","pushDependentsToRegenQueue","dependentFilters","_this15","find","group","indexesModified","indexesCreated","ind","createRelationForIndex","indexName","processDataItem","dataCollected","overwrite","findPrimaryKey","propertyName","validateDataPropertyAgainstType","itemID","currentData","groupName","relation","_i","action","thingsToRevert","ids","sourceIndex","destIndex","fromIndex","toIndex","previousFromIndexValue","previousToIndexValue","_this16","unshift","map","_this17","previousDestIndex","removeTargetID","_this18","_id","propertiesToChange","dataId","previousValues","newValues","internalDataModified","createRelationForFilterToData","createRelationForFilterToGroup","indexArray","createdGroup","items","deleteFunction","deletedData","_this19","deleted","amount","validateNumberForDataProperty","actionToThrottle","_this20","mutation","errors","split","ReferenceError","assertThisInitialized","_getPrototypeOf","o","_setPrototypeOf","p","subClass","superClass","Base","isAuthenticated","appReady","Request","baseURL","requestIntercept","responseIntercept","mode","credentials","headers","saveHistory","Accept","header","_requestIntercept","_responseIntercept","_saveHistory","post","patch","queryify","url","body","fullURL","requestHeaders","startsWith","_options","options","toUpperCase","fetch","response","contentType","indexOf","json","status","final","ok","redirected","send","stringifyPrimitive","isFinite","encodedKey","encodeURIComponent","join","Library","collections","utils","services","staticData","ssr","window","_pulse","_collections","_subscribers","_mappedProperties","_eventBus","activateEventBus","initCollections","buildGlobalDataRefrenceTree","prepareDependencyGraph","executeAllFilters","processRegenQueue","runOnReadyHandlers","__pulseUniqueIdentifier","Vue","pulse","mixin","beforeCreate","$utils","$services","$staticData","mapData","mounted","beforeDestroy","unmount","properties","instanceToBind","returnData","normalizeMap","val","uuid","waitForMount","__pulseMappedData","subscribed","ref","groupToRegen","processUndo","assignStorage","sessionStorage","localStorage","storageAPI","setItem","getItem","removeItem","clear","propertiesToRegister","base","Collections","analyseFilters","shift","concatEntryName","lastRegenerated","thing"],"mappings":"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"}