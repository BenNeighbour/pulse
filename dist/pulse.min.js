!function(e,t){for(var i in t)e[i]=t[i]}(exports,function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(s,r,function(t){return e[t]}.bind(null,r));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=2)}([function(e,t,i){const{Log:s,assert:r,warn:n}=i(1);e.exports=class{constructor({name:e,global:t},{data:i={},model:s={},actions:r={},filters:n={},indexes:o=[],groups:a=[],routes:l={},watch:h={},persist:c=[],local:d={},onReady:p}){this._name=e,this._actionRefrence={collect:this.collect.bind(this),undo:this.undo.bind(this),move:this.move.bind(this),update:this.update.bind(this),put:this.put.bind(this),delete:this.delete.bind(this),deleteGroup:this.deleteGroup.bind(this),findById:this.findById.bind(this),getGroup:this.getGroup.bind(this),newGroup:this.newGroup.bind(this),forceUpdate:this.forceUpdate.bind(this),throttle:this.throttle.bind(this),remove:this.remove.bind(this),set:this.set.bind(this),increment:this.increment.bind(this),decrement:this.decrement.bind(this),purge:this.purge.bind(this),watch:this.watch.bind(this),replaceIndex:this.replaceIndex.bind(this)};this._public=this.initProxy({groups:{},data:{},actions:{},filters:{},routes:{},indexes:{}}),this._global=t,this._regenQueue=this._global.regenQueue,this._onReady=p,this._model=s,this._filters=n,this._local=d,this._data={},this._indexes={},this._watchers={},this._storage={},this._filtersRelatedToData={},this._filtersRelatedToGroup={},this._relations={},this._groupRelations={},this._foreignGroupRelations={},this._subscribedToData={},this._watchers={},this._internalWatchers={},this._persist=[],this._throttles=[],this._mutableData=[],this._indexesToRegen=[],this._filtersToForceRegen=[],this._onThrottleEnd={},this._collectionSize=0,this._primaryKey=null,this._executing=!1,this._collecting=!1,this._performingAction=!1,this._actionProcessingStack=[],this._allowInternalChange=!1,this._global.internalDataRef[this._name]=this._data,this.initStorage(),this.initModel(s),this.initData(i),this.initGroups(o.concat(a)),this.initRoutes(l),this.initFilters(n),this.initActions(r),this.initWatchers(h),this.prepareNamespace(),this.initPersist(c),this.initOnReady(p)}initStorage(){this._storageIsPromise=!!this._global.storage.async,this._global.storage.get("_")instanceof Promise&&(this._storageIsPromise=!0);let e=e=>new Promise(async t=>{try{let i=await this._global.storage.get(e);return t("string"!=typeof i?i:JSON.parse(i))}catch{t(null)}}),t=e=>{let t=this._global.storage.get(e);try{return JSON.parse(t)}catch(e){return t}};this._storage.get=(i=>this._storageIsPromise?e(i):t(i)),this._storage.set=((e,t)=>{this._global.storage.set(e,JSON.stringify(t))}),this._storage.remove=(e=>this._global.storage.remove(e))}initPersist(e){e.forEach(e=>{this._persist.push(e);let t=`_${this._name}_${e}`;if(!this._public.hasOwnProperty(e))return r(`Unable to persist property "${e}" in collection "${this._name}" as it does not exist.`);let i=this.searchNamespaceForProperty(e);if(!i)return r("Unable to persist. Property does not exist.");if(this._storageIsPromise)this._storage.get(t).then(t=>{null!=t&&(this._public[i][e]=t,this._public.hasOwnProperty(e)&&(this._public[e]=t))});else{let s=this._storage.get(t);if(null==s)return;s=this.initDeepReactivity(s,e),this._allowInternalChange=!0,this._public[i][e]=s,this._public.hasOwnProperty(e)&&(this._allowInternalChange=!0,this._public[e]=s)}})}initData(e){Object.keys(e).forEach(t=>{this._mutableData.push(t),e[t]=this.initDeepReactivity(e[t],t)}),this._public.data=this.initProxy(e)}initGroups(e){this._public.groups=this.initProxy({});for(let t of e){if(this._public.groups[t]||this._indexes[t])return r(`Duplicate declaration for index ${t}`);this._indexes[t]=new Array,this._public.groups[t]=new Array,this._public.indexes[t]=new Array}this._public.indexes=this.initProxy(this._public.indexes,"indexes")}initFilters(e){let t=Object.keys(e);for(let e of t)this._public.filters[e]=[],this._global.allFilters.push(e)}initRoutes(e){let t=Object.keys(e);for(let i of t){let t=this;this._public.routes[i]=function(){return e[i].apply(null,[t._global.request].concat(Array.prototype.slice.call(arguments)))}}}getContextObject(){return Object.assign({data:this._public.data,filters:this._public.filters,groups:this._public.groups,actions:this._public.actions,routes:this._public.routes},this._global.dataRef,this._actionRefrence,{local:this._local})}initActions(e){let t=this;for(let i of Object.keys(e))this._public.actions[i]=function(){const s=arguments,r=Math.random();let n=null;t._actionProcessingStack.length>0&&(n=t._actionProcessingStack[t._actionProcessingStack.length-1].actionIdentifier);const o=t.getContextObject();o.undo=function(e){return t.undo(i,r,e)};const a={id:r,name:i,parentAction:n,runAction:function(){return e[i].apply(null,[o].concat(Array.prototype.slice.call(s)))}};if(!t._throttles.includes(i))return t.executeAction(a);t._onThrottleEnd[i]=a}}executeAction(e){this._performingAction=e.name,this._actionProcessingStack.push(e);const t=e.runAction();return this._performingAction=!1,this._actionProcessingStack.pop(),this._actionProcessingStack.length,t}initWatchers(e){const t=this;let i=Object.keys(e);for(let s=0;s<i.length;s++){const r=i[s];this._watchers[r]=function(){return e[r](t.getContextObject())}}}initOnReady(e){const t=this;this._onReady=function(){e&&e(t.getContextObject())}}initProxy(e={},t=!1,i=!1){let s;if(t)s=Object.create({rootProperty:t});else{let e=Object.assign({},this._actionRefrence,t);s=Object.create(e)}for(let t of Object.keys(e))s[t]=e[t];return i?new Proxy(s,{set:(e,t,i)=>{if(Object.getPrototypeOf(e).rootProperty){let s=Object.getPrototypeOf(e).rootProperty;return this._mutableData.includes(s)&&(e[t]=i,this.updateSubscribers(s,this._public[s])),!0}return e[t]=i,!0},get:(e,t,i)=>e[t]}):"indexes"===t?new Proxy(s,{set:(e,t,i)=>(e[t]=i,this._allowInternalChange||this.replaceIndex(t,i,!0),!0),get:(e,t,i)=>e[t]}):new Proxy(s,{set:(e,i,s)=>{if(!this._global.initComplete||this._allowInternalChange)return e[i]=s,this._allowInternalChange=!1,!0;if(this._mutableData.includes(i)){let r=e[i];e[i]=s,this.recordHistory("mutation",{key:i,rootProperty:t,previousValue:r,newValue:s});let n=this.initDeepReactivity(e[i],i);return e[i]=n,this._allowInternalChange=!0,this._public.data[i]=s,this._allowInternalChange=!1,this.updateSubscribers(i,s),this.findAndUpdateDependents(i),!0}return Object.keys(this._public).includes(i)?r(`Cannot set data property "${i}" in collection "${this._name}". Filters and groups are not mutable.`):r(`Cannot set data property "${i}" in collection "${this._name}" as "${i}" does not exist.`),!0},get:(e,t,i)=>Object.getPrototypeOf(e).rootProperty?e[t]:(this._global.record&&!["filters","groups","indexes","data","actions"].includes(t)&&0===this._global.dependenciesFound.filter(e=>e.property===t&&e.collection===this._name).length&&this._global.dependenciesFound.push({property:t,collection:this._name}),e[t])})}replaceIndex(e,t,i){let s=this._indexes[e];this._indexes[e]=t,this.buildGroupFromIndex(e,i),this.findAndUpdateDependents(e),this.recordHistory("indexMutation",{index:e,previousIndex:s,newIndex:t})}isWatchableObject(e){return null!=e&&"object"==typeof e&&!this.isHTMLElement(e)&&!Array.isArray(e)}isHTMLElement(e){try{return e instanceof HTMLElement}catch(t){return"object"==typeof e&&1===e.nodeType&&"object"==typeof e.style&&"object"==typeof e.ownerDocument}}initDeepReactivity(e,t){let i=[];if(!this.isWatchableObject(e))return e;const s=this.initProxy(e,t,!0);for(let t of Object.keys(e))this.isWatchableObject(e[t])&&i.push({target:e,key:t});const r=()=>{let e=i;i=[];for(let s of e){let e=s.key,r=s.target;this._allowInternalChange=!0,r[e]=this.initProxy(r[e],t,!0);for(let t of Object.keys(r[e]))this.isWatchableObject(r[e][t])&&i.push({target:r[e],key:t})}i.length>0?r():this._allowInternalChange=!1};return r(),s}initModel(e){Object.keys(e).forEach(t=>{Object.keys(e[t]).forEach(i=>{if("primaryKey"===i)this._primaryKey=t;else if("parent"===i||"hasOne"===i){let i=e[t].parent||e[t].hasOne;this.createDataRelation(t,i,e[t].assignTo)}else if("has"===i||"hasMany"===i){let i=e[t].has||e[t].hasMany;this.createGroupRelation(t,i,e[t].assignTo)}})})}createDataRelation(e,t,i){if(!this._global.collectionNamespace.includes(t))return r(`"${collection}" is not a valid collection.`);this._relations[e]={},this._relations[e].fromCollectionName=t,i&&(this._relations[e].assignTo=i)}createGroupRelation(e,t,i){if(!this._global.collectionNamespace.includes(t))return r(`"${collection}" is not a valid collection.`);this._groupRelations[e]={},this._groupRelations[e].fromCollectionName=t,i&&(this._groupRelations[e].assignTo=i)}searchNamespaceForProperty(e){let t=["filters","data","groups"];for(let i of t)if(Object.keys(this._public[i]).includes(e))return i;return!1}validateNamespace(e,t){return Object.keys(e).forEach(i=>{if(e.hasOwnProperty(t))return n(`Duplicate property "${t}" on collection "${this._name}"`),!1}),!0}prepareNamespace(){Object.keys(this._public).forEach(e=>{["data","actions","groups","filters"].includes(e)&&Object.keys(this._public[e]).forEach(t=>{this.validateNamespace(this._public,t)&&(this._public[t]=this._public[e][t])})})}checkNamespace(e){return!!this._public.data.hasOwnProperty(e)||(r(`Namespace error "${e}" is already taken for collection "${this._name}".`),!1)}persistData(e,t){if(this._persist.includes(e)){let i=`_${this._name}_${e}`;s(`Persisting data with key ${i}`),this._storage.set(i,t)}}findPrimaryKey(e){let t=["id","_id"];for(let i of t)e.hasOwnProperty(i)&&(this._primaryKey=i);this._primaryKey||this.dataRejectionHandler(e,"No primary key supplied.")}createRelationForIndex(e){for(let t of Object.keys(this._relations))this._relations[t][e]=[]}analyseFilters(){if(!this._filters)return;let e=Object.keys(this._filters);for(let t of e)this.executeAndAnalyseFilter(t)}executeAndAnalyseFilter(e){s(`Analysing filter "${e}"`),this._global.record=!0,this.executeFilter(e);let t=this._global.dependenciesFound;this._global.dependenciesFound=[];for(let i of t)if(this.checkForMissingDependency(i,e))return;this.populateDependencies(t,e),this._global.generatedFilters.push(this._name+e),s(`Generated ${e} for collection ${this._name}`)}executeFilter(e){this._executing=e;const t=Object.assign({data:this._public.data,filters:this._public.filters,groups:this._public.groups,actions:this._public.actions},this._global.dataRef,this._actionRefrence,{local:this._local});let i=this._filters[e](t);this._executing=!1,this._global.record=!1,null==i&&(i=!1),this.deliverUpdate("filters",i,e)}emitToRoot(e,t={}){this._global.eventBus.message={type:e,data:t}}buildGroupFromIndex(e,t){let i=[];for(let t=0;t<this._indexes[e].length;t++){let s=this._indexes[e][t],r=this._data[s];if(!r)continue;let n=Object.keys(this._relations);if(n.length>0)for(let e of n){let t=this._relations[e],i=!!t.hasOwnProperty("assignTo")&&t.assignTo;if(r.hasOwnProperty(e)){let s=this._global.internalDataRef[t.fromCollectionName][r[e]];s&&(i?r[i]=s:r[t.fromCollectionName]=s)}}let o=Object.keys(this._groupRelations);if(o.length>0)for(let t of o){let i=this._groupRelations[t],s=!!i.hasOwnProperty("assignTo")&&i.assignTo;if(r.hasOwnProperty(t)){let n=this._global.dataRef[i.fromCollectionName][r[t]];n&&(s?r[s]=n:r[i.fromCollectionName]=n),this.emitToRoot("createForeignGroupRelation",{foreignCollection:i.fromCollectionName,foreignData:r[t],dependentCollection:this._name,dependentGroup:e})}}i.push(r)}return(this._public.hasOwnProperty(e)||this._public.groups.hasOwnProperty(e))&&this.deliverUpdate("groups",i,e),t||(this._allowInternalChange=!0,this._public.indexes[e]=this._indexes[e],this._allowInternalChange=!1),this.findFiltersToRegenFromRelatedGroup(e),i}internalDataModified(e){if(Array.isArray(e))for(let t=0;t<e.length;t++){const i=e[t];this.findGroupsToRegen(i),this.findFiltersToRegenFromRelatedData(i)}else this.findGroupsToRegen(e),this.findFiltersToRegenFromRelatedData(e);this.regenerateGroupsAndFilters()}deliverUpdate(e,t,i){this._allowInternalChange=!0,this._public[e][i]=t,this._allowInternalChange=!1,this._public.hasOwnProperty(i)&&(this._allowInternalChange=!0,this._public[i]=t,this._allowInternalChange=!1),this.updateSubscribers(i,t);for(let e of Object.keys(this._foreignGroupRelations))i===e&&this.emitToRoot("rebuildGroupsWithRelations",this._foreignGroupRelations[e])}updateSubscribers(e,t){s(`Updating subscribers for ${e}`),this._watchers.hasOwnProperty(e)&&setTimeout(()=>this._watchers[e](this._global.dataRef)),this._internalWatchers.hasOwnProperty(e)&&setTimeout(()=>{for(let i of this._internalWatchers[e])i(t)}),this.persistData(e,t);let i=this._global.config.framework;if(this._subscribedToData[e])for(let s of this._subscribedToData[e])if("vue"===i||s.component.hasOwnProperty("$vnode"))s.component.$set(s.component,s.key,t);else if("react"===i||s.component.hasOwnProperty("_reactInternalInstance")){let e={};e[s.key]=t,s.component.state.hasOwnProperty("_mounted")?s.component.state._mounted&&s.component.setState(e):s.component.setState(e)}}recordHistory(e,t){let i=null,s=null,r=null;if(0===this._actionProcessingStack.length&&"mutation"===e)return;if(this._actionProcessingStack.length>0){let e=this._actionProcessingStack[this._actionProcessingStack.length-1];s=e.id,i=e.name,e.parentAction&&(r=e.parentAction.id)}let n={type:e,timestamp:Date.now(),collection:this._name,fromAction:i,fromActionIdentifier:s,fromActionParentIdentifier:r,data:t};this._global.history.push(n)}populateDependencies(e,t){let i=this._global.dependencyGraph;for(let s of e){let e=`${s.collection}/${s.property}`,r=i[this._name][t];r.dependencies.includes(e)||r.dependencies.push(e);let n=`${this._name}/${t}`,o=i[s.collection][s.property];o&&o.dependents&&!o.dependents.includes(n)&&o.dependents.push(n)}}checkForMissingDependency(e,t){let i=this._global;return!(!i.allFilters.includes(e.property)||i.generatedFilters.includes(e.collection+e.property))&&(s(`Dependent "${e.property}" has not been analysed yet, saving this filter to regen queue.`),this._regenQueue.push({type:"filter",property:t,collection:this._name}),!0)}findAllDependents(e){const t=this._global.dependencyGraph,i=t[this._name][e].dependents,s=[];let n=0,o=[];for(let e of i)o.push(e),s.push(e);const a=()=>{n++;let e=o;o=[];for(let i of e){let e=this.parseKey(i),r=t[e.collection][e.property].dependents;for(let e of r)o.push(e),s.push(e)}if(n>1e3)return r("Maximum stack exceeded for dependent search.");0!==o.length&&a()};return a(),s}findAndUpdateDependents(e){let t=[];if(Array.isArray(e))for(let i of e){let e=this.findAllDependents(i);for(let i of e)t.includes(i)||t.push(i)}else t=this.findAllDependents(e);s(`Found dependents: ${JSON.stringify(t)}`),this.pushDependentsToRegenQueue(t)}pushDependentsToRegenQueue(e){for(let t of e){let e=this.parseKey(t);this._regenQueue.find(t=>t.property===e.property&&t.collection===e.collection)||this._regenQueue.push({type:"filter",property:e.property,collection:e.collection})}this.emitToRoot("processRegenQueue")}forceUpdate(e){this._filters.hasOwnProperty(e)?(this._regenQueue.push({type:"filter",property:e,collection:this._name}),this.emitToRoot("processRegenQueue")):this._mutableData.includes(e)&&(this.initDeepReactivity(this._public[e],e),this.updateSubscribers(e,this._public[e]),this.findAndUpdateDependents(e))}collect(e,t){if(!e)return r(`Collect error on collection ${this._name}: Data undefined`);Array.isArray(e)||(e=[e]),this._collecting=!0;let i=!1,n=[],o=[];if(t)if(Array.isArray(t)){i=!0;for(let e of t)this.createRelationForIndex(e),this._indexesToRegen.push(e),this._indexes[e]||(this._indexes[e]=[]),n.push({indexName:e,previousValue:this._indexes[e]})}else this.createRelationForIndex(t),this._indexesToRegen.push(t),this._indexes[t]||(this._indexes[t]=[]),o.push(t);if(Array.isArray(e))for(let i of e)this.processDataItem(i,t,e);else this.processDataItem(e,t);this.recordHistory("collect",{dataCollected:e,indexesCreated:o,indexesModified:n}),this._collecting=!1,s(`Collected ${e.length} items in ${this._name}. With index: ${t}`),this.regenerateGroupsAndFilters()}processDataItem(e,t){let i=!0;if(this._primaryKey||this.findPrimaryKey(e),null===e)return;if("object"!=typeof e)return;if(!e.hasOwnProperty(this._primaryKey))return this.dataRejectionHandler(e,"Primary key mismatch");let s=e[this._primaryKey],r=this._data[s];if(r&&(Object.keys(r).forEach(t=>{e.hasOwnProperty(t)||(e[t]=r[t])}),i=!1),t){Array.isArray(t)||(t=[t]);for(let e=0;e<t.length;e++){const i=t[e];this._indexes[i].includes(s)||this._indexes[i].push(s)}}for(let i of Object.keys(this._relations)){let s=this._relations[i];Array.isArray(s[t])&&s[t].push(e[i])}Object.keys(this._data).includes(s)&&this.findGroupsToRegen(s),this.findFiltersToRegenFromRelatedData(s),this.findFiltersToRegenFromRelatedGroup(t),this._data[s]=e,i&&this._collectionSize++}findGroupsToRegen(e){s(`looking for indexes for ${e}`);for(let t of Object.keys(this._indexes))this._indexes[t].includes(e)&&!this._indexesToRegen.includes(t)&&this._indexesToRegen.push(t)}findFiltersToRegenFromRelatedData(e){if(this._filtersRelatedToData[e])for(let t=0;t<this._filtersRelatedToData[e].length;t++){const i=this._filtersRelatedToData[e][t];this._filtersToForceRegen.includes(i)||this._filtersToForceRegen.push(i)}}findFiltersToRegenFromRelatedGroup(e){if(this._filtersRelatedToGroup[e])for(let t=0;t<this._filtersRelatedToGroup[e].length;t++){const i=this._filtersRelatedToGroup[e][t];this._filtersToForceRegen.includes(i)||this._filtersToForceRegen.push(i)}}regenerateGroupsAndFilters(){for(let e=0;e<this._indexesToRegen.length;e++){let t=this._indexesToRegen[e];s(`Rebuilding group "${t}" in collection "${this._name}"`),this.buildGroupFromIndex(t),this._global.dataRef[this._name][t]&&this.findAndUpdateDependents(t)}this._indexesToRegen=[];for(let e of this._filtersToForceRegen)this.pushDependentsToRegenQueue([`${this._name}/${e}`]),this.findAndUpdateDependents(e);this._filtersToForceRegen=[]}undo(e,t,i){let s=this._global.history.filter(e=>e.fromActionIdentifier===t);if(this.emitToRoot("undo",s),i)throw i}move(e,t,i,s){if(!this._indexes[t])return r(`Index "${t}" not found`);if(!1!==i&&null!=i&&!this._indexes[i])return r(`Index "${i}" not found`);Array.isArray(e)||(e=[e]);let n={ids:e,fromIndex:t,toIndex:i,previousFromIndexValue:this._indexes[t],previousToIndexValue:this._indexes[i]};for(let n of e){if(!this._data[n])return r(`Data for id "${n}" not found in collection ${this._name}`);this._indexes[t]=this._indexes[t].filter(e=>e!==n),i&&("unshift"===s?this._indexes[i].unshift(n):this._indexes[i].push(n))}this.buildGroupFromIndex(t),i&&this.buildGroupFromIndex(i),this.recordHistory("move",n),i?this.findAndUpdateDependents([t,i]):this.findAndUpdateDependents([t])}remove(e,t){if(void 0!==t&&!this._indexes[t])return r(`Group "${t}" not found.`);if(!t)return this.delete(e);if(Array.isArray(e)||(e=[e]),"object"==typeof e[0]&&e[0].hasOwnProperty(this._primaryKey))e=e.map(e=>e[this._primaryKey]);else if("number"!=typeof e[0])return r("Unable to remove data.");let i=this._indexes[t].concat([]);this._indexes[t]=this._indexes[t].filter(t=>!e.includes(t)),this.buildGroupFromIndex(t),this.recordHistory("remove",{group:t,previousValue:i}),this.findAndUpdateDependents(t)}put(e,t,i){if(!this._indexes[t])return r(`Index "${t}" not found`);Array.isArray(e)||(e=[e]);let s=this._indexes[t].concat([]);for(let s of e){let e=[];e=this._indexes[t].includes(s)?this._indexes[t].filter(e=>e!=s):this._indexes[t],"unshift"===i?e.unshift(s):e.push(s),this._indexes[t]=e}this.buildGroupFromIndex(t),this.recordHistory("put",{group:t,ids:e,previousDestIndex:s}),this.findAndUpdateDependents(t)}update(e,t){if(this._data[e]){let i=this._data[e],s=Object.keys(t),r={dataId:e,previousValues:{},newValues:t};for(let e of s)r.previousValues[e]=i[e],i[e]=t[e];this.recordHistory("update",r),this.internalDataModified(e)}else r(`Data for id "${e}" not found in collection ${this._name}`)}createRelationForFilterToData(e,t){Array.isArray(this._filtersRelatedToData[t])&&!this._filtersRelatedToData[t].includes(e)?this._filtersRelatedToData[t].push(e):this._filtersRelatedToData[t]=[e]}createRelationForFilterToGroup(e,t){Array.isArray(this._filtersRelatedToGroup[t])&&!this._filtersRelatedToGroup[t].includes(e)?this._filtersRelatedToGroup[t].push(e):this._filtersRelatedToGroup[t]=[e]}findById(e){if(this._executing&&this.createRelationForFilterToData(this._executing,e),this._data[e])return this._data[e];s(`findByID: Item "${e}" not found in collection "${this._name}"`)}getGroup(e){return this._executing&&this.createRelationForFilterToGroup(this._executing,e),this._indexes[e]?this.buildGroupFromIndex(e):[]}newGroup(e,t){Object.keys(this._indexes).includes(e)||(this._indexes[e]=t,this.recordHistory("newGroup",{createdGroup:e,data:t}))}modifyGroup(e){}delete(e){if("string"==typeof e)return r("Delete function only supports primary keys for data (integers), if you're trying to delete a group, please use deleteGroup()");const t=e=>{let t=Object.assign({},this._data.primaryKey);delete this._data[e],this.recordHistory("delete",{primaryKey:e,deleted:t})};if(Array.isArray(e))for(let i=0;i<e.length;i++){t(e[i])}else t(e);this.internalDataModified(e)}deleteGroup(e){if(!this._indexes[e])return r(`Group "${e}" not found.`);for(let t of this._indexes[e])this._data[t]&&delete this._data[t];let t=this._indexes[e];this._indexes[e]=[],this.buildGroupFromIndex(e),this.recordHistory("deleteGroup",{group:e,previousValue:t}),this.findAndUpdateDependents(e)}purge(){this._data={};for(let e of Object.keys(this._indexes))this._indexes[e]=[],this._indexesToRegen.push(e);this.regenerateGroupsAndFilters()}clean(){}increment(e,t,i){this.validateNumberForDataProperty(e,t,i)&&(this._data[e][t]+=i,this.recordHistory("increment",{primaryKey:e,property:t,amount:i}),this.internalDataModified(e))}decrement(e,t,i){this.validateNumberForDataProperty(e,t,i)&&(this._data[e][t]-=i,this.recordHistory("decrement",{primaryKey:e,property:t,amount:i}),this.internalDataModified(e))}throttle(e){let t=this._performingAction;this._throttles.push(t),setTimeout(()=>{this._throttles=this._throttles.filter(e=>e!==t),this._onThrottleEnd[t]&&setTimeout(()=>{this.executeAction(this._onThrottleEnd[t]),delete this._onThrottleEnd[t]})},e)}set(e,t){s(e,t)}watch(e,t){if(!this._public[e])return r(`Error in watch function, property "${e}" does not exist`);this._internalWatchers[e]||(this._internalWatchers[e]=[]),this._internalWatchers[e].push(t)}validateNumberForDataProperty(e,t,i){return!(!this._data[e]||!this._data[e][t]||"number"!=typeof i||"number"!=typeof this._data[e][t])||(r(`Property ${t} for ${e} is not a number`),!1)}dataRejectionHandler(e,t){let i=`[Data Rejection] - ${t} - Data was not collected, but instead saved to the errors object("_errors") on root Pulse instance.`;this._global.errors.push({data:e,timestamp:new Date,error:i}),r(i)}parseKey(e){return{collection:e.split("/")[0],property:e.split("/")[1]}}}},function(e,t){e.exports={Log:e=>{},assert:e=>{},warn:e=>{console.error(`[Pulse] - ${e}`)}}},function(e,t,i){const s=i(3);e.exports={Library:s}},function(e,t,i){const{Log:s,assert:r,warn:n}=i(1),o=i(0),a=i(4),l=i(5);e.exports=class{constructor({storage:e,collections:t={},utils:i={},services:r={},staticData:n={},request:o={},data:a={},actions:l={},filters:h={},watch:c={},routes:d={},local:p={},groups:u=[],indexes:_=[],persist:f=[],config:g={}}){window._pulse=this,this._collections={},this._subscribers=[],this._mappedProperties={},this._eventBus=this.activateEventBus(),this._global={regenQueue:[],errors:[],history:[],allFilters:[],collectionNamespace:[],updateSubscribers:this.updateSubscribers,eventBus:this._eventBus,dependenciesFound:[],dependencyGraph:{},generatedFilters:[],record:!1,initComplete:!1,request:{},dataRef:{},internalDataRef:{},storage:{},relations:{},config:g},this.initStorage(e),this.initCollections(t,{data:a,indexes:_,actions:l,filters:h,routes:d,groups:u,watch:c,persist:f,local:p},o),this.utils=i,this.services=r,this.staticData=n,this.buildGlobalDataRefrenceTree(),this.prepareDependencyGraph(),this.executeAllFilters(),this.processRegenQueue(),this._global.initComplete=!0,s("INIT_COMPLETE"),this.runOnReadyHandlers()}install(e){const t=window._pulse;let i=this;e.mixin({beforeCreate(){Object.keys(i._global.dataRef).forEach(e=>{this["$"+e]=i._global.dataRef[e]}),this.$utils=t.utils,this.$services=t.services,this.$staticData=t.staticData,this.mapData=i.mapData}})}mapData(e,t){const i={},s=window._pulse;return e&&s.normalizeMap(e).forEach(({key:e,val:r})=>{let n=r.split("/")[0],o=r.split("/")[1];if(!s.hasOwnProperty(n))return;let a=s._collections[n]._subscribedToData,l={component:t||this,key:e};a.hasOwnProperty(o)?a[o].push(l):a[o]=[l],i[e]=s[n][o]}),i}mapCollections(){const e={};return Object.keys(this._global.dataRef).forEach(t=>{e[t]=this._global.dataRef[t]}),e}normalizeMap(e){return Array.isArray(e)?e.map(e=>({key:e,val:e})):Object.keys(e).map(t=>({key:t,val:e[t]}))}activateEventBus(){return new Proxy({message:null},{set:(e,t,i)=>("processRegenQueue"===i.type&&this.processRegenQueue(),"createForeignGroupRelation"===i.type&&(this._collections[i.data.foreignCollection]._foreignGroupRelations[i.data.foreignData]={collection:i.data.dependentCollection,groupToRegen:i.data.dependentGroup}),"rebuildGroupsWithRelations"===i.type&&this._collections[i.data.collection].buildGroupFromIndex(i.data.groupToRegen),"undo"===i.type&&this.processUndo(i.data),e[t]="waiting",!0)})}initStorage(e={}){let t="custom";if(e.async||(e.async=!1),"sessionStorage"===e)t="sessionStorage",this.assignStorage(sessionStorage,t,e.async);else if(e&&e.set&&e.get)t="custom",this.assignStorage(e,t,e.async);else{if(!window.localStorage)return r("No storage API present, data will not persist");t="localStorage",this.assignStorage(localStorage,t,e.async)}}assignStorage(e,t,i){const s={type:t,async:i};e.set&&(s.set=e.set.bind(e)),e.setItem&&(s.set=e.setItem.bind(e)),e.get&&(s.get=e.get.bind(e)),e.getItem&&(s.get=e.getItem.bind(e)),e.remove&&(s.remove=e.remove.bind(e)),e.removeItem&&(s.remove=e.removeItem.bind(e)),e.clear&&(s.clear=e.clear.bind(e)),this._global.storage=s}prepareDependencyGraph(){let e=this._global.dependencyGraph,t=this._global.collectionNamespace;for(let i of t){e[i]={};let t=this._collections[i]._public,s=[],r=["filters","groups","data"];for(let e of r)Object.keys(t[e]).forEach(e=>s.push(e));for(let t of s)e[i][t]={dependencies:[],dependents:[]}}}initCollections(e,t,i){this._collections.base=new a(this._global,t,i),this._collections.request=new l(this._global,i),this._global.collectionNamespace=["base","request"],Object.keys(e).forEach(t=>{this._global.collectionNamespace.push(t),this._collections[t]=new o({name:t,global:this._global},e[t])}),Object.keys(this._collections).forEach(e=>{this[e]?r(`Collection name conflict, instance already has "${e}" thus it will not be accessable on the root state tree.`):this[e]=this._collections[e]._public})}buildGlobalDataRefrenceTree(){if(this._collections){let e=Object.keys(this._collections);for(let t of e)this._global.dataRef[t]=this._collections[t]._public}}executeAllFilters(){let e=Object.keys(this._collections);for(let t of e)this._collections[t].analyseFilters()}processRegenQueue(){if(0!==this._global.regenQueue.length){s(`Regen queue processing. There are ${this._global.regenQueue.length} in the queue.`);for(let e of this._global.regenQueue){const e=this._global.regenQueue.shift(),t=`${e.collection}/${e.property}`;if(t===this.lastRegenerated)return n(`Prevented infinate loop for ${t}`),void(this.lastRegenerated="");this._collections[e.collection].executeAndAnalyseFilter(e.property),this.lastRegenerated=t,s(`There are ${this._global.regenQueue.length} properties left to regenerate.`)}this._global.regenQueue.length>0?this.processRegenQueue():this.lastRegenerated=""}}runOnReadyHandlers(){const e=Object.keys(this._collections);for(let t=0;t<e.length;t++)this._collections[e[t]]._onReady()}processUndo(e){for(let t=0;t<e.length;t++){const i=e[t],s=this._collections[i.collection],r=i.data;switch(i.type){case"mutation":case"collect":break;case"put":s.replaceIndex(r.group,r.previousDestIndex);break;case"remove":s.replaceIndex(r.group,r.previousValue);break;case"move":s.replaceIndex(r.fromIndex,r.previousFromIndexValue),r.toIndex&&s.replaceIndex(r.toIndex,r.previousToIndexValue);break;case"delete":s._public[r.primaryKey]=r.deleted,s.internalDataModified(r.primaryKey),s.recordHistory("restore",{primaryKey:r.primaryKey,deleted:r.deleted});break;case"restore":s.delete(r.primaryKey);break;case"newGroup":s.deleteGroup(r.createdGroup);break;case"deleteGroup":s.newGroup(r.group,r.previousValue);break;case"indexMutation":s.replaceIndex(r.index,r.previousIndex);break;case"decrement":s.increment(i.data.primaryKey,i.data.property,i.data.amount);break;case"increment":s.decrement(i.data.primaryKey,i.data.property,i.data.amount)}}}}},function(e,t,i){const s=i(0);e.exports=class extends s{constructor(e,{data:t={},actions:i={},routes:s={},filters:r={},groups:n=[],watch:o={},persist:a=[]}){t.isAuthenticated=!1,t.appReady=!1,a.push("isAuthenticated"),super({name:"base",global:e},{data:t,actions:i,groups:n,persist:a,routes:s,filters:r,watch:o})}}},function(e,t,i){const s=i(0);e.exports=class extends s{constructor(e,{baseURL:t,requestIntercept:i,responseIntercept:s,mode:r,credentials:n,headers:o,saveHistory:a}){let l={baseURL:t,mode:"cors",credentials:"same-origin",headers:{Accept:"application/json"}};t||(l.baseURL=null),o&&Object.keys(o).forEach(e=>{l.headers[e]=o[e]}),n&&(l.credentials=n),r&&(l.mode=r),super({name:"request",global:e},{groups:[],data:l,persist:["baseURL"]}),this._requestIntercept=i,this._responseIntercept=s,this._saveHistory=void 0===this._saveHistory,this._global.request={get:this.get.bind(this),post:this.post.bind(this),put:this.put.bind(this),patch:this.patch.bind(this),delete:this.delete.bind(this)}}send(e,t,i,s){return new Promise((r,n)=>{const o=Object.assign({},this._public.headers);let a;s&&Object.keys(s).forEach(e=>{o[e]=s[e]}),"get"!=t&&(o["Content-Type"]="application/json"),a=e.startsWith("http")?e:`${this._global.dataRef.request.baseURL}/${e}`,i=JSON.stringify(i),this._options={},this._options.credentials=this._global.dataRef.request.credentials,this._options.mode=this._global.dataRef.request.mode;const l=Object.assign({headers:o,method:t.toUpperCase(),body:"get"==t?null:i},this._options);this._requestIntercept&&this._requestIntercept(l),fetch(a,l).then(async e=>{const t=e.headers.get("content-type");let s;if(i=t&&-1!==t.indexOf("application/json")?await e.json():await e.text(),this._saveHistory||this.collect({id:Date.now(),status:e.status,timestamp:new Date,response:i}),Array.isArray(i)||"object"!=typeof i)s=i;else{s=Object.create({response:()=>e});for(let e of Object.keys(i))s[e]=i[e]}if(this._responseIntercept&&this._responseIntercept(),e.ok||e.redirected)return r(s);n(s)}).catch(n)})}get(e,t){return this.send(e,"get",{},t)}post(e,t,i){return this.send(e,"post",t,i)}patch(e,t,i){return this.send(e,"patch",t,i)}delete(e,t,i){return this.send(e,"delete",t,i)}put(e,t,i){return this.send(e,"put",t,i)}}}]));